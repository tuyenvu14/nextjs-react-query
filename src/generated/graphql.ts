import { useQuery, UseQueryOptions } from '@tanstack/react-query';
import { useFetchData } from './fetcher';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  DateTime: { input: any; output: any; }
  Decimal: { input: any; output: any; }
  JSON: { input: any; output: any; }
  JWT: { input: any; output: any; }
};

export type Auth = {
  __typename?: 'Auth';
  /** JWT access token */
  accessToken: Scalars['JWT']['output'];
  /** JWT refresh token */
  refreshToken: Scalars['JWT']['output'];
  user: User;
};

export type BidLotResult = {
  __typename?: 'BidLotResult';
  _count: BidLotResultCount;
  bidNotificationContractors?: Maybe<Array<BidNotificationContractor>>;
  bidNotificationResult?: Maybe<BidNotificationResult>;
  bidNotificationResultId?: Maybe<Scalars['String']['output']>;
  bidPackageLotCode?: Maybe<Scalars['String']['output']>;
  bidPackageLotId?: Maybe<Scalars['String']['output']>;
  bidPackgeLot?: Maybe<BidPackageLot>;
  bidSelectionPlan?: Maybe<BidSelectionPlan>;
  bidSelectionPlanCode?: Maybe<Scalars['String']['output']>;
  bidSelectionPlanId?: Maybe<Scalars['String']['output']>;
  bidSelectionPlanName?: Maybe<Scalars['String']['output']>;
  contractorMedicineList?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  goodsList?: Maybe<Scalars['String']['output']>;
  goodsListEn?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  listFailTechnique?: Maybe<Scalars['String']['output']>;
  reason?: Maybe<Scalars['String']['output']>;
  statusCode?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  updatedBy?: Maybe<Scalars['String']['output']>;
  winningCode?: Maybe<Scalars['String']['output']>;
};

export type BidLotResultCount = {
  __typename?: 'BidLotResultCount';
  bidNotificationContractors: Scalars['Int']['output'];
};

export type BidLotResultCreateManyBidNotificationResultInput = {
  bidPackageLotCode?: InputMaybe<Scalars['String']['input']>;
  bidPackageLotId?: InputMaybe<Scalars['String']['input']>;
  bidSelectionPlanCode?: InputMaybe<Scalars['String']['input']>;
  bidSelectionPlanId?: InputMaybe<Scalars['String']['input']>;
  bidSelectionPlanName?: InputMaybe<Scalars['String']['input']>;
  contractorMedicineList?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  goodsList?: InputMaybe<Scalars['String']['input']>;
  goodsListEn?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  listFailTechnique?: InputMaybe<Scalars['String']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  statusCode?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  winningCode?: InputMaybe<Scalars['String']['input']>;
};

export type BidLotResultCreateManyBidNotificationResultInputEnvelope = {
  data: Array<BidLotResultCreateManyBidNotificationResultInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidLotResultCreateManyBidPackgeLotInput = {
  bidNotificationResultId?: InputMaybe<Scalars['String']['input']>;
  bidPackageLotCode?: InputMaybe<Scalars['String']['input']>;
  bidSelectionPlanCode?: InputMaybe<Scalars['String']['input']>;
  bidSelectionPlanId?: InputMaybe<Scalars['String']['input']>;
  bidSelectionPlanName?: InputMaybe<Scalars['String']['input']>;
  contractorMedicineList?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  goodsList?: InputMaybe<Scalars['String']['input']>;
  goodsListEn?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  listFailTechnique?: InputMaybe<Scalars['String']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  statusCode?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  winningCode?: InputMaybe<Scalars['String']['input']>;
};

export type BidLotResultCreateManyBidPackgeLotInputEnvelope = {
  data: Array<BidLotResultCreateManyBidPackgeLotInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidLotResultCreateManyBidSelectionPlanInput = {
  bidNotificationResultId?: InputMaybe<Scalars['String']['input']>;
  bidPackageLotCode?: InputMaybe<Scalars['String']['input']>;
  bidPackageLotId?: InputMaybe<Scalars['String']['input']>;
  bidSelectionPlanCode?: InputMaybe<Scalars['String']['input']>;
  bidSelectionPlanName?: InputMaybe<Scalars['String']['input']>;
  contractorMedicineList?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  goodsList?: InputMaybe<Scalars['String']['input']>;
  goodsListEn?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  listFailTechnique?: InputMaybe<Scalars['String']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  statusCode?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  winningCode?: InputMaybe<Scalars['String']['input']>;
};

export type BidLotResultCreateManyBidSelectionPlanInputEnvelope = {
  data: Array<BidLotResultCreateManyBidSelectionPlanInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidLotResultCreateNestedManyWithoutBidNotificationResultInput = {
  connect?: InputMaybe<Array<BidLotResultWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidLotResultCreateOrConnectWithoutBidNotificationResultInput>>;
  create?: InputMaybe<Array<BidLotResultCreateWithoutBidNotificationResultInput>>;
  createMany?: InputMaybe<BidLotResultCreateManyBidNotificationResultInputEnvelope>;
};

export type BidLotResultCreateNestedManyWithoutBidPackgeLotInput = {
  connect?: InputMaybe<Array<BidLotResultWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidLotResultCreateOrConnectWithoutBidPackgeLotInput>>;
  create?: InputMaybe<Array<BidLotResultCreateWithoutBidPackgeLotInput>>;
  createMany?: InputMaybe<BidLotResultCreateManyBidPackgeLotInputEnvelope>;
};

export type BidLotResultCreateNestedManyWithoutBidSelectionPlanInput = {
  connect?: InputMaybe<Array<BidLotResultWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidLotResultCreateOrConnectWithoutBidSelectionPlanInput>>;
  create?: InputMaybe<Array<BidLotResultCreateWithoutBidSelectionPlanInput>>;
  createMany?: InputMaybe<BidLotResultCreateManyBidSelectionPlanInputEnvelope>;
};

export type BidLotResultCreateNestedOneWithoutBidNotificationContractorsInput = {
  connect?: InputMaybe<BidLotResultWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidLotResultCreateOrConnectWithoutBidNotificationContractorsInput>;
  create?: InputMaybe<BidLotResultCreateWithoutBidNotificationContractorsInput>;
};

export type BidLotResultCreateOrConnectWithoutBidNotificationContractorsInput = {
  create: BidLotResultCreateWithoutBidNotificationContractorsInput;
  where: BidLotResultWhereUniqueInput;
};

export type BidLotResultCreateOrConnectWithoutBidNotificationResultInput = {
  create: BidLotResultCreateWithoutBidNotificationResultInput;
  where: BidLotResultWhereUniqueInput;
};

export type BidLotResultCreateOrConnectWithoutBidPackgeLotInput = {
  create: BidLotResultCreateWithoutBidPackgeLotInput;
  where: BidLotResultWhereUniqueInput;
};

export type BidLotResultCreateOrConnectWithoutBidSelectionPlanInput = {
  create: BidLotResultCreateWithoutBidSelectionPlanInput;
  where: BidLotResultWhereUniqueInput;
};

export type BidLotResultCreateWithoutBidNotificationContractorsInput = {
  bidNotificationResult?: InputMaybe<BidNotificationResultCreateNestedOneWithoutBidLotResultsInput>;
  bidPackageLotCode?: InputMaybe<Scalars['String']['input']>;
  bidPackgeLot?: InputMaybe<BidPackageLotCreateNestedOneWithoutBidLotResultsInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanCreateNestedOneWithoutBidLotResultsInput>;
  bidSelectionPlanCode?: InputMaybe<Scalars['String']['input']>;
  bidSelectionPlanName?: InputMaybe<Scalars['String']['input']>;
  contractorMedicineList?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  goodsList?: InputMaybe<Scalars['String']['input']>;
  goodsListEn?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  listFailTechnique?: InputMaybe<Scalars['String']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  statusCode?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  winningCode?: InputMaybe<Scalars['String']['input']>;
};

export type BidLotResultCreateWithoutBidNotificationResultInput = {
  bidNotificationContractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutBidLotResultInput>;
  bidPackageLotCode?: InputMaybe<Scalars['String']['input']>;
  bidPackgeLot?: InputMaybe<BidPackageLotCreateNestedOneWithoutBidLotResultsInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanCreateNestedOneWithoutBidLotResultsInput>;
  bidSelectionPlanCode?: InputMaybe<Scalars['String']['input']>;
  bidSelectionPlanName?: InputMaybe<Scalars['String']['input']>;
  contractorMedicineList?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  goodsList?: InputMaybe<Scalars['String']['input']>;
  goodsListEn?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  listFailTechnique?: InputMaybe<Scalars['String']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  statusCode?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  winningCode?: InputMaybe<Scalars['String']['input']>;
};

export type BidLotResultCreateWithoutBidPackgeLotInput = {
  bidNotificationContractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutBidLotResultInput>;
  bidNotificationResult?: InputMaybe<BidNotificationResultCreateNestedOneWithoutBidLotResultsInput>;
  bidPackageLotCode?: InputMaybe<Scalars['String']['input']>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanCreateNestedOneWithoutBidLotResultsInput>;
  bidSelectionPlanCode?: InputMaybe<Scalars['String']['input']>;
  bidSelectionPlanName?: InputMaybe<Scalars['String']['input']>;
  contractorMedicineList?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  goodsList?: InputMaybe<Scalars['String']['input']>;
  goodsListEn?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  listFailTechnique?: InputMaybe<Scalars['String']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  statusCode?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  winningCode?: InputMaybe<Scalars['String']['input']>;
};

export type BidLotResultCreateWithoutBidSelectionPlanInput = {
  bidNotificationContractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutBidLotResultInput>;
  bidNotificationResult?: InputMaybe<BidNotificationResultCreateNestedOneWithoutBidLotResultsInput>;
  bidPackageLotCode?: InputMaybe<Scalars['String']['input']>;
  bidPackgeLot?: InputMaybe<BidPackageLotCreateNestedOneWithoutBidLotResultsInput>;
  bidSelectionPlanCode?: InputMaybe<Scalars['String']['input']>;
  bidSelectionPlanName?: InputMaybe<Scalars['String']['input']>;
  contractorMedicineList?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  goodsList?: InputMaybe<Scalars['String']['input']>;
  goodsListEn?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  listFailTechnique?: InputMaybe<Scalars['String']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  statusCode?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  winningCode?: InputMaybe<Scalars['String']['input']>;
};

export type BidLotResultListRelationFilter = {
  every?: InputMaybe<BidLotResultWhereInput>;
  none?: InputMaybe<BidLotResultWhereInput>;
  some?: InputMaybe<BidLotResultWhereInput>;
};

export type BidLotResultOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type BidLotResultOrderByWithRelationInput = {
  bidNotificationContractors?: InputMaybe<BidNotificationContractorOrderByRelationAggregateInput>;
  bidNotificationResult?: InputMaybe<BidNotificationResultOrderByWithRelationInput>;
  bidNotificationResultId?: InputMaybe<SortOrderInput>;
  bidPackageLotCode?: InputMaybe<SortOrderInput>;
  bidPackageLotId?: InputMaybe<SortOrderInput>;
  bidPackgeLot?: InputMaybe<BidPackageLotOrderByWithRelationInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanOrderByWithRelationInput>;
  bidSelectionPlanCode?: InputMaybe<SortOrderInput>;
  bidSelectionPlanId?: InputMaybe<SortOrderInput>;
  bidSelectionPlanName?: InputMaybe<SortOrderInput>;
  contractorMedicineList?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  createdBy?: InputMaybe<SortOrderInput>;
  goodsList?: InputMaybe<SortOrderInput>;
  goodsListEn?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  listFailTechnique?: InputMaybe<SortOrderInput>;
  reason?: InputMaybe<SortOrderInput>;
  statusCode?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  updatedBy?: InputMaybe<SortOrderInput>;
  winningCode?: InputMaybe<SortOrderInput>;
};

export type BidLotResultScalarWhereInput = {
  AND?: InputMaybe<Array<BidLotResultScalarWhereInput>>;
  NOT?: InputMaybe<Array<BidLotResultScalarWhereInput>>;
  OR?: InputMaybe<Array<BidLotResultScalarWhereInput>>;
  bidNotificationResultId?: InputMaybe<StringNullableFilter>;
  bidPackageLotCode?: InputMaybe<StringNullableFilter>;
  bidPackageLotId?: InputMaybe<StringNullableFilter>;
  bidSelectionPlanCode?: InputMaybe<StringNullableFilter>;
  bidSelectionPlanId?: InputMaybe<StringNullableFilter>;
  bidSelectionPlanName?: InputMaybe<StringNullableFilter>;
  contractorMedicineList?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  goodsList?: InputMaybe<StringNullableFilter>;
  goodsListEn?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  listFailTechnique?: InputMaybe<StringNullableFilter>;
  reason?: InputMaybe<StringNullableFilter>;
  statusCode?: InputMaybe<IntNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  winningCode?: InputMaybe<StringNullableFilter>;
};

export type BidLotResultUpdateManyMutationInput = {
  bidPackageLotCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidSelectionPlanCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidSelectionPlanName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractorMedicineList?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  goodsList?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  goodsListEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  listFailTechnique?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  statusCode?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  winningCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidLotResultUpdateManyWithWhereWithoutBidNotificationResultInput = {
  data: BidLotResultUpdateManyMutationInput;
  where: BidLotResultScalarWhereInput;
};

export type BidLotResultUpdateManyWithWhereWithoutBidPackgeLotInput = {
  data: BidLotResultUpdateManyMutationInput;
  where: BidLotResultScalarWhereInput;
};

export type BidLotResultUpdateManyWithWhereWithoutBidSelectionPlanInput = {
  data: BidLotResultUpdateManyMutationInput;
  where: BidLotResultScalarWhereInput;
};

export type BidLotResultUpdateManyWithoutBidNotificationResultNestedInput = {
  connect?: InputMaybe<Array<BidLotResultWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidLotResultCreateOrConnectWithoutBidNotificationResultInput>>;
  create?: InputMaybe<Array<BidLotResultCreateWithoutBidNotificationResultInput>>;
  createMany?: InputMaybe<BidLotResultCreateManyBidNotificationResultInputEnvelope>;
  delete?: InputMaybe<Array<BidLotResultWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidLotResultScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidLotResultWhereUniqueInput>>;
  set?: InputMaybe<Array<BidLotResultWhereUniqueInput>>;
  update?: InputMaybe<Array<BidLotResultUpdateWithWhereUniqueWithoutBidNotificationResultInput>>;
  updateMany?: InputMaybe<Array<BidLotResultUpdateManyWithWhereWithoutBidNotificationResultInput>>;
  upsert?: InputMaybe<Array<BidLotResultUpsertWithWhereUniqueWithoutBidNotificationResultInput>>;
};

export type BidLotResultUpdateManyWithoutBidPackgeLotNestedInput = {
  connect?: InputMaybe<Array<BidLotResultWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidLotResultCreateOrConnectWithoutBidPackgeLotInput>>;
  create?: InputMaybe<Array<BidLotResultCreateWithoutBidPackgeLotInput>>;
  createMany?: InputMaybe<BidLotResultCreateManyBidPackgeLotInputEnvelope>;
  delete?: InputMaybe<Array<BidLotResultWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidLotResultScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidLotResultWhereUniqueInput>>;
  set?: InputMaybe<Array<BidLotResultWhereUniqueInput>>;
  update?: InputMaybe<Array<BidLotResultUpdateWithWhereUniqueWithoutBidPackgeLotInput>>;
  updateMany?: InputMaybe<Array<BidLotResultUpdateManyWithWhereWithoutBidPackgeLotInput>>;
  upsert?: InputMaybe<Array<BidLotResultUpsertWithWhereUniqueWithoutBidPackgeLotInput>>;
};

export type BidLotResultUpdateManyWithoutBidSelectionPlanNestedInput = {
  connect?: InputMaybe<Array<BidLotResultWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidLotResultCreateOrConnectWithoutBidSelectionPlanInput>>;
  create?: InputMaybe<Array<BidLotResultCreateWithoutBidSelectionPlanInput>>;
  createMany?: InputMaybe<BidLotResultCreateManyBidSelectionPlanInputEnvelope>;
  delete?: InputMaybe<Array<BidLotResultWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidLotResultScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidLotResultWhereUniqueInput>>;
  set?: InputMaybe<Array<BidLotResultWhereUniqueInput>>;
  update?: InputMaybe<Array<BidLotResultUpdateWithWhereUniqueWithoutBidSelectionPlanInput>>;
  updateMany?: InputMaybe<Array<BidLotResultUpdateManyWithWhereWithoutBidSelectionPlanInput>>;
  upsert?: InputMaybe<Array<BidLotResultUpsertWithWhereUniqueWithoutBidSelectionPlanInput>>;
};

export type BidLotResultUpdateOneWithoutBidNotificationContractorsNestedInput = {
  connect?: InputMaybe<BidLotResultWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidLotResultCreateOrConnectWithoutBidNotificationContractorsInput>;
  create?: InputMaybe<BidLotResultCreateWithoutBidNotificationContractorsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<BidLotResultUpdateWithoutBidNotificationContractorsInput>;
  upsert?: InputMaybe<BidLotResultUpsertWithoutBidNotificationContractorsInput>;
};

export type BidLotResultUpdateWithWhereUniqueWithoutBidNotificationResultInput = {
  data: BidLotResultUpdateWithoutBidNotificationResultInput;
  where: BidLotResultWhereUniqueInput;
};

export type BidLotResultUpdateWithWhereUniqueWithoutBidPackgeLotInput = {
  data: BidLotResultUpdateWithoutBidPackgeLotInput;
  where: BidLotResultWhereUniqueInput;
};

export type BidLotResultUpdateWithWhereUniqueWithoutBidSelectionPlanInput = {
  data: BidLotResultUpdateWithoutBidSelectionPlanInput;
  where: BidLotResultWhereUniqueInput;
};

export type BidLotResultUpdateWithoutBidNotificationContractorsInput = {
  bidNotificationResult?: InputMaybe<BidNotificationResultUpdateOneWithoutBidLotResultsNestedInput>;
  bidPackageLotCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPackgeLot?: InputMaybe<BidPackageLotUpdateOneWithoutBidLotResultsNestedInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanUpdateOneWithoutBidLotResultsNestedInput>;
  bidSelectionPlanCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidSelectionPlanName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractorMedicineList?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  goodsList?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  goodsListEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  listFailTechnique?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  statusCode?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  winningCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidLotResultUpdateWithoutBidNotificationResultInput = {
  bidNotificationContractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutBidLotResultNestedInput>;
  bidPackageLotCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPackgeLot?: InputMaybe<BidPackageLotUpdateOneWithoutBidLotResultsNestedInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanUpdateOneWithoutBidLotResultsNestedInput>;
  bidSelectionPlanCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidSelectionPlanName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractorMedicineList?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  goodsList?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  goodsListEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  listFailTechnique?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  statusCode?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  winningCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidLotResultUpdateWithoutBidPackgeLotInput = {
  bidNotificationContractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutBidLotResultNestedInput>;
  bidNotificationResult?: InputMaybe<BidNotificationResultUpdateOneWithoutBidLotResultsNestedInput>;
  bidPackageLotCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanUpdateOneWithoutBidLotResultsNestedInput>;
  bidSelectionPlanCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidSelectionPlanName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractorMedicineList?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  goodsList?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  goodsListEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  listFailTechnique?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  statusCode?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  winningCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidLotResultUpdateWithoutBidSelectionPlanInput = {
  bidNotificationContractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutBidLotResultNestedInput>;
  bidNotificationResult?: InputMaybe<BidNotificationResultUpdateOneWithoutBidLotResultsNestedInput>;
  bidPackageLotCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPackgeLot?: InputMaybe<BidPackageLotUpdateOneWithoutBidLotResultsNestedInput>;
  bidSelectionPlanCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidSelectionPlanName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractorMedicineList?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  goodsList?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  goodsListEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  listFailTechnique?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  statusCode?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  winningCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidLotResultUpsertWithWhereUniqueWithoutBidNotificationResultInput = {
  create: BidLotResultCreateWithoutBidNotificationResultInput;
  update: BidLotResultUpdateWithoutBidNotificationResultInput;
  where: BidLotResultWhereUniqueInput;
};

export type BidLotResultUpsertWithWhereUniqueWithoutBidPackgeLotInput = {
  create: BidLotResultCreateWithoutBidPackgeLotInput;
  update: BidLotResultUpdateWithoutBidPackgeLotInput;
  where: BidLotResultWhereUniqueInput;
};

export type BidLotResultUpsertWithWhereUniqueWithoutBidSelectionPlanInput = {
  create: BidLotResultCreateWithoutBidSelectionPlanInput;
  update: BidLotResultUpdateWithoutBidSelectionPlanInput;
  where: BidLotResultWhereUniqueInput;
};

export type BidLotResultUpsertWithoutBidNotificationContractorsInput = {
  create: BidLotResultCreateWithoutBidNotificationContractorsInput;
  update: BidLotResultUpdateWithoutBidNotificationContractorsInput;
};

export type BidLotResultWhereInput = {
  AND?: InputMaybe<Array<BidLotResultWhereInput>>;
  NOT?: InputMaybe<Array<BidLotResultWhereInput>>;
  OR?: InputMaybe<Array<BidLotResultWhereInput>>;
  bidNotificationContractors?: InputMaybe<BidNotificationContractorListRelationFilter>;
  bidNotificationResult?: InputMaybe<BidNotificationResultWhereInput>;
  bidNotificationResultId?: InputMaybe<StringNullableFilter>;
  bidPackageLotCode?: InputMaybe<StringNullableFilter>;
  bidPackageLotId?: InputMaybe<StringNullableFilter>;
  bidPackgeLot?: InputMaybe<BidPackageLotWhereInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanWhereInput>;
  bidSelectionPlanCode?: InputMaybe<StringNullableFilter>;
  bidSelectionPlanId?: InputMaybe<StringNullableFilter>;
  bidSelectionPlanName?: InputMaybe<StringNullableFilter>;
  contractorMedicineList?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  goodsList?: InputMaybe<StringNullableFilter>;
  goodsListEn?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  listFailTechnique?: InputMaybe<StringNullableFilter>;
  reason?: InputMaybe<StringNullableFilter>;
  statusCode?: InputMaybe<IntNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  winningCode?: InputMaybe<StringNullableFilter>;
};

export type BidLotResultWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotification = {
  __typename?: 'BidNotification';
  _count: BidNotificationCount;
  bidNotificationChapters?: Maybe<Array<BidNotificationChapter>>;
  bidNotificationClarifies?: Maybe<Array<BidNotificationClarify>>;
  bidNotificationCode?: Maybe<Scalars['String']['output']>;
  bidNotificationId?: Maybe<Scalars['String']['output']>;
  bidNotificationResultGoodsPrices?: Maybe<Array<BidNotificationResultGoodsPrice>>;
  bidNotificationStatus?: Maybe<CatBidNotificationStatus>;
  bidPackage?: Maybe<BidPackage>;
  bidPackageCode?: Maybe<Scalars['String']['output']>;
  bidPackageId?: Maybe<Scalars['String']['output']>;
  bidPackageName?: Maybe<Scalars['String']['output']>;
  bidPetitionContractors?: Maybe<Array<BidPetitionContractor>>;
  bidPreConferences?: Maybe<Array<BidPreConference>>;
  bidSelectionPlan?: Maybe<BidSelectionPlan>;
  briefFileId?: Maybe<Scalars['String']['output']>;
  briefFileIdEn?: Maybe<Scalars['String']['output']>;
  briefFileName?: Maybe<Scalars['String']['output']>;
  briefFileNameEn?: Maybe<Scalars['String']['output']>;
  cancelByCode?: Maybe<Scalars['String']['output']>;
  cancelDate?: Maybe<Scalars['DateTime']['output']>;
  cancelDecisionAgency?: Maybe<Scalars['String']['output']>;
  cancelDecisionDate?: Maybe<Scalars['DateTime']['output']>;
  cancelDecisionFileId?: Maybe<Scalars['String']['output']>;
  cancelDecisionFileName?: Maybe<Scalars['String']['output']>;
  cancelDecisionNo?: Maybe<Scalars['DateTime']['output']>;
  cancelReason?: Maybe<Scalars['String']['output']>;
  cancelType?: Maybe<Scalars['String']['output']>;
  chapterFiles?: Maybe<Array<BidNotificationChapterFile>>;
  closeDate?: Maybe<Scalars['DateTime']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  constructionType?: Maybe<CatConstructionType>;
  constructionTypeCode?: Maybe<Scalars['String']['output']>;
  constructionTypeId?: Maybe<Scalars['String']['output']>;
  contractors?: Maybe<Array<BidNotificationContractor>>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  decisionAgency?: Maybe<Scalars['String']['output']>;
  decisionAgencyEn?: Maybe<Scalars['String']['output']>;
  decisionDate?: Maybe<Scalars['DateTime']['output']>;
  decisionFileId?: Maybe<Scalars['String']['output']>;
  decisionFileIdEn?: Maybe<Scalars['String']['output']>;
  decisionFileName?: Maybe<Scalars['String']['output']>;
  decisionFileNameEn?: Maybe<Scalars['String']['output']>;
  decisionNo?: Maybe<Scalars['String']['output']>;
  decisionNoEn?: Maybe<Scalars['String']['output']>;
  deletedAt?: Maybe<Scalars['DateTime']['output']>;
  fileId?: Maybe<Scalars['String']['output']>;
  fileName?: Maybe<Scalars['String']['output']>;
  guaranteeForm?: Maybe<Scalars['String']['output']>;
  guaranteeValue?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  investField?: Maybe<CatBidField>;
  investFieldCode?: Maybe<Scalars['String']['output']>;
  investFieldId?: Maybe<Scalars['String']['output']>;
  investor?: Maybe<Organization>;
  investorCode?: Maybe<Scalars['String']['output']>;
  investorId?: Maybe<Scalars['String']['output']>;
  investorName?: Maybe<Scalars['String']['output']>;
  isInviteInterest: Scalars['Boolean']['output'];
  isLatest: Scalars['Boolean']['output'];
  isPreNotification: Scalars['Boolean']['output'];
  issueLocation?: Maybe<Scalars['String']['output']>;
  openDate?: Maybe<Scalars['DateTime']['output']>;
  openLocation?: Maybe<Scalars['String']['output']>;
  otherFileId?: Maybe<Scalars['String']['output']>;
  otherFileIdEn?: Maybe<Scalars['String']['output']>;
  otherFileName?: Maybe<Scalars['String']['output']>;
  otherFileNameEn?: Maybe<Scalars['String']['output']>;
  planCode?: Maybe<Scalars['String']['output']>;
  planId?: Maybe<Scalars['String']['output']>;
  planName?: Maybe<Scalars['String']['output']>;
  planVersion?: Maybe<Scalars['String']['output']>;
  processApply?: Maybe<CatProcessApply>;
  processApplyCode?: Maybe<Scalars['String']['output']>;
  processApplyId?: Maybe<Scalars['String']['output']>;
  procuringEntity?: Maybe<Organization>;
  procuringEntityCode?: Maybe<Scalars['String']['output']>;
  procuringEntityId?: Maybe<Scalars['String']['output']>;
  procuringEntityName?: Maybe<Scalars['String']['output']>;
  publishedAt?: Maybe<Scalars['DateTime']['output']>;
  receiveLocation?: Maybe<Scalars['String']['output']>;
  result?: Maybe<Array<BidNotificationResult>>;
  statusCode?: Maybe<Scalars['String']['output']>;
  statusId?: Maybe<Scalars['String']['output']>;
  submitFee?: Maybe<Scalars['String']['output']>;
  totalContractor?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  updatedBy?: Maybe<Scalars['String']['output']>;
  validityPeriod?: Maybe<Scalars['Int']['output']>;
  validityPeriodUnit?: Maybe<Scalars['String']['output']>;
  version?: Maybe<Scalars['String']['output']>;
};

export type BidNotificationChapter = {
  __typename?: 'BidNotificationChapter';
  _count: BidNotificationChapterCount;
  bidField?: Maybe<CatBidField>;
  bidFieldCode?: Maybe<Scalars['String']['output']>;
  bidFieldId?: Maybe<Scalars['String']['output']>;
  bidFileCode?: Maybe<Scalars['String']['output']>;
  bidForm?: Maybe<CatBidForm>;
  bidFormCode?: Maybe<Scalars['String']['output']>;
  bidFormId?: Maybe<Scalars['String']['output']>;
  bidMode?: Maybe<CatBidMode>;
  bidModeCode?: Maybe<Scalars['String']['output']>;
  bidModeId?: Maybe<Scalars['String']['output']>;
  bidNotification?: Maybe<BidNotification>;
  bidNotificationId?: Maybe<Scalars['String']['output']>;
  chapterFiles?: Maybe<Array<BidNotificationChapterFile>>;
  code?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  deletedAt?: Maybe<Scalars['DateTime']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  level?: Maybe<Scalars['Int']['output']>;
  medicalType?: Maybe<CatMedicalType>;
  medicalTypeCode?: Maybe<Scalars['Int']['output']>;
  medicalTypeId?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  orderIndex?: Maybe<Scalars['String']['output']>;
  parentCode?: Maybe<Scalars['String']['output']>;
  processApply?: Maybe<CatProcessApply>;
  processApplyCode?: Maybe<Scalars['String']['output']>;
  processApplyId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  updatedBy?: Maybe<Scalars['String']['output']>;
};

export type BidNotificationChapterCount = {
  __typename?: 'BidNotificationChapterCount';
  chapterFiles: Scalars['Int']['output'];
};

export type BidNotificationChapterCreateManyBidFieldInput = {
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidFileCode?: InputMaybe<Scalars['String']['input']>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidFormId?: InputMaybe<Scalars['String']['input']>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidModeId?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
  medicalTypeCode?: InputMaybe<Scalars['Int']['input']>;
  medicalTypeId?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  orderIndex?: InputMaybe<Scalars['String']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  processApplyId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationChapterCreateManyBidFieldInputEnvelope = {
  data: Array<BidNotificationChapterCreateManyBidFieldInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidNotificationChapterCreateManyBidFormInput = {
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidFieldId?: InputMaybe<Scalars['String']['input']>;
  bidFileCode?: InputMaybe<Scalars['String']['input']>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidModeId?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
  medicalTypeCode?: InputMaybe<Scalars['Int']['input']>;
  medicalTypeId?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  orderIndex?: InputMaybe<Scalars['String']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  processApplyId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationChapterCreateManyBidFormInputEnvelope = {
  data: Array<BidNotificationChapterCreateManyBidFormInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidNotificationChapterCreateManyBidModeInput = {
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidFieldId?: InputMaybe<Scalars['String']['input']>;
  bidFileCode?: InputMaybe<Scalars['String']['input']>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidFormId?: InputMaybe<Scalars['String']['input']>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
  medicalTypeCode?: InputMaybe<Scalars['Int']['input']>;
  medicalTypeId?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  orderIndex?: InputMaybe<Scalars['String']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  processApplyId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationChapterCreateManyBidModeInputEnvelope = {
  data: Array<BidNotificationChapterCreateManyBidModeInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidNotificationChapterCreateManyBidNotificationInput = {
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidFieldId?: InputMaybe<Scalars['String']['input']>;
  bidFileCode?: InputMaybe<Scalars['String']['input']>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidFormId?: InputMaybe<Scalars['String']['input']>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidModeId?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
  medicalTypeCode?: InputMaybe<Scalars['Int']['input']>;
  medicalTypeId?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  orderIndex?: InputMaybe<Scalars['String']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  processApplyId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationChapterCreateManyBidNotificationInputEnvelope = {
  data: Array<BidNotificationChapterCreateManyBidNotificationInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidNotificationChapterCreateManyProcessApplyInput = {
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidFieldId?: InputMaybe<Scalars['String']['input']>;
  bidFileCode?: InputMaybe<Scalars['String']['input']>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidFormId?: InputMaybe<Scalars['String']['input']>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidModeId?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
  medicalTypeCode?: InputMaybe<Scalars['Int']['input']>;
  medicalTypeId?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  orderIndex?: InputMaybe<Scalars['String']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationChapterCreateManyProcessApplyInputEnvelope = {
  data: Array<BidNotificationChapterCreateManyProcessApplyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidNotificationChapterCreateNestedManyWithoutBidFieldInput = {
  connect?: InputMaybe<Array<BidNotificationChapterWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationChapterCreateOrConnectWithoutBidFieldInput>>;
  create?: InputMaybe<Array<BidNotificationChapterCreateWithoutBidFieldInput>>;
  createMany?: InputMaybe<BidNotificationChapterCreateManyBidFieldInputEnvelope>;
};

export type BidNotificationChapterCreateNestedManyWithoutBidFormInput = {
  connect?: InputMaybe<Array<BidNotificationChapterWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationChapterCreateOrConnectWithoutBidFormInput>>;
  create?: InputMaybe<Array<BidNotificationChapterCreateWithoutBidFormInput>>;
  createMany?: InputMaybe<BidNotificationChapterCreateManyBidFormInputEnvelope>;
};

export type BidNotificationChapterCreateNestedManyWithoutBidModeInput = {
  connect?: InputMaybe<Array<BidNotificationChapterWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationChapterCreateOrConnectWithoutBidModeInput>>;
  create?: InputMaybe<Array<BidNotificationChapterCreateWithoutBidModeInput>>;
  createMany?: InputMaybe<BidNotificationChapterCreateManyBidModeInputEnvelope>;
};

export type BidNotificationChapterCreateNestedManyWithoutBidNotificationInput = {
  connect?: InputMaybe<Array<BidNotificationChapterWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationChapterCreateOrConnectWithoutBidNotificationInput>>;
  create?: InputMaybe<Array<BidNotificationChapterCreateWithoutBidNotificationInput>>;
  createMany?: InputMaybe<BidNotificationChapterCreateManyBidNotificationInputEnvelope>;
};

export type BidNotificationChapterCreateNestedManyWithoutProcessApplyInput = {
  connect?: InputMaybe<Array<BidNotificationChapterWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationChapterCreateOrConnectWithoutProcessApplyInput>>;
  create?: InputMaybe<Array<BidNotificationChapterCreateWithoutProcessApplyInput>>;
  createMany?: InputMaybe<BidNotificationChapterCreateManyProcessApplyInputEnvelope>;
};

export type BidNotificationChapterCreateNestedOneWithoutChapterFilesInput = {
  connect?: InputMaybe<BidNotificationChapterWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidNotificationChapterCreateOrConnectWithoutChapterFilesInput>;
  create?: InputMaybe<BidNotificationChapterCreateWithoutChapterFilesInput>;
};

export type BidNotificationChapterCreateOrConnectWithoutBidFieldInput = {
  create: BidNotificationChapterCreateWithoutBidFieldInput;
  where: BidNotificationChapterWhereUniqueInput;
};

export type BidNotificationChapterCreateOrConnectWithoutBidFormInput = {
  create: BidNotificationChapterCreateWithoutBidFormInput;
  where: BidNotificationChapterWhereUniqueInput;
};

export type BidNotificationChapterCreateOrConnectWithoutBidModeInput = {
  create: BidNotificationChapterCreateWithoutBidModeInput;
  where: BidNotificationChapterWhereUniqueInput;
};

export type BidNotificationChapterCreateOrConnectWithoutBidNotificationInput = {
  create: BidNotificationChapterCreateWithoutBidNotificationInput;
  where: BidNotificationChapterWhereUniqueInput;
};

export type BidNotificationChapterCreateOrConnectWithoutChapterFilesInput = {
  create: BidNotificationChapterCreateWithoutChapterFilesInput;
  where: BidNotificationChapterWhereUniqueInput;
};

export type BidNotificationChapterCreateOrConnectWithoutProcessApplyInput = {
  create: BidNotificationChapterCreateWithoutProcessApplyInput;
  where: BidNotificationChapterWhereUniqueInput;
};

export type BidNotificationChapterCreateWithoutBidFieldInput = {
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidFileCode?: InputMaybe<Scalars['String']['input']>;
  bidForm?: InputMaybe<CatBidFormCreateNestedOneWithoutNotificationChaptersInput>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidMode?: InputMaybe<CatBidModeCreateNestedOneWithoutNotificationChaptersInput>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidNotification?: InputMaybe<BidNotificationCreateNestedOneWithoutBidNotificationChaptersInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutBidNotificationChapterInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
  medicalType?: InputMaybe<CatMedicalTypeCreateNestedOneWithoutNotificationChaptersInput>;
  medicalTypeCode?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  orderIndex?: InputMaybe<Scalars['String']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutNotificationChaptersInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationChapterCreateWithoutBidFormInput = {
  bidField?: InputMaybe<CatBidFieldCreateNestedOneWithoutNotificationChaptersInput>;
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidFileCode?: InputMaybe<Scalars['String']['input']>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidMode?: InputMaybe<CatBidModeCreateNestedOneWithoutNotificationChaptersInput>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidNotification?: InputMaybe<BidNotificationCreateNestedOneWithoutBidNotificationChaptersInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutBidNotificationChapterInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
  medicalType?: InputMaybe<CatMedicalTypeCreateNestedOneWithoutNotificationChaptersInput>;
  medicalTypeCode?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  orderIndex?: InputMaybe<Scalars['String']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutNotificationChaptersInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationChapterCreateWithoutBidModeInput = {
  bidField?: InputMaybe<CatBidFieldCreateNestedOneWithoutNotificationChaptersInput>;
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidFileCode?: InputMaybe<Scalars['String']['input']>;
  bidForm?: InputMaybe<CatBidFormCreateNestedOneWithoutNotificationChaptersInput>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidNotification?: InputMaybe<BidNotificationCreateNestedOneWithoutBidNotificationChaptersInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutBidNotificationChapterInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
  medicalType?: InputMaybe<CatMedicalTypeCreateNestedOneWithoutNotificationChaptersInput>;
  medicalTypeCode?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  orderIndex?: InputMaybe<Scalars['String']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutNotificationChaptersInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationChapterCreateWithoutBidNotificationInput = {
  bidField?: InputMaybe<CatBidFieldCreateNestedOneWithoutNotificationChaptersInput>;
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidFileCode?: InputMaybe<Scalars['String']['input']>;
  bidForm?: InputMaybe<CatBidFormCreateNestedOneWithoutNotificationChaptersInput>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidMode?: InputMaybe<CatBidModeCreateNestedOneWithoutNotificationChaptersInput>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutBidNotificationChapterInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
  medicalType?: InputMaybe<CatMedicalTypeCreateNestedOneWithoutNotificationChaptersInput>;
  medicalTypeCode?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  orderIndex?: InputMaybe<Scalars['String']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutNotificationChaptersInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationChapterCreateWithoutChapterFilesInput = {
  bidField?: InputMaybe<CatBidFieldCreateNestedOneWithoutNotificationChaptersInput>;
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidFileCode?: InputMaybe<Scalars['String']['input']>;
  bidForm?: InputMaybe<CatBidFormCreateNestedOneWithoutNotificationChaptersInput>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidMode?: InputMaybe<CatBidModeCreateNestedOneWithoutNotificationChaptersInput>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidNotification?: InputMaybe<BidNotificationCreateNestedOneWithoutBidNotificationChaptersInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
  medicalType?: InputMaybe<CatMedicalTypeCreateNestedOneWithoutNotificationChaptersInput>;
  medicalTypeCode?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  orderIndex?: InputMaybe<Scalars['String']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutNotificationChaptersInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationChapterCreateWithoutProcessApplyInput = {
  bidField?: InputMaybe<CatBidFieldCreateNestedOneWithoutNotificationChaptersInput>;
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidFileCode?: InputMaybe<Scalars['String']['input']>;
  bidForm?: InputMaybe<CatBidFormCreateNestedOneWithoutNotificationChaptersInput>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidMode?: InputMaybe<CatBidModeCreateNestedOneWithoutNotificationChaptersInput>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidNotification?: InputMaybe<BidNotificationCreateNestedOneWithoutBidNotificationChaptersInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutBidNotificationChapterInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
  medicalType?: InputMaybe<CatMedicalTypeCreateNestedOneWithoutNotificationChaptersInput>;
  medicalTypeCode?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  orderIndex?: InputMaybe<Scalars['String']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationChapterFile = {
  __typename?: 'BidNotificationChapterFile';
  bidNotification?: Maybe<BidNotification>;
  bidNotificationChapter?: Maybe<BidNotificationChapter>;
  bidNotificationChapterCode?: Maybe<Scalars['String']['output']>;
  bidNotificationChapterId?: Maybe<Scalars['String']['output']>;
  bidNotificationCode?: Maybe<Scalars['String']['output']>;
  bidNotificationId?: Maybe<Scalars['String']['output']>;
  bidNotificationVersion?: Maybe<Scalars['String']['output']>;
  contractType?: Maybe<CatContractType>;
  contractTypeCode?: Maybe<Scalars['String']['output']>;
  contractTypeId?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  deletedAt?: Maybe<Scalars['DateTime']['output']>;
  fileId?: Maybe<Scalars['String']['output']>;
  fileName?: Maybe<Scalars['String']['output']>;
  formCode?: Maybe<Scalars['String']['output']>;
  formContent?: Maybe<Scalars['String']['output']>;
  formValue?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  inviteFileOutDTO?: Maybe<Scalars['String']['output']>;
  isPubTemplate?: Maybe<Scalars['String']['output']>;
  isSubContractor?: Maybe<Scalars['String']['output']>;
  procuringEntity?: Maybe<Organization>;
  procuringEntityCode?: Maybe<Scalars['String']['output']>;
  procuringEntityId?: Maybe<Scalars['String']['output']>;
  statusCode?: Maybe<Scalars['String']['output']>;
  templateCode?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  updatedBy?: Maybe<Scalars['String']['output']>;
};

export type BidNotificationChapterFileCreateManyBidNotificationChapterInput = {
  bidNotificationChapterCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  contractTypeId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  fileId?: InputMaybe<Scalars['String']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  formCode?: InputMaybe<Scalars['String']['input']>;
  formContent?: InputMaybe<Scalars['String']['input']>;
  formValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  inviteFileOutDTO?: InputMaybe<Scalars['String']['input']>;
  isPubTemplate?: InputMaybe<Scalars['String']['input']>;
  isSubContractor?: InputMaybe<Scalars['String']['input']>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityId?: InputMaybe<Scalars['String']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  templateCode?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationChapterFileCreateManyBidNotificationChapterInputEnvelope = {
  data: Array<BidNotificationChapterFileCreateManyBidNotificationChapterInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidNotificationChapterFileCreateManyBidNotificationInput = {
  bidNotificationChapterCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationChapterId?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  contractTypeId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  fileId?: InputMaybe<Scalars['String']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  formCode?: InputMaybe<Scalars['String']['input']>;
  formContent?: InputMaybe<Scalars['String']['input']>;
  formValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  inviteFileOutDTO?: InputMaybe<Scalars['String']['input']>;
  isPubTemplate?: InputMaybe<Scalars['String']['input']>;
  isSubContractor?: InputMaybe<Scalars['String']['input']>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityId?: InputMaybe<Scalars['String']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  templateCode?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationChapterFileCreateManyBidNotificationInputEnvelope = {
  data: Array<BidNotificationChapterFileCreateManyBidNotificationInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidNotificationChapterFileCreateManyContractTypeInput = {
  bidNotificationChapterCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationChapterId?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  fileId?: InputMaybe<Scalars['String']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  formCode?: InputMaybe<Scalars['String']['input']>;
  formContent?: InputMaybe<Scalars['String']['input']>;
  formValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  inviteFileOutDTO?: InputMaybe<Scalars['String']['input']>;
  isPubTemplate?: InputMaybe<Scalars['String']['input']>;
  isSubContractor?: InputMaybe<Scalars['String']['input']>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityId?: InputMaybe<Scalars['String']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  templateCode?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationChapterFileCreateManyContractTypeInputEnvelope = {
  data: Array<BidNotificationChapterFileCreateManyContractTypeInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidNotificationChapterFileCreateManyProcuringEntityInput = {
  bidNotificationChapterCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationChapterId?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  contractTypeId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  fileId?: InputMaybe<Scalars['String']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  formCode?: InputMaybe<Scalars['String']['input']>;
  formContent?: InputMaybe<Scalars['String']['input']>;
  formValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  inviteFileOutDTO?: InputMaybe<Scalars['String']['input']>;
  isPubTemplate?: InputMaybe<Scalars['String']['input']>;
  isSubContractor?: InputMaybe<Scalars['String']['input']>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  templateCode?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationChapterFileCreateManyProcuringEntityInputEnvelope = {
  data: Array<BidNotificationChapterFileCreateManyProcuringEntityInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidNotificationChapterFileCreateNestedManyWithoutBidNotificationChapterInput = {
  connect?: InputMaybe<Array<BidNotificationChapterFileWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationChapterFileCreateOrConnectWithoutBidNotificationChapterInput>>;
  create?: InputMaybe<Array<BidNotificationChapterFileCreateWithoutBidNotificationChapterInput>>;
  createMany?: InputMaybe<BidNotificationChapterFileCreateManyBidNotificationChapterInputEnvelope>;
};

export type BidNotificationChapterFileCreateNestedManyWithoutBidNotificationInput = {
  connect?: InputMaybe<Array<BidNotificationChapterFileWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationChapterFileCreateOrConnectWithoutBidNotificationInput>>;
  create?: InputMaybe<Array<BidNotificationChapterFileCreateWithoutBidNotificationInput>>;
  createMany?: InputMaybe<BidNotificationChapterFileCreateManyBidNotificationInputEnvelope>;
};

export type BidNotificationChapterFileCreateNestedManyWithoutContractTypeInput = {
  connect?: InputMaybe<Array<BidNotificationChapterFileWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationChapterFileCreateOrConnectWithoutContractTypeInput>>;
  create?: InputMaybe<Array<BidNotificationChapterFileCreateWithoutContractTypeInput>>;
  createMany?: InputMaybe<BidNotificationChapterFileCreateManyContractTypeInputEnvelope>;
};

export type BidNotificationChapterFileCreateNestedManyWithoutProcuringEntityInput = {
  connect?: InputMaybe<Array<BidNotificationChapterFileWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationChapterFileCreateOrConnectWithoutProcuringEntityInput>>;
  create?: InputMaybe<Array<BidNotificationChapterFileCreateWithoutProcuringEntityInput>>;
  createMany?: InputMaybe<BidNotificationChapterFileCreateManyProcuringEntityInputEnvelope>;
};

export type BidNotificationChapterFileCreateOrConnectWithoutBidNotificationChapterInput = {
  create: BidNotificationChapterFileCreateWithoutBidNotificationChapterInput;
  where: BidNotificationChapterFileWhereUniqueInput;
};

export type BidNotificationChapterFileCreateOrConnectWithoutBidNotificationInput = {
  create: BidNotificationChapterFileCreateWithoutBidNotificationInput;
  where: BidNotificationChapterFileWhereUniqueInput;
};

export type BidNotificationChapterFileCreateOrConnectWithoutContractTypeInput = {
  create: BidNotificationChapterFileCreateWithoutContractTypeInput;
  where: BidNotificationChapterFileWhereUniqueInput;
};

export type BidNotificationChapterFileCreateOrConnectWithoutProcuringEntityInput = {
  create: BidNotificationChapterFileCreateWithoutProcuringEntityInput;
  where: BidNotificationChapterFileWhereUniqueInput;
};

export type BidNotificationChapterFileCreateWithoutBidNotificationChapterInput = {
  bidNotification?: InputMaybe<BidNotificationCreateNestedOneWithoutChapterFilesInput>;
  bidNotificationChapterCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  contractType?: InputMaybe<CatContractTypeCreateNestedOneWithoutChapterFilesInput>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  fileId?: InputMaybe<Scalars['String']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  formCode?: InputMaybe<Scalars['String']['input']>;
  formContent?: InputMaybe<Scalars['String']['input']>;
  formValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  inviteFileOutDTO?: InputMaybe<Scalars['String']['input']>;
  isPubTemplate?: InputMaybe<Scalars['String']['input']>;
  isSubContractor?: InputMaybe<Scalars['String']['input']>;
  procuringEntity?: InputMaybe<OrganizationCreateNestedOneWithoutChapterFilesInput>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  templateCode?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationChapterFileCreateWithoutBidNotificationInput = {
  bidNotificationChapter?: InputMaybe<BidNotificationChapterCreateNestedOneWithoutChapterFilesInput>;
  bidNotificationChapterCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  contractType?: InputMaybe<CatContractTypeCreateNestedOneWithoutChapterFilesInput>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  fileId?: InputMaybe<Scalars['String']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  formCode?: InputMaybe<Scalars['String']['input']>;
  formContent?: InputMaybe<Scalars['String']['input']>;
  formValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  inviteFileOutDTO?: InputMaybe<Scalars['String']['input']>;
  isPubTemplate?: InputMaybe<Scalars['String']['input']>;
  isSubContractor?: InputMaybe<Scalars['String']['input']>;
  procuringEntity?: InputMaybe<OrganizationCreateNestedOneWithoutChapterFilesInput>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  templateCode?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationChapterFileCreateWithoutContractTypeInput = {
  bidNotification?: InputMaybe<BidNotificationCreateNestedOneWithoutChapterFilesInput>;
  bidNotificationChapter?: InputMaybe<BidNotificationChapterCreateNestedOneWithoutChapterFilesInput>;
  bidNotificationChapterCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  fileId?: InputMaybe<Scalars['String']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  formCode?: InputMaybe<Scalars['String']['input']>;
  formContent?: InputMaybe<Scalars['String']['input']>;
  formValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  inviteFileOutDTO?: InputMaybe<Scalars['String']['input']>;
  isPubTemplate?: InputMaybe<Scalars['String']['input']>;
  isSubContractor?: InputMaybe<Scalars['String']['input']>;
  procuringEntity?: InputMaybe<OrganizationCreateNestedOneWithoutChapterFilesInput>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  templateCode?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationChapterFileCreateWithoutProcuringEntityInput = {
  bidNotification?: InputMaybe<BidNotificationCreateNestedOneWithoutChapterFilesInput>;
  bidNotificationChapter?: InputMaybe<BidNotificationChapterCreateNestedOneWithoutChapterFilesInput>;
  bidNotificationChapterCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  contractType?: InputMaybe<CatContractTypeCreateNestedOneWithoutChapterFilesInput>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  fileId?: InputMaybe<Scalars['String']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  formCode?: InputMaybe<Scalars['String']['input']>;
  formContent?: InputMaybe<Scalars['String']['input']>;
  formValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  inviteFileOutDTO?: InputMaybe<Scalars['String']['input']>;
  isPubTemplate?: InputMaybe<Scalars['String']['input']>;
  isSubContractor?: InputMaybe<Scalars['String']['input']>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  templateCode?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationChapterFileListRelationFilter = {
  every?: InputMaybe<BidNotificationChapterFileWhereInput>;
  none?: InputMaybe<BidNotificationChapterFileWhereInput>;
  some?: InputMaybe<BidNotificationChapterFileWhereInput>;
};

export type BidNotificationChapterFileOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type BidNotificationChapterFileScalarWhereInput = {
  AND?: InputMaybe<Array<BidNotificationChapterFileScalarWhereInput>>;
  NOT?: InputMaybe<Array<BidNotificationChapterFileScalarWhereInput>>;
  OR?: InputMaybe<Array<BidNotificationChapterFileScalarWhereInput>>;
  bidNotificationChapterCode?: InputMaybe<StringNullableFilter>;
  bidNotificationChapterId?: InputMaybe<StringNullableFilter>;
  bidNotificationCode?: InputMaybe<StringNullableFilter>;
  bidNotificationId?: InputMaybe<StringNullableFilter>;
  bidNotificationVersion?: InputMaybe<StringNullableFilter>;
  contractTypeCode?: InputMaybe<StringNullableFilter>;
  contractTypeId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  fileId?: InputMaybe<StringNullableFilter>;
  fileName?: InputMaybe<StringNullableFilter>;
  formCode?: InputMaybe<StringNullableFilter>;
  formContent?: InputMaybe<StringNullableFilter>;
  formValue?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  inviteFileOutDTO?: InputMaybe<StringNullableFilter>;
  isPubTemplate?: InputMaybe<StringNullableFilter>;
  isSubContractor?: InputMaybe<StringNullableFilter>;
  procuringEntityCode?: InputMaybe<StringNullableFilter>;
  procuringEntityId?: InputMaybe<StringNullableFilter>;
  statusCode?: InputMaybe<StringNullableFilter>;
  templateCode?: InputMaybe<StringNullableFilter>;
  type?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type BidNotificationChapterFileUpdateManyMutationInput = {
  bidNotificationChapterCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  fileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  fileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  formCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  formContent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  formValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  inviteFileOutDTO?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isPubTemplate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isSubContractor?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntityCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  templateCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationChapterFileUpdateManyWithWhereWithoutBidNotificationChapterInput = {
  data: BidNotificationChapterFileUpdateManyMutationInput;
  where: BidNotificationChapterFileScalarWhereInput;
};

export type BidNotificationChapterFileUpdateManyWithWhereWithoutBidNotificationInput = {
  data: BidNotificationChapterFileUpdateManyMutationInput;
  where: BidNotificationChapterFileScalarWhereInput;
};

export type BidNotificationChapterFileUpdateManyWithWhereWithoutContractTypeInput = {
  data: BidNotificationChapterFileUpdateManyMutationInput;
  where: BidNotificationChapterFileScalarWhereInput;
};

export type BidNotificationChapterFileUpdateManyWithWhereWithoutProcuringEntityInput = {
  data: BidNotificationChapterFileUpdateManyMutationInput;
  where: BidNotificationChapterFileScalarWhereInput;
};

export type BidNotificationChapterFileUpdateManyWithoutBidNotificationChapterNestedInput = {
  connect?: InputMaybe<Array<BidNotificationChapterFileWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationChapterFileCreateOrConnectWithoutBidNotificationChapterInput>>;
  create?: InputMaybe<Array<BidNotificationChapterFileCreateWithoutBidNotificationChapterInput>>;
  createMany?: InputMaybe<BidNotificationChapterFileCreateManyBidNotificationChapterInputEnvelope>;
  delete?: InputMaybe<Array<BidNotificationChapterFileWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidNotificationChapterFileScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidNotificationChapterFileWhereUniqueInput>>;
  set?: InputMaybe<Array<BidNotificationChapterFileWhereUniqueInput>>;
  update?: InputMaybe<Array<BidNotificationChapterFileUpdateWithWhereUniqueWithoutBidNotificationChapterInput>>;
  updateMany?: InputMaybe<Array<BidNotificationChapterFileUpdateManyWithWhereWithoutBidNotificationChapterInput>>;
  upsert?: InputMaybe<Array<BidNotificationChapterFileUpsertWithWhereUniqueWithoutBidNotificationChapterInput>>;
};

export type BidNotificationChapterFileUpdateManyWithoutBidNotificationNestedInput = {
  connect?: InputMaybe<Array<BidNotificationChapterFileWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationChapterFileCreateOrConnectWithoutBidNotificationInput>>;
  create?: InputMaybe<Array<BidNotificationChapterFileCreateWithoutBidNotificationInput>>;
  createMany?: InputMaybe<BidNotificationChapterFileCreateManyBidNotificationInputEnvelope>;
  delete?: InputMaybe<Array<BidNotificationChapterFileWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidNotificationChapterFileScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidNotificationChapterFileWhereUniqueInput>>;
  set?: InputMaybe<Array<BidNotificationChapterFileWhereUniqueInput>>;
  update?: InputMaybe<Array<BidNotificationChapterFileUpdateWithWhereUniqueWithoutBidNotificationInput>>;
  updateMany?: InputMaybe<Array<BidNotificationChapterFileUpdateManyWithWhereWithoutBidNotificationInput>>;
  upsert?: InputMaybe<Array<BidNotificationChapterFileUpsertWithWhereUniqueWithoutBidNotificationInput>>;
};

export type BidNotificationChapterFileUpdateManyWithoutContractTypeNestedInput = {
  connect?: InputMaybe<Array<BidNotificationChapterFileWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationChapterFileCreateOrConnectWithoutContractTypeInput>>;
  create?: InputMaybe<Array<BidNotificationChapterFileCreateWithoutContractTypeInput>>;
  createMany?: InputMaybe<BidNotificationChapterFileCreateManyContractTypeInputEnvelope>;
  delete?: InputMaybe<Array<BidNotificationChapterFileWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidNotificationChapterFileScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidNotificationChapterFileWhereUniqueInput>>;
  set?: InputMaybe<Array<BidNotificationChapterFileWhereUniqueInput>>;
  update?: InputMaybe<Array<BidNotificationChapterFileUpdateWithWhereUniqueWithoutContractTypeInput>>;
  updateMany?: InputMaybe<Array<BidNotificationChapterFileUpdateManyWithWhereWithoutContractTypeInput>>;
  upsert?: InputMaybe<Array<BidNotificationChapterFileUpsertWithWhereUniqueWithoutContractTypeInput>>;
};

export type BidNotificationChapterFileUpdateManyWithoutProcuringEntityNestedInput = {
  connect?: InputMaybe<Array<BidNotificationChapterFileWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationChapterFileCreateOrConnectWithoutProcuringEntityInput>>;
  create?: InputMaybe<Array<BidNotificationChapterFileCreateWithoutProcuringEntityInput>>;
  createMany?: InputMaybe<BidNotificationChapterFileCreateManyProcuringEntityInputEnvelope>;
  delete?: InputMaybe<Array<BidNotificationChapterFileWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidNotificationChapterFileScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidNotificationChapterFileWhereUniqueInput>>;
  set?: InputMaybe<Array<BidNotificationChapterFileWhereUniqueInput>>;
  update?: InputMaybe<Array<BidNotificationChapterFileUpdateWithWhereUniqueWithoutProcuringEntityInput>>;
  updateMany?: InputMaybe<Array<BidNotificationChapterFileUpdateManyWithWhereWithoutProcuringEntityInput>>;
  upsert?: InputMaybe<Array<BidNotificationChapterFileUpsertWithWhereUniqueWithoutProcuringEntityInput>>;
};

export type BidNotificationChapterFileUpdateWithWhereUniqueWithoutBidNotificationChapterInput = {
  data: BidNotificationChapterFileUpdateWithoutBidNotificationChapterInput;
  where: BidNotificationChapterFileWhereUniqueInput;
};

export type BidNotificationChapterFileUpdateWithWhereUniqueWithoutBidNotificationInput = {
  data: BidNotificationChapterFileUpdateWithoutBidNotificationInput;
  where: BidNotificationChapterFileWhereUniqueInput;
};

export type BidNotificationChapterFileUpdateWithWhereUniqueWithoutContractTypeInput = {
  data: BidNotificationChapterFileUpdateWithoutContractTypeInput;
  where: BidNotificationChapterFileWhereUniqueInput;
};

export type BidNotificationChapterFileUpdateWithWhereUniqueWithoutProcuringEntityInput = {
  data: BidNotificationChapterFileUpdateWithoutProcuringEntityInput;
  where: BidNotificationChapterFileWhereUniqueInput;
};

export type BidNotificationChapterFileUpdateWithoutBidNotificationChapterInput = {
  bidNotification?: InputMaybe<BidNotificationUpdateOneWithoutChapterFilesNestedInput>;
  bidNotificationChapterCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractType?: InputMaybe<CatContractTypeUpdateOneWithoutChapterFilesNestedInput>;
  contractTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  fileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  fileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  formCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  formContent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  formValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  inviteFileOutDTO?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isPubTemplate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isSubContractor?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntity?: InputMaybe<OrganizationUpdateOneWithoutChapterFilesNestedInput>;
  procuringEntityCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  templateCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationChapterFileUpdateWithoutBidNotificationInput = {
  bidNotificationChapter?: InputMaybe<BidNotificationChapterUpdateOneWithoutChapterFilesNestedInput>;
  bidNotificationChapterCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractType?: InputMaybe<CatContractTypeUpdateOneWithoutChapterFilesNestedInput>;
  contractTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  fileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  fileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  formCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  formContent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  formValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  inviteFileOutDTO?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isPubTemplate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isSubContractor?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntity?: InputMaybe<OrganizationUpdateOneWithoutChapterFilesNestedInput>;
  procuringEntityCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  templateCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationChapterFileUpdateWithoutContractTypeInput = {
  bidNotification?: InputMaybe<BidNotificationUpdateOneWithoutChapterFilesNestedInput>;
  bidNotificationChapter?: InputMaybe<BidNotificationChapterUpdateOneWithoutChapterFilesNestedInput>;
  bidNotificationChapterCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  fileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  fileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  formCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  formContent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  formValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  inviteFileOutDTO?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isPubTemplate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isSubContractor?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntity?: InputMaybe<OrganizationUpdateOneWithoutChapterFilesNestedInput>;
  procuringEntityCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  templateCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationChapterFileUpdateWithoutProcuringEntityInput = {
  bidNotification?: InputMaybe<BidNotificationUpdateOneWithoutChapterFilesNestedInput>;
  bidNotificationChapter?: InputMaybe<BidNotificationChapterUpdateOneWithoutChapterFilesNestedInput>;
  bidNotificationChapterCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractType?: InputMaybe<CatContractTypeUpdateOneWithoutChapterFilesNestedInput>;
  contractTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  fileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  fileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  formCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  formContent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  formValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  inviteFileOutDTO?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isPubTemplate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isSubContractor?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntityCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  templateCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationChapterFileUpsertWithWhereUniqueWithoutBidNotificationChapterInput = {
  create: BidNotificationChapterFileCreateWithoutBidNotificationChapterInput;
  update: BidNotificationChapterFileUpdateWithoutBidNotificationChapterInput;
  where: BidNotificationChapterFileWhereUniqueInput;
};

export type BidNotificationChapterFileUpsertWithWhereUniqueWithoutBidNotificationInput = {
  create: BidNotificationChapterFileCreateWithoutBidNotificationInput;
  update: BidNotificationChapterFileUpdateWithoutBidNotificationInput;
  where: BidNotificationChapterFileWhereUniqueInput;
};

export type BidNotificationChapterFileUpsertWithWhereUniqueWithoutContractTypeInput = {
  create: BidNotificationChapterFileCreateWithoutContractTypeInput;
  update: BidNotificationChapterFileUpdateWithoutContractTypeInput;
  where: BidNotificationChapterFileWhereUniqueInput;
};

export type BidNotificationChapterFileUpsertWithWhereUniqueWithoutProcuringEntityInput = {
  create: BidNotificationChapterFileCreateWithoutProcuringEntityInput;
  update: BidNotificationChapterFileUpdateWithoutProcuringEntityInput;
  where: BidNotificationChapterFileWhereUniqueInput;
};

export type BidNotificationChapterFileWhereInput = {
  AND?: InputMaybe<Array<BidNotificationChapterFileWhereInput>>;
  NOT?: InputMaybe<Array<BidNotificationChapterFileWhereInput>>;
  OR?: InputMaybe<Array<BidNotificationChapterFileWhereInput>>;
  bidNotification?: InputMaybe<BidNotificationWhereInput>;
  bidNotificationChapter?: InputMaybe<BidNotificationChapterWhereInput>;
  bidNotificationChapterCode?: InputMaybe<StringNullableFilter>;
  bidNotificationChapterId?: InputMaybe<StringNullableFilter>;
  bidNotificationCode?: InputMaybe<StringNullableFilter>;
  bidNotificationId?: InputMaybe<StringNullableFilter>;
  bidNotificationVersion?: InputMaybe<StringNullableFilter>;
  contractType?: InputMaybe<CatContractTypeWhereInput>;
  contractTypeCode?: InputMaybe<StringNullableFilter>;
  contractTypeId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  fileId?: InputMaybe<StringNullableFilter>;
  fileName?: InputMaybe<StringNullableFilter>;
  formCode?: InputMaybe<StringNullableFilter>;
  formContent?: InputMaybe<StringNullableFilter>;
  formValue?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  inviteFileOutDTO?: InputMaybe<StringNullableFilter>;
  isPubTemplate?: InputMaybe<StringNullableFilter>;
  isSubContractor?: InputMaybe<StringNullableFilter>;
  procuringEntity?: InputMaybe<OrganizationWhereInput>;
  procuringEntityCode?: InputMaybe<StringNullableFilter>;
  procuringEntityId?: InputMaybe<StringNullableFilter>;
  statusCode?: InputMaybe<StringNullableFilter>;
  templateCode?: InputMaybe<StringNullableFilter>;
  type?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type BidNotificationChapterFileWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationChapterListRelationFilter = {
  every?: InputMaybe<BidNotificationChapterWhereInput>;
  none?: InputMaybe<BidNotificationChapterWhereInput>;
  some?: InputMaybe<BidNotificationChapterWhereInput>;
};

export type BidNotificationChapterOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type BidNotificationChapterScalarWhereInput = {
  AND?: InputMaybe<Array<BidNotificationChapterScalarWhereInput>>;
  NOT?: InputMaybe<Array<BidNotificationChapterScalarWhereInput>>;
  OR?: InputMaybe<Array<BidNotificationChapterScalarWhereInput>>;
  bidFieldCode?: InputMaybe<StringNullableFilter>;
  bidFieldId?: InputMaybe<StringNullableFilter>;
  bidFileCode?: InputMaybe<StringNullableFilter>;
  bidFormCode?: InputMaybe<StringNullableFilter>;
  bidFormId?: InputMaybe<StringNullableFilter>;
  bidModeCode?: InputMaybe<StringNullableFilter>;
  bidModeId?: InputMaybe<StringNullableFilter>;
  bidNotificationId?: InputMaybe<StringNullableFilter>;
  code?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  level?: InputMaybe<IntNullableFilter>;
  medicalTypeCode?: InputMaybe<IntNullableFilter>;
  medicalTypeId?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  orderIndex?: InputMaybe<StringNullableFilter>;
  parentCode?: InputMaybe<StringNullableFilter>;
  processApplyCode?: InputMaybe<StringNullableFilter>;
  processApplyId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type BidNotificationChapterUpdateManyMutationInput = {
  bidFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidFileCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidModeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  level?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  medicalTypeCode?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderIndex?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  parentCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationChapterUpdateManyWithWhereWithoutBidFieldInput = {
  data: BidNotificationChapterUpdateManyMutationInput;
  where: BidNotificationChapterScalarWhereInput;
};

export type BidNotificationChapterUpdateManyWithWhereWithoutBidFormInput = {
  data: BidNotificationChapterUpdateManyMutationInput;
  where: BidNotificationChapterScalarWhereInput;
};

export type BidNotificationChapterUpdateManyWithWhereWithoutBidModeInput = {
  data: BidNotificationChapterUpdateManyMutationInput;
  where: BidNotificationChapterScalarWhereInput;
};

export type BidNotificationChapterUpdateManyWithWhereWithoutBidNotificationInput = {
  data: BidNotificationChapterUpdateManyMutationInput;
  where: BidNotificationChapterScalarWhereInput;
};

export type BidNotificationChapterUpdateManyWithWhereWithoutProcessApplyInput = {
  data: BidNotificationChapterUpdateManyMutationInput;
  where: BidNotificationChapterScalarWhereInput;
};

export type BidNotificationChapterUpdateManyWithoutBidFieldNestedInput = {
  connect?: InputMaybe<Array<BidNotificationChapterWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationChapterCreateOrConnectWithoutBidFieldInput>>;
  create?: InputMaybe<Array<BidNotificationChapterCreateWithoutBidFieldInput>>;
  createMany?: InputMaybe<BidNotificationChapterCreateManyBidFieldInputEnvelope>;
  delete?: InputMaybe<Array<BidNotificationChapterWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidNotificationChapterScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidNotificationChapterWhereUniqueInput>>;
  set?: InputMaybe<Array<BidNotificationChapterWhereUniqueInput>>;
  update?: InputMaybe<Array<BidNotificationChapterUpdateWithWhereUniqueWithoutBidFieldInput>>;
  updateMany?: InputMaybe<Array<BidNotificationChapterUpdateManyWithWhereWithoutBidFieldInput>>;
  upsert?: InputMaybe<Array<BidNotificationChapterUpsertWithWhereUniqueWithoutBidFieldInput>>;
};

export type BidNotificationChapterUpdateManyWithoutBidFormNestedInput = {
  connect?: InputMaybe<Array<BidNotificationChapterWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationChapterCreateOrConnectWithoutBidFormInput>>;
  create?: InputMaybe<Array<BidNotificationChapterCreateWithoutBidFormInput>>;
  createMany?: InputMaybe<BidNotificationChapterCreateManyBidFormInputEnvelope>;
  delete?: InputMaybe<Array<BidNotificationChapterWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidNotificationChapterScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidNotificationChapterWhereUniqueInput>>;
  set?: InputMaybe<Array<BidNotificationChapterWhereUniqueInput>>;
  update?: InputMaybe<Array<BidNotificationChapterUpdateWithWhereUniqueWithoutBidFormInput>>;
  updateMany?: InputMaybe<Array<BidNotificationChapterUpdateManyWithWhereWithoutBidFormInput>>;
  upsert?: InputMaybe<Array<BidNotificationChapterUpsertWithWhereUniqueWithoutBidFormInput>>;
};

export type BidNotificationChapterUpdateManyWithoutBidModeNestedInput = {
  connect?: InputMaybe<Array<BidNotificationChapterWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationChapterCreateOrConnectWithoutBidModeInput>>;
  create?: InputMaybe<Array<BidNotificationChapterCreateWithoutBidModeInput>>;
  createMany?: InputMaybe<BidNotificationChapterCreateManyBidModeInputEnvelope>;
  delete?: InputMaybe<Array<BidNotificationChapterWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidNotificationChapterScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidNotificationChapterWhereUniqueInput>>;
  set?: InputMaybe<Array<BidNotificationChapterWhereUniqueInput>>;
  update?: InputMaybe<Array<BidNotificationChapterUpdateWithWhereUniqueWithoutBidModeInput>>;
  updateMany?: InputMaybe<Array<BidNotificationChapterUpdateManyWithWhereWithoutBidModeInput>>;
  upsert?: InputMaybe<Array<BidNotificationChapterUpsertWithWhereUniqueWithoutBidModeInput>>;
};

export type BidNotificationChapterUpdateManyWithoutBidNotificationNestedInput = {
  connect?: InputMaybe<Array<BidNotificationChapterWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationChapterCreateOrConnectWithoutBidNotificationInput>>;
  create?: InputMaybe<Array<BidNotificationChapterCreateWithoutBidNotificationInput>>;
  createMany?: InputMaybe<BidNotificationChapterCreateManyBidNotificationInputEnvelope>;
  delete?: InputMaybe<Array<BidNotificationChapterWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidNotificationChapterScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidNotificationChapterWhereUniqueInput>>;
  set?: InputMaybe<Array<BidNotificationChapterWhereUniqueInput>>;
  update?: InputMaybe<Array<BidNotificationChapterUpdateWithWhereUniqueWithoutBidNotificationInput>>;
  updateMany?: InputMaybe<Array<BidNotificationChapterUpdateManyWithWhereWithoutBidNotificationInput>>;
  upsert?: InputMaybe<Array<BidNotificationChapterUpsertWithWhereUniqueWithoutBidNotificationInput>>;
};

export type BidNotificationChapterUpdateManyWithoutProcessApplyNestedInput = {
  connect?: InputMaybe<Array<BidNotificationChapterWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationChapterCreateOrConnectWithoutProcessApplyInput>>;
  create?: InputMaybe<Array<BidNotificationChapterCreateWithoutProcessApplyInput>>;
  createMany?: InputMaybe<BidNotificationChapterCreateManyProcessApplyInputEnvelope>;
  delete?: InputMaybe<Array<BidNotificationChapterWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidNotificationChapterScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidNotificationChapterWhereUniqueInput>>;
  set?: InputMaybe<Array<BidNotificationChapterWhereUniqueInput>>;
  update?: InputMaybe<Array<BidNotificationChapterUpdateWithWhereUniqueWithoutProcessApplyInput>>;
  updateMany?: InputMaybe<Array<BidNotificationChapterUpdateManyWithWhereWithoutProcessApplyInput>>;
  upsert?: InputMaybe<Array<BidNotificationChapterUpsertWithWhereUniqueWithoutProcessApplyInput>>;
};

export type BidNotificationChapterUpdateOneWithoutChapterFilesNestedInput = {
  connect?: InputMaybe<BidNotificationChapterWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidNotificationChapterCreateOrConnectWithoutChapterFilesInput>;
  create?: InputMaybe<BidNotificationChapterCreateWithoutChapterFilesInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<BidNotificationChapterUpdateWithoutChapterFilesInput>;
  upsert?: InputMaybe<BidNotificationChapterUpsertWithoutChapterFilesInput>;
};

export type BidNotificationChapterUpdateWithWhereUniqueWithoutBidFieldInput = {
  data: BidNotificationChapterUpdateWithoutBidFieldInput;
  where: BidNotificationChapterWhereUniqueInput;
};

export type BidNotificationChapterUpdateWithWhereUniqueWithoutBidFormInput = {
  data: BidNotificationChapterUpdateWithoutBidFormInput;
  where: BidNotificationChapterWhereUniqueInput;
};

export type BidNotificationChapterUpdateWithWhereUniqueWithoutBidModeInput = {
  data: BidNotificationChapterUpdateWithoutBidModeInput;
  where: BidNotificationChapterWhereUniqueInput;
};

export type BidNotificationChapterUpdateWithWhereUniqueWithoutBidNotificationInput = {
  data: BidNotificationChapterUpdateWithoutBidNotificationInput;
  where: BidNotificationChapterWhereUniqueInput;
};

export type BidNotificationChapterUpdateWithWhereUniqueWithoutProcessApplyInput = {
  data: BidNotificationChapterUpdateWithoutProcessApplyInput;
  where: BidNotificationChapterWhereUniqueInput;
};

export type BidNotificationChapterUpdateWithoutBidFieldInput = {
  bidFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidFileCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidForm?: InputMaybe<CatBidFormUpdateOneWithoutNotificationChaptersNestedInput>;
  bidFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidMode?: InputMaybe<CatBidModeUpdateOneWithoutNotificationChaptersNestedInput>;
  bidModeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotification?: InputMaybe<BidNotificationUpdateOneWithoutBidNotificationChaptersNestedInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutBidNotificationChapterNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  level?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  medicalType?: InputMaybe<CatMedicalTypeUpdateOneWithoutNotificationChaptersNestedInput>;
  medicalTypeCode?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderIndex?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  parentCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutNotificationChaptersNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationChapterUpdateWithoutBidFormInput = {
  bidField?: InputMaybe<CatBidFieldUpdateOneWithoutNotificationChaptersNestedInput>;
  bidFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidFileCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidMode?: InputMaybe<CatBidModeUpdateOneWithoutNotificationChaptersNestedInput>;
  bidModeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotification?: InputMaybe<BidNotificationUpdateOneWithoutBidNotificationChaptersNestedInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutBidNotificationChapterNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  level?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  medicalType?: InputMaybe<CatMedicalTypeUpdateOneWithoutNotificationChaptersNestedInput>;
  medicalTypeCode?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderIndex?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  parentCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutNotificationChaptersNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationChapterUpdateWithoutBidModeInput = {
  bidField?: InputMaybe<CatBidFieldUpdateOneWithoutNotificationChaptersNestedInput>;
  bidFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidFileCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidForm?: InputMaybe<CatBidFormUpdateOneWithoutNotificationChaptersNestedInput>;
  bidFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidModeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotification?: InputMaybe<BidNotificationUpdateOneWithoutBidNotificationChaptersNestedInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutBidNotificationChapterNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  level?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  medicalType?: InputMaybe<CatMedicalTypeUpdateOneWithoutNotificationChaptersNestedInput>;
  medicalTypeCode?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderIndex?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  parentCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutNotificationChaptersNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationChapterUpdateWithoutBidNotificationInput = {
  bidField?: InputMaybe<CatBidFieldUpdateOneWithoutNotificationChaptersNestedInput>;
  bidFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidFileCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidForm?: InputMaybe<CatBidFormUpdateOneWithoutNotificationChaptersNestedInput>;
  bidFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidMode?: InputMaybe<CatBidModeUpdateOneWithoutNotificationChaptersNestedInput>;
  bidModeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutBidNotificationChapterNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  level?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  medicalType?: InputMaybe<CatMedicalTypeUpdateOneWithoutNotificationChaptersNestedInput>;
  medicalTypeCode?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderIndex?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  parentCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutNotificationChaptersNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationChapterUpdateWithoutChapterFilesInput = {
  bidField?: InputMaybe<CatBidFieldUpdateOneWithoutNotificationChaptersNestedInput>;
  bidFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidFileCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidForm?: InputMaybe<CatBidFormUpdateOneWithoutNotificationChaptersNestedInput>;
  bidFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidMode?: InputMaybe<CatBidModeUpdateOneWithoutNotificationChaptersNestedInput>;
  bidModeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotification?: InputMaybe<BidNotificationUpdateOneWithoutBidNotificationChaptersNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  level?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  medicalType?: InputMaybe<CatMedicalTypeUpdateOneWithoutNotificationChaptersNestedInput>;
  medicalTypeCode?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderIndex?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  parentCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutNotificationChaptersNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationChapterUpdateWithoutProcessApplyInput = {
  bidField?: InputMaybe<CatBidFieldUpdateOneWithoutNotificationChaptersNestedInput>;
  bidFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidFileCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidForm?: InputMaybe<CatBidFormUpdateOneWithoutNotificationChaptersNestedInput>;
  bidFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidMode?: InputMaybe<CatBidModeUpdateOneWithoutNotificationChaptersNestedInput>;
  bidModeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotification?: InputMaybe<BidNotificationUpdateOneWithoutBidNotificationChaptersNestedInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutBidNotificationChapterNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  level?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  medicalType?: InputMaybe<CatMedicalTypeUpdateOneWithoutNotificationChaptersNestedInput>;
  medicalTypeCode?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderIndex?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  parentCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationChapterUpsertWithWhereUniqueWithoutBidFieldInput = {
  create: BidNotificationChapterCreateWithoutBidFieldInput;
  update: BidNotificationChapterUpdateWithoutBidFieldInput;
  where: BidNotificationChapterWhereUniqueInput;
};

export type BidNotificationChapterUpsertWithWhereUniqueWithoutBidFormInput = {
  create: BidNotificationChapterCreateWithoutBidFormInput;
  update: BidNotificationChapterUpdateWithoutBidFormInput;
  where: BidNotificationChapterWhereUniqueInput;
};

export type BidNotificationChapterUpsertWithWhereUniqueWithoutBidModeInput = {
  create: BidNotificationChapterCreateWithoutBidModeInput;
  update: BidNotificationChapterUpdateWithoutBidModeInput;
  where: BidNotificationChapterWhereUniqueInput;
};

export type BidNotificationChapterUpsertWithWhereUniqueWithoutBidNotificationInput = {
  create: BidNotificationChapterCreateWithoutBidNotificationInput;
  update: BidNotificationChapterUpdateWithoutBidNotificationInput;
  where: BidNotificationChapterWhereUniqueInput;
};

export type BidNotificationChapterUpsertWithWhereUniqueWithoutProcessApplyInput = {
  create: BidNotificationChapterCreateWithoutProcessApplyInput;
  update: BidNotificationChapterUpdateWithoutProcessApplyInput;
  where: BidNotificationChapterWhereUniqueInput;
};

export type BidNotificationChapterUpsertWithoutChapterFilesInput = {
  create: BidNotificationChapterCreateWithoutChapterFilesInput;
  update: BidNotificationChapterUpdateWithoutChapterFilesInput;
};

export type BidNotificationChapterWhereInput = {
  AND?: InputMaybe<Array<BidNotificationChapterWhereInput>>;
  NOT?: InputMaybe<Array<BidNotificationChapterWhereInput>>;
  OR?: InputMaybe<Array<BidNotificationChapterWhereInput>>;
  bidField?: InputMaybe<CatBidFieldWhereInput>;
  bidFieldCode?: InputMaybe<StringNullableFilter>;
  bidFieldId?: InputMaybe<StringNullableFilter>;
  bidFileCode?: InputMaybe<StringNullableFilter>;
  bidForm?: InputMaybe<CatBidFormWhereInput>;
  bidFormCode?: InputMaybe<StringNullableFilter>;
  bidFormId?: InputMaybe<StringNullableFilter>;
  bidMode?: InputMaybe<CatBidModeWhereInput>;
  bidModeCode?: InputMaybe<StringNullableFilter>;
  bidModeId?: InputMaybe<StringNullableFilter>;
  bidNotification?: InputMaybe<BidNotificationWhereInput>;
  bidNotificationId?: InputMaybe<StringNullableFilter>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileListRelationFilter>;
  code?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  level?: InputMaybe<IntNullableFilter>;
  medicalType?: InputMaybe<CatMedicalTypeWhereInput>;
  medicalTypeCode?: InputMaybe<IntNullableFilter>;
  medicalTypeId?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  orderIndex?: InputMaybe<StringNullableFilter>;
  parentCode?: InputMaybe<StringNullableFilter>;
  processApply?: InputMaybe<CatProcessApplyWhereInput>;
  processApplyCode?: InputMaybe<StringNullableFilter>;
  processApplyId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type BidNotificationChapterWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationClarify = {
  __typename?: 'BidNotificationClarify';
  bidNotification?: Maybe<BidNotification>;
  bidNotificationCode?: Maybe<Scalars['String']['output']>;
  bidNotificationId?: Maybe<Scalars['String']['output']>;
  bidNotificationVersion?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  requestAndResponseContentRaw?: Maybe<Scalars['String']['output']>;
  requestAttachmentId?: Maybe<Scalars['String']['output']>;
  requestAttachmentName?: Maybe<Scalars['String']['output']>;
  requestCode?: Maybe<Scalars['String']['output']>;
  requestCreatedAt?: Maybe<Scalars['DateTime']['output']>;
  requestName?: Maybe<Scalars['String']['output']>;
  responseAttachmentId?: Maybe<Scalars['String']['output']>;
  responseAttachmentName?: Maybe<Scalars['String']['output']>;
};

export type BidNotificationClarifyCreateManyBidNotificationInput = {
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  requestAndResponseContentRaw?: InputMaybe<Scalars['String']['input']>;
  requestAttachmentId?: InputMaybe<Scalars['String']['input']>;
  requestAttachmentName?: InputMaybe<Scalars['String']['input']>;
  requestCode?: InputMaybe<Scalars['String']['input']>;
  requestCreatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  requestName?: InputMaybe<Scalars['String']['input']>;
  responseAttachmentId?: InputMaybe<Scalars['String']['input']>;
  responseAttachmentName?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationClarifyCreateManyBidNotificationInputEnvelope = {
  data: Array<BidNotificationClarifyCreateManyBidNotificationInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidNotificationClarifyCreateNestedManyWithoutBidNotificationInput = {
  connect?: InputMaybe<Array<BidNotificationClarifyWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationClarifyCreateOrConnectWithoutBidNotificationInput>>;
  create?: InputMaybe<Array<BidNotificationClarifyCreateWithoutBidNotificationInput>>;
  createMany?: InputMaybe<BidNotificationClarifyCreateManyBidNotificationInputEnvelope>;
};

export type BidNotificationClarifyCreateOrConnectWithoutBidNotificationInput = {
  create: BidNotificationClarifyCreateWithoutBidNotificationInput;
  where: BidNotificationClarifyWhereUniqueInput;
};

export type BidNotificationClarifyCreateWithoutBidNotificationInput = {
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  requestAndResponseContentRaw?: InputMaybe<Scalars['String']['input']>;
  requestAttachmentId?: InputMaybe<Scalars['String']['input']>;
  requestAttachmentName?: InputMaybe<Scalars['String']['input']>;
  requestCode?: InputMaybe<Scalars['String']['input']>;
  requestCreatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  requestName?: InputMaybe<Scalars['String']['input']>;
  responseAttachmentId?: InputMaybe<Scalars['String']['input']>;
  responseAttachmentName?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationClarifyListRelationFilter = {
  every?: InputMaybe<BidNotificationClarifyWhereInput>;
  none?: InputMaybe<BidNotificationClarifyWhereInput>;
  some?: InputMaybe<BidNotificationClarifyWhereInput>;
};

export type BidNotificationClarifyOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type BidNotificationClarifyScalarWhereInput = {
  AND?: InputMaybe<Array<BidNotificationClarifyScalarWhereInput>>;
  NOT?: InputMaybe<Array<BidNotificationClarifyScalarWhereInput>>;
  OR?: InputMaybe<Array<BidNotificationClarifyScalarWhereInput>>;
  bidNotificationCode?: InputMaybe<StringNullableFilter>;
  bidNotificationId?: InputMaybe<StringNullableFilter>;
  bidNotificationVersion?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  requestAndResponseContentRaw?: InputMaybe<StringNullableFilter>;
  requestAttachmentId?: InputMaybe<StringNullableFilter>;
  requestAttachmentName?: InputMaybe<StringNullableFilter>;
  requestCode?: InputMaybe<StringNullableFilter>;
  requestCreatedAt?: InputMaybe<DateTimeNullableFilter>;
  requestName?: InputMaybe<StringNullableFilter>;
  responseAttachmentId?: InputMaybe<StringNullableFilter>;
  responseAttachmentName?: InputMaybe<StringNullableFilter>;
};

export type BidNotificationClarifyUpdateManyMutationInput = {
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  requestAndResponseContentRaw?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestAttachmentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestAttachmentName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestCreatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  requestName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  responseAttachmentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  responseAttachmentName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationClarifyUpdateManyWithWhereWithoutBidNotificationInput = {
  data: BidNotificationClarifyUpdateManyMutationInput;
  where: BidNotificationClarifyScalarWhereInput;
};

export type BidNotificationClarifyUpdateManyWithoutBidNotificationNestedInput = {
  connect?: InputMaybe<Array<BidNotificationClarifyWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationClarifyCreateOrConnectWithoutBidNotificationInput>>;
  create?: InputMaybe<Array<BidNotificationClarifyCreateWithoutBidNotificationInput>>;
  createMany?: InputMaybe<BidNotificationClarifyCreateManyBidNotificationInputEnvelope>;
  delete?: InputMaybe<Array<BidNotificationClarifyWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidNotificationClarifyScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidNotificationClarifyWhereUniqueInput>>;
  set?: InputMaybe<Array<BidNotificationClarifyWhereUniqueInput>>;
  update?: InputMaybe<Array<BidNotificationClarifyUpdateWithWhereUniqueWithoutBidNotificationInput>>;
  updateMany?: InputMaybe<Array<BidNotificationClarifyUpdateManyWithWhereWithoutBidNotificationInput>>;
  upsert?: InputMaybe<Array<BidNotificationClarifyUpsertWithWhereUniqueWithoutBidNotificationInput>>;
};

export type BidNotificationClarifyUpdateWithWhereUniqueWithoutBidNotificationInput = {
  data: BidNotificationClarifyUpdateWithoutBidNotificationInput;
  where: BidNotificationClarifyWhereUniqueInput;
};

export type BidNotificationClarifyUpdateWithoutBidNotificationInput = {
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  requestAndResponseContentRaw?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestAttachmentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestAttachmentName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestCreatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  requestName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  responseAttachmentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  responseAttachmentName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationClarifyUpsertWithWhereUniqueWithoutBidNotificationInput = {
  create: BidNotificationClarifyCreateWithoutBidNotificationInput;
  update: BidNotificationClarifyUpdateWithoutBidNotificationInput;
  where: BidNotificationClarifyWhereUniqueInput;
};

export type BidNotificationClarifyWhereInput = {
  AND?: InputMaybe<Array<BidNotificationClarifyWhereInput>>;
  NOT?: InputMaybe<Array<BidNotificationClarifyWhereInput>>;
  OR?: InputMaybe<Array<BidNotificationClarifyWhereInput>>;
  bidNotification?: InputMaybe<BidNotificationWhereInput>;
  bidNotificationCode?: InputMaybe<StringNullableFilter>;
  bidNotificationId?: InputMaybe<StringNullableFilter>;
  bidNotificationVersion?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  requestAndResponseContentRaw?: InputMaybe<StringNullableFilter>;
  requestAttachmentId?: InputMaybe<StringNullableFilter>;
  requestAttachmentName?: InputMaybe<StringNullableFilter>;
  requestCode?: InputMaybe<StringNullableFilter>;
  requestCreatedAt?: InputMaybe<DateTimeNullableFilter>;
  requestName?: InputMaybe<StringNullableFilter>;
  responseAttachmentId?: InputMaybe<StringNullableFilter>;
  responseAttachmentName?: InputMaybe<StringNullableFilter>;
};

export type BidNotificationClarifyWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationConnection = {
  __typename?: 'BidNotificationConnection';
  nodes?: Maybe<Array<BidNotification>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type BidNotificationContractor = {
  __typename?: 'BidNotificationContractor';
  bidLotResult?: Maybe<BidLotResult>;
  bidLotResultId?: Maybe<Scalars['String']['output']>;
  bidNotification?: Maybe<BidNotification>;
  bidNotificationCode?: Maybe<Scalars['String']['output']>;
  bidNotificationId?: Maybe<Scalars['String']['output']>;
  bidNotificationResult?: Maybe<BidNotificationResult>;
  bidNotificationResultId?: Maybe<Scalars['String']['output']>;
  contractSignDate?: Maybe<Scalars['DateTime']['output']>;
  contractor?: Maybe<Organization>;
  contractorCode?: Maybe<Scalars['String']['output']>;
  contractorId?: Maybe<Scalars['String']['output']>;
  contractorName?: Maybe<Scalars['String']['output']>;
  discountPercent?: Maybe<Scalars['Decimal']['output']>;
  evalBidPrice?: Maybe<Scalars['Decimal']['output']>;
  falsePhase?: Maybe<Scalars['String']['output']>;
  finalPrice?: Maybe<Scalars['Decimal']['output']>;
  id: Scalars['String']['output'];
  isShortList: Scalars['Boolean']['output'];
  newContractorName?: Maybe<Scalars['String']['output']>;
  price?: Maybe<Scalars['Decimal']['output']>;
  reason?: Maybe<Scalars['String']['output']>;
  result?: Maybe<Scalars['String']['output']>;
  role?: Maybe<Scalars['String']['output']>;
  techScore?: Maybe<Scalars['Decimal']['output']>;
  ventureCode?: Maybe<Scalars['String']['output']>;
  ventureName?: Maybe<Scalars['String']['output']>;
  winningPrice?: Maybe<Scalars['Decimal']['output']>;
};

export type BidNotificationContractorConnection = {
  __typename?: 'BidNotificationContractorConnection';
  nodes?: Maybe<Array<BidNotificationContractor>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type BidNotificationContractorCreateInput = {
  bidLotResult?: InputMaybe<BidLotResultCreateNestedOneWithoutBidNotificationContractorsInput>;
  bidNotification?: InputMaybe<BidNotificationCreateNestedOneWithoutContractorsInput>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationResult?: InputMaybe<BidNotificationResultCreateNestedOneWithoutBidNotificationContractorsInput>;
  contractSignDate?: InputMaybe<Scalars['DateTime']['input']>;
  contractor?: InputMaybe<OrganizationCreateNestedOneWithoutNotificationContractorsInput>;
  contractorCode?: InputMaybe<Scalars['String']['input']>;
  contractorName?: InputMaybe<Scalars['String']['input']>;
  discountPercent?: InputMaybe<Scalars['Decimal']['input']>;
  evalBidPrice?: InputMaybe<Scalars['Decimal']['input']>;
  falsePhase?: InputMaybe<Scalars['String']['input']>;
  finalPrice?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isShortList?: InputMaybe<Scalars['Boolean']['input']>;
  newContractorName?: InputMaybe<Scalars['String']['input']>;
  price?: InputMaybe<Scalars['Decimal']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  result?: InputMaybe<Scalars['String']['input']>;
  role?: InputMaybe<Scalars['String']['input']>;
  techScore?: InputMaybe<Scalars['Decimal']['input']>;
  ventureCode?: InputMaybe<Scalars['String']['input']>;
  ventureName?: InputMaybe<Scalars['String']['input']>;
  winningPrice?: InputMaybe<Scalars['Decimal']['input']>;
};

export type BidNotificationContractorCreateManyBidLotResultInput = {
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  bidNotificationResultId?: InputMaybe<Scalars['String']['input']>;
  contractSignDate?: InputMaybe<Scalars['DateTime']['input']>;
  contractorCode?: InputMaybe<Scalars['String']['input']>;
  contractorId?: InputMaybe<Scalars['String']['input']>;
  contractorName?: InputMaybe<Scalars['String']['input']>;
  discountPercent?: InputMaybe<Scalars['Decimal']['input']>;
  evalBidPrice?: InputMaybe<Scalars['Decimal']['input']>;
  falsePhase?: InputMaybe<Scalars['String']['input']>;
  finalPrice?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isShortList?: InputMaybe<Scalars['Boolean']['input']>;
  newContractorName?: InputMaybe<Scalars['String']['input']>;
  price?: InputMaybe<Scalars['Decimal']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  result?: InputMaybe<Scalars['String']['input']>;
  role?: InputMaybe<Scalars['String']['input']>;
  techScore?: InputMaybe<Scalars['Decimal']['input']>;
  ventureCode?: InputMaybe<Scalars['String']['input']>;
  ventureName?: InputMaybe<Scalars['String']['input']>;
  winningPrice?: InputMaybe<Scalars['Decimal']['input']>;
};

export type BidNotificationContractorCreateManyBidLotResultInputEnvelope = {
  data: Array<BidNotificationContractorCreateManyBidLotResultInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidNotificationContractorCreateManyBidNotificationInput = {
  bidLotResultId?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationResultId?: InputMaybe<Scalars['String']['input']>;
  contractSignDate?: InputMaybe<Scalars['DateTime']['input']>;
  contractorCode?: InputMaybe<Scalars['String']['input']>;
  contractorId?: InputMaybe<Scalars['String']['input']>;
  contractorName?: InputMaybe<Scalars['String']['input']>;
  discountPercent?: InputMaybe<Scalars['Decimal']['input']>;
  evalBidPrice?: InputMaybe<Scalars['Decimal']['input']>;
  falsePhase?: InputMaybe<Scalars['String']['input']>;
  finalPrice?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isShortList?: InputMaybe<Scalars['Boolean']['input']>;
  newContractorName?: InputMaybe<Scalars['String']['input']>;
  price?: InputMaybe<Scalars['Decimal']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  result?: InputMaybe<Scalars['String']['input']>;
  role?: InputMaybe<Scalars['String']['input']>;
  techScore?: InputMaybe<Scalars['Decimal']['input']>;
  ventureCode?: InputMaybe<Scalars['String']['input']>;
  ventureName?: InputMaybe<Scalars['String']['input']>;
  winningPrice?: InputMaybe<Scalars['Decimal']['input']>;
};

export type BidNotificationContractorCreateManyBidNotificationInputEnvelope = {
  data: Array<BidNotificationContractorCreateManyBidNotificationInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidNotificationContractorCreateManyBidNotificationResultInput = {
  bidLotResultId?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  contractSignDate?: InputMaybe<Scalars['DateTime']['input']>;
  contractorCode?: InputMaybe<Scalars['String']['input']>;
  contractorId?: InputMaybe<Scalars['String']['input']>;
  contractorName?: InputMaybe<Scalars['String']['input']>;
  discountPercent?: InputMaybe<Scalars['Decimal']['input']>;
  evalBidPrice?: InputMaybe<Scalars['Decimal']['input']>;
  falsePhase?: InputMaybe<Scalars['String']['input']>;
  finalPrice?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isShortList?: InputMaybe<Scalars['Boolean']['input']>;
  newContractorName?: InputMaybe<Scalars['String']['input']>;
  price?: InputMaybe<Scalars['Decimal']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  result?: InputMaybe<Scalars['String']['input']>;
  role?: InputMaybe<Scalars['String']['input']>;
  techScore?: InputMaybe<Scalars['Decimal']['input']>;
  ventureCode?: InputMaybe<Scalars['String']['input']>;
  ventureName?: InputMaybe<Scalars['String']['input']>;
  winningPrice?: InputMaybe<Scalars['Decimal']['input']>;
};

export type BidNotificationContractorCreateManyBidNotificationResultInputEnvelope = {
  data: Array<BidNotificationContractorCreateManyBidNotificationResultInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidNotificationContractorCreateManyContractorInput = {
  bidLotResultId?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  bidNotificationResultId?: InputMaybe<Scalars['String']['input']>;
  contractSignDate?: InputMaybe<Scalars['DateTime']['input']>;
  contractorCode?: InputMaybe<Scalars['String']['input']>;
  contractorName?: InputMaybe<Scalars['String']['input']>;
  discountPercent?: InputMaybe<Scalars['Decimal']['input']>;
  evalBidPrice?: InputMaybe<Scalars['Decimal']['input']>;
  falsePhase?: InputMaybe<Scalars['String']['input']>;
  finalPrice?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isShortList?: InputMaybe<Scalars['Boolean']['input']>;
  newContractorName?: InputMaybe<Scalars['String']['input']>;
  price?: InputMaybe<Scalars['Decimal']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  result?: InputMaybe<Scalars['String']['input']>;
  role?: InputMaybe<Scalars['String']['input']>;
  techScore?: InputMaybe<Scalars['Decimal']['input']>;
  ventureCode?: InputMaybe<Scalars['String']['input']>;
  ventureName?: InputMaybe<Scalars['String']['input']>;
  winningPrice?: InputMaybe<Scalars['Decimal']['input']>;
};

export type BidNotificationContractorCreateManyContractorInputEnvelope = {
  data: Array<BidNotificationContractorCreateManyContractorInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidNotificationContractorCreateNestedManyWithoutBidLotResultInput = {
  connect?: InputMaybe<Array<BidNotificationContractorWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationContractorCreateOrConnectWithoutBidLotResultInput>>;
  create?: InputMaybe<Array<BidNotificationContractorCreateWithoutBidLotResultInput>>;
  createMany?: InputMaybe<BidNotificationContractorCreateManyBidLotResultInputEnvelope>;
};

export type BidNotificationContractorCreateNestedManyWithoutBidNotificationInput = {
  connect?: InputMaybe<Array<BidNotificationContractorWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationContractorCreateOrConnectWithoutBidNotificationInput>>;
  create?: InputMaybe<Array<BidNotificationContractorCreateWithoutBidNotificationInput>>;
  createMany?: InputMaybe<BidNotificationContractorCreateManyBidNotificationInputEnvelope>;
};

export type BidNotificationContractorCreateNestedManyWithoutBidNotificationResultInput = {
  connect?: InputMaybe<Array<BidNotificationContractorWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationContractorCreateOrConnectWithoutBidNotificationResultInput>>;
  create?: InputMaybe<Array<BidNotificationContractorCreateWithoutBidNotificationResultInput>>;
  createMany?: InputMaybe<BidNotificationContractorCreateManyBidNotificationResultInputEnvelope>;
};

export type BidNotificationContractorCreateNestedManyWithoutContractorInput = {
  connect?: InputMaybe<Array<BidNotificationContractorWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationContractorCreateOrConnectWithoutContractorInput>>;
  create?: InputMaybe<Array<BidNotificationContractorCreateWithoutContractorInput>>;
  createMany?: InputMaybe<BidNotificationContractorCreateManyContractorInputEnvelope>;
};

export type BidNotificationContractorCreateOrConnectWithoutBidLotResultInput = {
  create: BidNotificationContractorCreateWithoutBidLotResultInput;
  where: BidNotificationContractorWhereUniqueInput;
};

export type BidNotificationContractorCreateOrConnectWithoutBidNotificationInput = {
  create: BidNotificationContractorCreateWithoutBidNotificationInput;
  where: BidNotificationContractorWhereUniqueInput;
};

export type BidNotificationContractorCreateOrConnectWithoutBidNotificationResultInput = {
  create: BidNotificationContractorCreateWithoutBidNotificationResultInput;
  where: BidNotificationContractorWhereUniqueInput;
};

export type BidNotificationContractorCreateOrConnectWithoutContractorInput = {
  create: BidNotificationContractorCreateWithoutContractorInput;
  where: BidNotificationContractorWhereUniqueInput;
};

export type BidNotificationContractorCreateWithoutBidLotResultInput = {
  bidNotification?: InputMaybe<BidNotificationCreateNestedOneWithoutContractorsInput>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationResult?: InputMaybe<BidNotificationResultCreateNestedOneWithoutBidNotificationContractorsInput>;
  contractSignDate?: InputMaybe<Scalars['DateTime']['input']>;
  contractor?: InputMaybe<OrganizationCreateNestedOneWithoutNotificationContractorsInput>;
  contractorCode?: InputMaybe<Scalars['String']['input']>;
  contractorName?: InputMaybe<Scalars['String']['input']>;
  discountPercent?: InputMaybe<Scalars['Decimal']['input']>;
  evalBidPrice?: InputMaybe<Scalars['Decimal']['input']>;
  falsePhase?: InputMaybe<Scalars['String']['input']>;
  finalPrice?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isShortList?: InputMaybe<Scalars['Boolean']['input']>;
  newContractorName?: InputMaybe<Scalars['String']['input']>;
  price?: InputMaybe<Scalars['Decimal']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  result?: InputMaybe<Scalars['String']['input']>;
  role?: InputMaybe<Scalars['String']['input']>;
  techScore?: InputMaybe<Scalars['Decimal']['input']>;
  ventureCode?: InputMaybe<Scalars['String']['input']>;
  ventureName?: InputMaybe<Scalars['String']['input']>;
  winningPrice?: InputMaybe<Scalars['Decimal']['input']>;
};

export type BidNotificationContractorCreateWithoutBidNotificationInput = {
  bidLotResult?: InputMaybe<BidLotResultCreateNestedOneWithoutBidNotificationContractorsInput>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationResult?: InputMaybe<BidNotificationResultCreateNestedOneWithoutBidNotificationContractorsInput>;
  contractSignDate?: InputMaybe<Scalars['DateTime']['input']>;
  contractor?: InputMaybe<OrganizationCreateNestedOneWithoutNotificationContractorsInput>;
  contractorCode?: InputMaybe<Scalars['String']['input']>;
  contractorName?: InputMaybe<Scalars['String']['input']>;
  discountPercent?: InputMaybe<Scalars['Decimal']['input']>;
  evalBidPrice?: InputMaybe<Scalars['Decimal']['input']>;
  falsePhase?: InputMaybe<Scalars['String']['input']>;
  finalPrice?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isShortList?: InputMaybe<Scalars['Boolean']['input']>;
  newContractorName?: InputMaybe<Scalars['String']['input']>;
  price?: InputMaybe<Scalars['Decimal']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  result?: InputMaybe<Scalars['String']['input']>;
  role?: InputMaybe<Scalars['String']['input']>;
  techScore?: InputMaybe<Scalars['Decimal']['input']>;
  ventureCode?: InputMaybe<Scalars['String']['input']>;
  ventureName?: InputMaybe<Scalars['String']['input']>;
  winningPrice?: InputMaybe<Scalars['Decimal']['input']>;
};

export type BidNotificationContractorCreateWithoutBidNotificationResultInput = {
  bidLotResult?: InputMaybe<BidLotResultCreateNestedOneWithoutBidNotificationContractorsInput>;
  bidNotification?: InputMaybe<BidNotificationCreateNestedOneWithoutContractorsInput>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  contractSignDate?: InputMaybe<Scalars['DateTime']['input']>;
  contractor?: InputMaybe<OrganizationCreateNestedOneWithoutNotificationContractorsInput>;
  contractorCode?: InputMaybe<Scalars['String']['input']>;
  contractorName?: InputMaybe<Scalars['String']['input']>;
  discountPercent?: InputMaybe<Scalars['Decimal']['input']>;
  evalBidPrice?: InputMaybe<Scalars['Decimal']['input']>;
  falsePhase?: InputMaybe<Scalars['String']['input']>;
  finalPrice?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isShortList?: InputMaybe<Scalars['Boolean']['input']>;
  newContractorName?: InputMaybe<Scalars['String']['input']>;
  price?: InputMaybe<Scalars['Decimal']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  result?: InputMaybe<Scalars['String']['input']>;
  role?: InputMaybe<Scalars['String']['input']>;
  techScore?: InputMaybe<Scalars['Decimal']['input']>;
  ventureCode?: InputMaybe<Scalars['String']['input']>;
  ventureName?: InputMaybe<Scalars['String']['input']>;
  winningPrice?: InputMaybe<Scalars['Decimal']['input']>;
};

export type BidNotificationContractorCreateWithoutContractorInput = {
  bidLotResult?: InputMaybe<BidLotResultCreateNestedOneWithoutBidNotificationContractorsInput>;
  bidNotification?: InputMaybe<BidNotificationCreateNestedOneWithoutContractorsInput>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationResult?: InputMaybe<BidNotificationResultCreateNestedOneWithoutBidNotificationContractorsInput>;
  contractSignDate?: InputMaybe<Scalars['DateTime']['input']>;
  contractorCode?: InputMaybe<Scalars['String']['input']>;
  contractorName?: InputMaybe<Scalars['String']['input']>;
  discountPercent?: InputMaybe<Scalars['Decimal']['input']>;
  evalBidPrice?: InputMaybe<Scalars['Decimal']['input']>;
  falsePhase?: InputMaybe<Scalars['String']['input']>;
  finalPrice?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isShortList?: InputMaybe<Scalars['Boolean']['input']>;
  newContractorName?: InputMaybe<Scalars['String']['input']>;
  price?: InputMaybe<Scalars['Decimal']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  result?: InputMaybe<Scalars['String']['input']>;
  role?: InputMaybe<Scalars['String']['input']>;
  techScore?: InputMaybe<Scalars['Decimal']['input']>;
  ventureCode?: InputMaybe<Scalars['String']['input']>;
  ventureName?: InputMaybe<Scalars['String']['input']>;
  winningPrice?: InputMaybe<Scalars['Decimal']['input']>;
};

export type BidNotificationContractorListRelationFilter = {
  every?: InputMaybe<BidNotificationContractorWhereInput>;
  none?: InputMaybe<BidNotificationContractorWhereInput>;
  some?: InputMaybe<BidNotificationContractorWhereInput>;
};

export type BidNotificationContractorOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type BidNotificationContractorOrderByWithRelationInput = {
  bidLotResult?: InputMaybe<BidLotResultOrderByWithRelationInput>;
  bidLotResultId?: InputMaybe<SortOrderInput>;
  bidNotification?: InputMaybe<BidNotificationOrderByWithRelationInput>;
  bidNotificationCode?: InputMaybe<SortOrderInput>;
  bidNotificationId?: InputMaybe<SortOrderInput>;
  bidNotificationResult?: InputMaybe<BidNotificationResultOrderByWithRelationInput>;
  bidNotificationResultId?: InputMaybe<SortOrderInput>;
  contractSignDate?: InputMaybe<SortOrderInput>;
  contractor?: InputMaybe<OrganizationOrderByWithRelationInput>;
  contractorCode?: InputMaybe<SortOrderInput>;
  contractorId?: InputMaybe<SortOrderInput>;
  contractorName?: InputMaybe<SortOrderInput>;
  discountPercent?: InputMaybe<SortOrderInput>;
  evalBidPrice?: InputMaybe<SortOrderInput>;
  falsePhase?: InputMaybe<SortOrderInput>;
  finalPrice?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  isShortList?: InputMaybe<SortOrder>;
  newContractorName?: InputMaybe<SortOrderInput>;
  price?: InputMaybe<SortOrderInput>;
  reason?: InputMaybe<SortOrderInput>;
  result?: InputMaybe<SortOrderInput>;
  role?: InputMaybe<SortOrderInput>;
  techScore?: InputMaybe<SortOrderInput>;
  ventureCode?: InputMaybe<SortOrderInput>;
  ventureName?: InputMaybe<SortOrderInput>;
  winningPrice?: InputMaybe<SortOrderInput>;
};

export enum BidNotificationContractorScalarFieldEnum {
  BidLotResultId = 'bidLotResultId',
  BidNotificationCode = 'bidNotificationCode',
  BidNotificationId = 'bidNotificationId',
  BidNotificationResultId = 'bidNotificationResultId',
  ContractSignDate = 'contractSignDate',
  ContractorCode = 'contractorCode',
  ContractorId = 'contractorId',
  ContractorName = 'contractorName',
  DiscountPercent = 'discountPercent',
  EvalBidPrice = 'evalBidPrice',
  FalsePhase = 'falsePhase',
  FinalPrice = 'finalPrice',
  Id = 'id',
  IsShortList = 'isShortList',
  NewContractorName = 'newContractorName',
  Price = 'price',
  Reason = 'reason',
  Result = 'result',
  Role = 'role',
  TechScore = 'techScore',
  VentureCode = 'ventureCode',
  VentureName = 'ventureName',
  WinningPrice = 'winningPrice'
}

export type BidNotificationContractorScalarWhereInput = {
  AND?: InputMaybe<Array<BidNotificationContractorScalarWhereInput>>;
  NOT?: InputMaybe<Array<BidNotificationContractorScalarWhereInput>>;
  OR?: InputMaybe<Array<BidNotificationContractorScalarWhereInput>>;
  bidLotResultId?: InputMaybe<StringNullableFilter>;
  bidNotificationCode?: InputMaybe<StringNullableFilter>;
  bidNotificationId?: InputMaybe<StringNullableFilter>;
  bidNotificationResultId?: InputMaybe<StringNullableFilter>;
  contractSignDate?: InputMaybe<DateTimeNullableFilter>;
  contractorCode?: InputMaybe<StringNullableFilter>;
  contractorId?: InputMaybe<StringNullableFilter>;
  contractorName?: InputMaybe<StringNullableFilter>;
  discountPercent?: InputMaybe<DecimalNullableFilter>;
  evalBidPrice?: InputMaybe<DecimalNullableFilter>;
  falsePhase?: InputMaybe<StringNullableFilter>;
  finalPrice?: InputMaybe<DecimalNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isShortList?: InputMaybe<BoolFilter>;
  newContractorName?: InputMaybe<StringNullableFilter>;
  price?: InputMaybe<DecimalNullableFilter>;
  reason?: InputMaybe<StringNullableFilter>;
  result?: InputMaybe<StringNullableFilter>;
  role?: InputMaybe<StringNullableFilter>;
  techScore?: InputMaybe<DecimalNullableFilter>;
  ventureCode?: InputMaybe<StringNullableFilter>;
  ventureName?: InputMaybe<StringNullableFilter>;
  winningPrice?: InputMaybe<DecimalNullableFilter>;
};

export type BidNotificationContractorUpdateInput = {
  bidLotResult?: InputMaybe<BidLotResultUpdateOneWithoutBidNotificationContractorsNestedInput>;
  bidNotification?: InputMaybe<BidNotificationUpdateOneWithoutContractorsNestedInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationResult?: InputMaybe<BidNotificationResultUpdateOneWithoutBidNotificationContractorsNestedInput>;
  contractSignDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  contractor?: InputMaybe<OrganizationUpdateOneWithoutNotificationContractorsNestedInput>;
  contractorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discountPercent?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  evalBidPrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  falsePhase?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  finalPrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isShortList?: InputMaybe<BoolFieldUpdateOperationsInput>;
  newContractorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  result?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  role?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  techScore?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  ventureCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ventureName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  winningPrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
};

export type BidNotificationContractorUpdateManyMutationInput = {
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractSignDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  contractorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discountPercent?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  evalBidPrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  falsePhase?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  finalPrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isShortList?: InputMaybe<BoolFieldUpdateOperationsInput>;
  newContractorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  result?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  role?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  techScore?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  ventureCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ventureName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  winningPrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
};

export type BidNotificationContractorUpdateManyWithWhereWithoutBidLotResultInput = {
  data: BidNotificationContractorUpdateManyMutationInput;
  where: BidNotificationContractorScalarWhereInput;
};

export type BidNotificationContractorUpdateManyWithWhereWithoutBidNotificationInput = {
  data: BidNotificationContractorUpdateManyMutationInput;
  where: BidNotificationContractorScalarWhereInput;
};

export type BidNotificationContractorUpdateManyWithWhereWithoutBidNotificationResultInput = {
  data: BidNotificationContractorUpdateManyMutationInput;
  where: BidNotificationContractorScalarWhereInput;
};

export type BidNotificationContractorUpdateManyWithWhereWithoutContractorInput = {
  data: BidNotificationContractorUpdateManyMutationInput;
  where: BidNotificationContractorScalarWhereInput;
};

export type BidNotificationContractorUpdateManyWithoutBidLotResultNestedInput = {
  connect?: InputMaybe<Array<BidNotificationContractorWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationContractorCreateOrConnectWithoutBidLotResultInput>>;
  create?: InputMaybe<Array<BidNotificationContractorCreateWithoutBidLotResultInput>>;
  createMany?: InputMaybe<BidNotificationContractorCreateManyBidLotResultInputEnvelope>;
  delete?: InputMaybe<Array<BidNotificationContractorWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidNotificationContractorScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidNotificationContractorWhereUniqueInput>>;
  set?: InputMaybe<Array<BidNotificationContractorWhereUniqueInput>>;
  update?: InputMaybe<Array<BidNotificationContractorUpdateWithWhereUniqueWithoutBidLotResultInput>>;
  updateMany?: InputMaybe<Array<BidNotificationContractorUpdateManyWithWhereWithoutBidLotResultInput>>;
  upsert?: InputMaybe<Array<BidNotificationContractorUpsertWithWhereUniqueWithoutBidLotResultInput>>;
};

export type BidNotificationContractorUpdateManyWithoutBidNotificationNestedInput = {
  connect?: InputMaybe<Array<BidNotificationContractorWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationContractorCreateOrConnectWithoutBidNotificationInput>>;
  create?: InputMaybe<Array<BidNotificationContractorCreateWithoutBidNotificationInput>>;
  createMany?: InputMaybe<BidNotificationContractorCreateManyBidNotificationInputEnvelope>;
  delete?: InputMaybe<Array<BidNotificationContractorWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidNotificationContractorScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidNotificationContractorWhereUniqueInput>>;
  set?: InputMaybe<Array<BidNotificationContractorWhereUniqueInput>>;
  update?: InputMaybe<Array<BidNotificationContractorUpdateWithWhereUniqueWithoutBidNotificationInput>>;
  updateMany?: InputMaybe<Array<BidNotificationContractorUpdateManyWithWhereWithoutBidNotificationInput>>;
  upsert?: InputMaybe<Array<BidNotificationContractorUpsertWithWhereUniqueWithoutBidNotificationInput>>;
};

export type BidNotificationContractorUpdateManyWithoutBidNotificationResultNestedInput = {
  connect?: InputMaybe<Array<BidNotificationContractorWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationContractorCreateOrConnectWithoutBidNotificationResultInput>>;
  create?: InputMaybe<Array<BidNotificationContractorCreateWithoutBidNotificationResultInput>>;
  createMany?: InputMaybe<BidNotificationContractorCreateManyBidNotificationResultInputEnvelope>;
  delete?: InputMaybe<Array<BidNotificationContractorWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidNotificationContractorScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidNotificationContractorWhereUniqueInput>>;
  set?: InputMaybe<Array<BidNotificationContractorWhereUniqueInput>>;
  update?: InputMaybe<Array<BidNotificationContractorUpdateWithWhereUniqueWithoutBidNotificationResultInput>>;
  updateMany?: InputMaybe<Array<BidNotificationContractorUpdateManyWithWhereWithoutBidNotificationResultInput>>;
  upsert?: InputMaybe<Array<BidNotificationContractorUpsertWithWhereUniqueWithoutBidNotificationResultInput>>;
};

export type BidNotificationContractorUpdateManyWithoutContractorNestedInput = {
  connect?: InputMaybe<Array<BidNotificationContractorWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationContractorCreateOrConnectWithoutContractorInput>>;
  create?: InputMaybe<Array<BidNotificationContractorCreateWithoutContractorInput>>;
  createMany?: InputMaybe<BidNotificationContractorCreateManyContractorInputEnvelope>;
  delete?: InputMaybe<Array<BidNotificationContractorWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidNotificationContractorScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidNotificationContractorWhereUniqueInput>>;
  set?: InputMaybe<Array<BidNotificationContractorWhereUniqueInput>>;
  update?: InputMaybe<Array<BidNotificationContractorUpdateWithWhereUniqueWithoutContractorInput>>;
  updateMany?: InputMaybe<Array<BidNotificationContractorUpdateManyWithWhereWithoutContractorInput>>;
  upsert?: InputMaybe<Array<BidNotificationContractorUpsertWithWhereUniqueWithoutContractorInput>>;
};

export type BidNotificationContractorUpdateWithWhereUniqueWithoutBidLotResultInput = {
  data: BidNotificationContractorUpdateWithoutBidLotResultInput;
  where: BidNotificationContractorWhereUniqueInput;
};

export type BidNotificationContractorUpdateWithWhereUniqueWithoutBidNotificationInput = {
  data: BidNotificationContractorUpdateWithoutBidNotificationInput;
  where: BidNotificationContractorWhereUniqueInput;
};

export type BidNotificationContractorUpdateWithWhereUniqueWithoutBidNotificationResultInput = {
  data: BidNotificationContractorUpdateWithoutBidNotificationResultInput;
  where: BidNotificationContractorWhereUniqueInput;
};

export type BidNotificationContractorUpdateWithWhereUniqueWithoutContractorInput = {
  data: BidNotificationContractorUpdateWithoutContractorInput;
  where: BidNotificationContractorWhereUniqueInput;
};

export type BidNotificationContractorUpdateWithoutBidLotResultInput = {
  bidNotification?: InputMaybe<BidNotificationUpdateOneWithoutContractorsNestedInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationResult?: InputMaybe<BidNotificationResultUpdateOneWithoutBidNotificationContractorsNestedInput>;
  contractSignDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  contractor?: InputMaybe<OrganizationUpdateOneWithoutNotificationContractorsNestedInput>;
  contractorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discountPercent?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  evalBidPrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  falsePhase?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  finalPrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isShortList?: InputMaybe<BoolFieldUpdateOperationsInput>;
  newContractorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  result?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  role?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  techScore?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  ventureCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ventureName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  winningPrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
};

export type BidNotificationContractorUpdateWithoutBidNotificationInput = {
  bidLotResult?: InputMaybe<BidLotResultUpdateOneWithoutBidNotificationContractorsNestedInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationResult?: InputMaybe<BidNotificationResultUpdateOneWithoutBidNotificationContractorsNestedInput>;
  contractSignDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  contractor?: InputMaybe<OrganizationUpdateOneWithoutNotificationContractorsNestedInput>;
  contractorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discountPercent?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  evalBidPrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  falsePhase?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  finalPrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isShortList?: InputMaybe<BoolFieldUpdateOperationsInput>;
  newContractorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  result?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  role?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  techScore?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  ventureCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ventureName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  winningPrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
};

export type BidNotificationContractorUpdateWithoutBidNotificationResultInput = {
  bidLotResult?: InputMaybe<BidLotResultUpdateOneWithoutBidNotificationContractorsNestedInput>;
  bidNotification?: InputMaybe<BidNotificationUpdateOneWithoutContractorsNestedInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractSignDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  contractor?: InputMaybe<OrganizationUpdateOneWithoutNotificationContractorsNestedInput>;
  contractorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discountPercent?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  evalBidPrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  falsePhase?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  finalPrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isShortList?: InputMaybe<BoolFieldUpdateOperationsInput>;
  newContractorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  result?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  role?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  techScore?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  ventureCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ventureName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  winningPrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
};

export type BidNotificationContractorUpdateWithoutContractorInput = {
  bidLotResult?: InputMaybe<BidLotResultUpdateOneWithoutBidNotificationContractorsNestedInput>;
  bidNotification?: InputMaybe<BidNotificationUpdateOneWithoutContractorsNestedInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationResult?: InputMaybe<BidNotificationResultUpdateOneWithoutBidNotificationContractorsNestedInput>;
  contractSignDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  contractorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discountPercent?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  evalBidPrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  falsePhase?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  finalPrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isShortList?: InputMaybe<BoolFieldUpdateOperationsInput>;
  newContractorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  result?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  role?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  techScore?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  ventureCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ventureName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  winningPrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
};

export type BidNotificationContractorUpsertWithWhereUniqueWithoutBidLotResultInput = {
  create: BidNotificationContractorCreateWithoutBidLotResultInput;
  update: BidNotificationContractorUpdateWithoutBidLotResultInput;
  where: BidNotificationContractorWhereUniqueInput;
};

export type BidNotificationContractorUpsertWithWhereUniqueWithoutBidNotificationInput = {
  create: BidNotificationContractorCreateWithoutBidNotificationInput;
  update: BidNotificationContractorUpdateWithoutBidNotificationInput;
  where: BidNotificationContractorWhereUniqueInput;
};

export type BidNotificationContractorUpsertWithWhereUniqueWithoutBidNotificationResultInput = {
  create: BidNotificationContractorCreateWithoutBidNotificationResultInput;
  update: BidNotificationContractorUpdateWithoutBidNotificationResultInput;
  where: BidNotificationContractorWhereUniqueInput;
};

export type BidNotificationContractorUpsertWithWhereUniqueWithoutContractorInput = {
  create: BidNotificationContractorCreateWithoutContractorInput;
  update: BidNotificationContractorUpdateWithoutContractorInput;
  where: BidNotificationContractorWhereUniqueInput;
};

export type BidNotificationContractorWhereInput = {
  AND?: InputMaybe<Array<BidNotificationContractorWhereInput>>;
  NOT?: InputMaybe<Array<BidNotificationContractorWhereInput>>;
  OR?: InputMaybe<Array<BidNotificationContractorWhereInput>>;
  bidLotResult?: InputMaybe<BidLotResultWhereInput>;
  bidLotResultId?: InputMaybe<StringNullableFilter>;
  bidNotification?: InputMaybe<BidNotificationWhereInput>;
  bidNotificationCode?: InputMaybe<StringNullableFilter>;
  bidNotificationId?: InputMaybe<StringNullableFilter>;
  bidNotificationResult?: InputMaybe<BidNotificationResultWhereInput>;
  bidNotificationResultId?: InputMaybe<StringNullableFilter>;
  contractSignDate?: InputMaybe<DateTimeNullableFilter>;
  contractor?: InputMaybe<OrganizationWhereInput>;
  contractorCode?: InputMaybe<StringNullableFilter>;
  contractorId?: InputMaybe<StringNullableFilter>;
  contractorName?: InputMaybe<StringNullableFilter>;
  discountPercent?: InputMaybe<DecimalNullableFilter>;
  evalBidPrice?: InputMaybe<DecimalNullableFilter>;
  falsePhase?: InputMaybe<StringNullableFilter>;
  finalPrice?: InputMaybe<DecimalNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isShortList?: InputMaybe<BoolFilter>;
  newContractorName?: InputMaybe<StringNullableFilter>;
  price?: InputMaybe<DecimalNullableFilter>;
  reason?: InputMaybe<StringNullableFilter>;
  result?: InputMaybe<StringNullableFilter>;
  role?: InputMaybe<StringNullableFilter>;
  techScore?: InputMaybe<DecimalNullableFilter>;
  ventureCode?: InputMaybe<StringNullableFilter>;
  ventureName?: InputMaybe<StringNullableFilter>;
  winningPrice?: InputMaybe<DecimalNullableFilter>;
};

export type BidNotificationContractorWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationCount = {
  __typename?: 'BidNotificationCount';
  bidNotificationChapters: Scalars['Int']['output'];
  bidNotificationClarifies: Scalars['Int']['output'];
  bidNotificationResultGoodsPrices: Scalars['Int']['output'];
  bidPetitionContractors: Scalars['Int']['output'];
  bidPreConferences: Scalars['Int']['output'];
  chapterFiles: Scalars['Int']['output'];
  contractors: Scalars['Int']['output'];
  result: Scalars['Int']['output'];
};

export type BidNotificationCreateInput = {
  bidNotificationChapters?: InputMaybe<BidNotificationChapterCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationClarifies?: InputMaybe<BidNotificationClarifyCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  bidNotificationResultGoodsPrices?: InputMaybe<BidNotificationResultGoodsPriceCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationStatus?: InputMaybe<CatBidNotificationStatusCreateNestedOneWithoutBidNotificationsInput>;
  bidPackage?: InputMaybe<BidPackageCreateNestedOneWithoutBidNotificationsInput>;
  bidPackageCode?: InputMaybe<Scalars['String']['input']>;
  bidPackageName?: InputMaybe<Scalars['String']['input']>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutBidNotificationInput>;
  bidPreConferences?: InputMaybe<BidPreConferenceCreateNestedManyWithoutBidNotificationInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanCreateNestedOneWithoutBidNotificationsInput>;
  briefFileId?: InputMaybe<Scalars['String']['input']>;
  briefFileIdEn?: InputMaybe<Scalars['String']['input']>;
  briefFileName?: InputMaybe<Scalars['String']['input']>;
  briefFileNameEn?: InputMaybe<Scalars['String']['input']>;
  cancelByCode?: InputMaybe<Scalars['String']['input']>;
  cancelDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionAgency?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionFileId?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionFileName?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionNo?: InputMaybe<Scalars['DateTime']['input']>;
  cancelReason?: InputMaybe<Scalars['String']['input']>;
  cancelType?: InputMaybe<Scalars['String']['input']>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutBidNotificationInput>;
  closeDate?: InputMaybe<Scalars['DateTime']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  constructionType?: InputMaybe<CatConstructionTypeCreateNestedOneWithoutBidNotificationsInput>;
  constructionTypeCode?: InputMaybe<Scalars['String']['input']>;
  contractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutBidNotificationInput>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionAgencyEn?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileIdEn?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionFileNameEn?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  decisionNoEn?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  fileId?: InputMaybe<Scalars['String']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  guaranteeForm?: InputMaybe<Scalars['String']['input']>;
  guaranteeValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investField?: InputMaybe<CatBidFieldCreateNestedOneWithoutInvestBidNotificationsInput>;
  investFieldCode?: InputMaybe<Scalars['String']['input']>;
  investor?: InputMaybe<OrganizationCreateNestedOneWithoutInvestorBidNotificationsInput>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isInviteInterest?: InputMaybe<Scalars['Boolean']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isPreNotification?: InputMaybe<Scalars['Boolean']['input']>;
  issueLocation?: InputMaybe<Scalars['String']['input']>;
  openDate?: InputMaybe<Scalars['DateTime']['input']>;
  openLocation?: InputMaybe<Scalars['String']['input']>;
  otherFileId?: InputMaybe<Scalars['String']['input']>;
  otherFileIdEn?: InputMaybe<Scalars['String']['input']>;
  otherFileName?: InputMaybe<Scalars['String']['input']>;
  otherFileNameEn?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planName?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutBidNotificationsInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntity?: InputMaybe<OrganizationCreateNestedOneWithoutProcuringEntitiesInput>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  receiveLocation?: InputMaybe<Scalars['String']['input']>;
  result?: InputMaybe<BidNotificationResultCreateNestedManyWithoutBidNotificationInput>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  submitFee?: InputMaybe<Scalars['String']['input']>;
  totalContractor?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  validityPeriod?: InputMaybe<Scalars['Int']['input']>;
  validityPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationCreateManyBidPackageInput = {
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  bidPackageCode?: InputMaybe<Scalars['String']['input']>;
  bidPackageName?: InputMaybe<Scalars['String']['input']>;
  briefFileId?: InputMaybe<Scalars['String']['input']>;
  briefFileIdEn?: InputMaybe<Scalars['String']['input']>;
  briefFileName?: InputMaybe<Scalars['String']['input']>;
  briefFileNameEn?: InputMaybe<Scalars['String']['input']>;
  cancelByCode?: InputMaybe<Scalars['String']['input']>;
  cancelDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionAgency?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionFileId?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionFileName?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionNo?: InputMaybe<Scalars['DateTime']['input']>;
  cancelReason?: InputMaybe<Scalars['String']['input']>;
  cancelType?: InputMaybe<Scalars['String']['input']>;
  closeDate?: InputMaybe<Scalars['DateTime']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  constructionTypeCode?: InputMaybe<Scalars['String']['input']>;
  constructionTypeId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionAgencyEn?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileIdEn?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionFileNameEn?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  decisionNoEn?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  fileId?: InputMaybe<Scalars['String']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  guaranteeForm?: InputMaybe<Scalars['String']['input']>;
  guaranteeValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investFieldCode?: InputMaybe<Scalars['String']['input']>;
  investFieldId?: InputMaybe<Scalars['String']['input']>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorId?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isInviteInterest?: InputMaybe<Scalars['Boolean']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isPreNotification?: InputMaybe<Scalars['Boolean']['input']>;
  issueLocation?: InputMaybe<Scalars['String']['input']>;
  openDate?: InputMaybe<Scalars['DateTime']['input']>;
  openLocation?: InputMaybe<Scalars['String']['input']>;
  otherFileId?: InputMaybe<Scalars['String']['input']>;
  otherFileIdEn?: InputMaybe<Scalars['String']['input']>;
  otherFileName?: InputMaybe<Scalars['String']['input']>;
  otherFileNameEn?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planId?: InputMaybe<Scalars['String']['input']>;
  planName?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  processApplyId?: InputMaybe<Scalars['String']['input']>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityId?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  receiveLocation?: InputMaybe<Scalars['String']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  statusId?: InputMaybe<Scalars['String']['input']>;
  submitFee?: InputMaybe<Scalars['String']['input']>;
  totalContractor?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  validityPeriod?: InputMaybe<Scalars['Int']['input']>;
  validityPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationCreateManyBidPackageInputEnvelope = {
  data: Array<BidNotificationCreateManyBidPackageInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidNotificationCreateManyBidSelectionPlanInput = {
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  bidPackageCode?: InputMaybe<Scalars['String']['input']>;
  bidPackageId?: InputMaybe<Scalars['String']['input']>;
  bidPackageName?: InputMaybe<Scalars['String']['input']>;
  briefFileId?: InputMaybe<Scalars['String']['input']>;
  briefFileIdEn?: InputMaybe<Scalars['String']['input']>;
  briefFileName?: InputMaybe<Scalars['String']['input']>;
  briefFileNameEn?: InputMaybe<Scalars['String']['input']>;
  cancelByCode?: InputMaybe<Scalars['String']['input']>;
  cancelDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionAgency?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionFileId?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionFileName?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionNo?: InputMaybe<Scalars['DateTime']['input']>;
  cancelReason?: InputMaybe<Scalars['String']['input']>;
  cancelType?: InputMaybe<Scalars['String']['input']>;
  closeDate?: InputMaybe<Scalars['DateTime']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  constructionTypeCode?: InputMaybe<Scalars['String']['input']>;
  constructionTypeId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionAgencyEn?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileIdEn?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionFileNameEn?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  decisionNoEn?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  fileId?: InputMaybe<Scalars['String']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  guaranteeForm?: InputMaybe<Scalars['String']['input']>;
  guaranteeValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investFieldCode?: InputMaybe<Scalars['String']['input']>;
  investFieldId?: InputMaybe<Scalars['String']['input']>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorId?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isInviteInterest?: InputMaybe<Scalars['Boolean']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isPreNotification?: InputMaybe<Scalars['Boolean']['input']>;
  issueLocation?: InputMaybe<Scalars['String']['input']>;
  openDate?: InputMaybe<Scalars['DateTime']['input']>;
  openLocation?: InputMaybe<Scalars['String']['input']>;
  otherFileId?: InputMaybe<Scalars['String']['input']>;
  otherFileIdEn?: InputMaybe<Scalars['String']['input']>;
  otherFileName?: InputMaybe<Scalars['String']['input']>;
  otherFileNameEn?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planName?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  processApplyId?: InputMaybe<Scalars['String']['input']>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityId?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  receiveLocation?: InputMaybe<Scalars['String']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  statusId?: InputMaybe<Scalars['String']['input']>;
  submitFee?: InputMaybe<Scalars['String']['input']>;
  totalContractor?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  validityPeriod?: InputMaybe<Scalars['Int']['input']>;
  validityPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationCreateManyBidSelectionPlanInputEnvelope = {
  data: Array<BidNotificationCreateManyBidSelectionPlanInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidNotificationCreateManyConstructionTypeInput = {
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  bidPackageCode?: InputMaybe<Scalars['String']['input']>;
  bidPackageId?: InputMaybe<Scalars['String']['input']>;
  bidPackageName?: InputMaybe<Scalars['String']['input']>;
  briefFileId?: InputMaybe<Scalars['String']['input']>;
  briefFileIdEn?: InputMaybe<Scalars['String']['input']>;
  briefFileName?: InputMaybe<Scalars['String']['input']>;
  briefFileNameEn?: InputMaybe<Scalars['String']['input']>;
  cancelByCode?: InputMaybe<Scalars['String']['input']>;
  cancelDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionAgency?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionFileId?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionFileName?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionNo?: InputMaybe<Scalars['DateTime']['input']>;
  cancelReason?: InputMaybe<Scalars['String']['input']>;
  cancelType?: InputMaybe<Scalars['String']['input']>;
  closeDate?: InputMaybe<Scalars['DateTime']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  constructionTypeCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionAgencyEn?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileIdEn?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionFileNameEn?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  decisionNoEn?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  fileId?: InputMaybe<Scalars['String']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  guaranteeForm?: InputMaybe<Scalars['String']['input']>;
  guaranteeValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investFieldCode?: InputMaybe<Scalars['String']['input']>;
  investFieldId?: InputMaybe<Scalars['String']['input']>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorId?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isInviteInterest?: InputMaybe<Scalars['Boolean']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isPreNotification?: InputMaybe<Scalars['Boolean']['input']>;
  issueLocation?: InputMaybe<Scalars['String']['input']>;
  openDate?: InputMaybe<Scalars['DateTime']['input']>;
  openLocation?: InputMaybe<Scalars['String']['input']>;
  otherFileId?: InputMaybe<Scalars['String']['input']>;
  otherFileIdEn?: InputMaybe<Scalars['String']['input']>;
  otherFileName?: InputMaybe<Scalars['String']['input']>;
  otherFileNameEn?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planId?: InputMaybe<Scalars['String']['input']>;
  planName?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  processApplyId?: InputMaybe<Scalars['String']['input']>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityId?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  receiveLocation?: InputMaybe<Scalars['String']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  statusId?: InputMaybe<Scalars['String']['input']>;
  submitFee?: InputMaybe<Scalars['String']['input']>;
  totalContractor?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  validityPeriod?: InputMaybe<Scalars['Int']['input']>;
  validityPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationCreateManyConstructionTypeInputEnvelope = {
  data: Array<BidNotificationCreateManyConstructionTypeInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidNotificationCreateManyInvestFieldInput = {
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  bidPackageCode?: InputMaybe<Scalars['String']['input']>;
  bidPackageId?: InputMaybe<Scalars['String']['input']>;
  bidPackageName?: InputMaybe<Scalars['String']['input']>;
  briefFileId?: InputMaybe<Scalars['String']['input']>;
  briefFileIdEn?: InputMaybe<Scalars['String']['input']>;
  briefFileName?: InputMaybe<Scalars['String']['input']>;
  briefFileNameEn?: InputMaybe<Scalars['String']['input']>;
  cancelByCode?: InputMaybe<Scalars['String']['input']>;
  cancelDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionAgency?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionFileId?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionFileName?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionNo?: InputMaybe<Scalars['DateTime']['input']>;
  cancelReason?: InputMaybe<Scalars['String']['input']>;
  cancelType?: InputMaybe<Scalars['String']['input']>;
  closeDate?: InputMaybe<Scalars['DateTime']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  constructionTypeCode?: InputMaybe<Scalars['String']['input']>;
  constructionTypeId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionAgencyEn?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileIdEn?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionFileNameEn?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  decisionNoEn?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  fileId?: InputMaybe<Scalars['String']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  guaranteeForm?: InputMaybe<Scalars['String']['input']>;
  guaranteeValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investFieldCode?: InputMaybe<Scalars['String']['input']>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorId?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isInviteInterest?: InputMaybe<Scalars['Boolean']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isPreNotification?: InputMaybe<Scalars['Boolean']['input']>;
  issueLocation?: InputMaybe<Scalars['String']['input']>;
  openDate?: InputMaybe<Scalars['DateTime']['input']>;
  openLocation?: InputMaybe<Scalars['String']['input']>;
  otherFileId?: InputMaybe<Scalars['String']['input']>;
  otherFileIdEn?: InputMaybe<Scalars['String']['input']>;
  otherFileName?: InputMaybe<Scalars['String']['input']>;
  otherFileNameEn?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planId?: InputMaybe<Scalars['String']['input']>;
  planName?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  processApplyId?: InputMaybe<Scalars['String']['input']>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityId?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  receiveLocation?: InputMaybe<Scalars['String']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  statusId?: InputMaybe<Scalars['String']['input']>;
  submitFee?: InputMaybe<Scalars['String']['input']>;
  totalContractor?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  validityPeriod?: InputMaybe<Scalars['Int']['input']>;
  validityPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationCreateManyInvestFieldInputEnvelope = {
  data: Array<BidNotificationCreateManyInvestFieldInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidNotificationCreateManyInvestorInput = {
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  bidPackageCode?: InputMaybe<Scalars['String']['input']>;
  bidPackageId?: InputMaybe<Scalars['String']['input']>;
  bidPackageName?: InputMaybe<Scalars['String']['input']>;
  briefFileId?: InputMaybe<Scalars['String']['input']>;
  briefFileIdEn?: InputMaybe<Scalars['String']['input']>;
  briefFileName?: InputMaybe<Scalars['String']['input']>;
  briefFileNameEn?: InputMaybe<Scalars['String']['input']>;
  cancelByCode?: InputMaybe<Scalars['String']['input']>;
  cancelDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionAgency?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionFileId?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionFileName?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionNo?: InputMaybe<Scalars['DateTime']['input']>;
  cancelReason?: InputMaybe<Scalars['String']['input']>;
  cancelType?: InputMaybe<Scalars['String']['input']>;
  closeDate?: InputMaybe<Scalars['DateTime']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  constructionTypeCode?: InputMaybe<Scalars['String']['input']>;
  constructionTypeId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionAgencyEn?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileIdEn?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionFileNameEn?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  decisionNoEn?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  fileId?: InputMaybe<Scalars['String']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  guaranteeForm?: InputMaybe<Scalars['String']['input']>;
  guaranteeValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investFieldCode?: InputMaybe<Scalars['String']['input']>;
  investFieldId?: InputMaybe<Scalars['String']['input']>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isInviteInterest?: InputMaybe<Scalars['Boolean']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isPreNotification?: InputMaybe<Scalars['Boolean']['input']>;
  issueLocation?: InputMaybe<Scalars['String']['input']>;
  openDate?: InputMaybe<Scalars['DateTime']['input']>;
  openLocation?: InputMaybe<Scalars['String']['input']>;
  otherFileId?: InputMaybe<Scalars['String']['input']>;
  otherFileIdEn?: InputMaybe<Scalars['String']['input']>;
  otherFileName?: InputMaybe<Scalars['String']['input']>;
  otherFileNameEn?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planId?: InputMaybe<Scalars['String']['input']>;
  planName?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  processApplyId?: InputMaybe<Scalars['String']['input']>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityId?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  receiveLocation?: InputMaybe<Scalars['String']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  statusId?: InputMaybe<Scalars['String']['input']>;
  submitFee?: InputMaybe<Scalars['String']['input']>;
  totalContractor?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  validityPeriod?: InputMaybe<Scalars['Int']['input']>;
  validityPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationCreateManyInvestorInputEnvelope = {
  data: Array<BidNotificationCreateManyInvestorInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidNotificationCreateManyProcessApplyInput = {
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  bidPackageCode?: InputMaybe<Scalars['String']['input']>;
  bidPackageId?: InputMaybe<Scalars['String']['input']>;
  bidPackageName?: InputMaybe<Scalars['String']['input']>;
  briefFileId?: InputMaybe<Scalars['String']['input']>;
  briefFileIdEn?: InputMaybe<Scalars['String']['input']>;
  briefFileName?: InputMaybe<Scalars['String']['input']>;
  briefFileNameEn?: InputMaybe<Scalars['String']['input']>;
  cancelByCode?: InputMaybe<Scalars['String']['input']>;
  cancelDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionAgency?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionFileId?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionFileName?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionNo?: InputMaybe<Scalars['DateTime']['input']>;
  cancelReason?: InputMaybe<Scalars['String']['input']>;
  cancelType?: InputMaybe<Scalars['String']['input']>;
  closeDate?: InputMaybe<Scalars['DateTime']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  constructionTypeCode?: InputMaybe<Scalars['String']['input']>;
  constructionTypeId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionAgencyEn?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileIdEn?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionFileNameEn?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  decisionNoEn?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  fileId?: InputMaybe<Scalars['String']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  guaranteeForm?: InputMaybe<Scalars['String']['input']>;
  guaranteeValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investFieldCode?: InputMaybe<Scalars['String']['input']>;
  investFieldId?: InputMaybe<Scalars['String']['input']>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorId?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isInviteInterest?: InputMaybe<Scalars['Boolean']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isPreNotification?: InputMaybe<Scalars['Boolean']['input']>;
  issueLocation?: InputMaybe<Scalars['String']['input']>;
  openDate?: InputMaybe<Scalars['DateTime']['input']>;
  openLocation?: InputMaybe<Scalars['String']['input']>;
  otherFileId?: InputMaybe<Scalars['String']['input']>;
  otherFileIdEn?: InputMaybe<Scalars['String']['input']>;
  otherFileName?: InputMaybe<Scalars['String']['input']>;
  otherFileNameEn?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planId?: InputMaybe<Scalars['String']['input']>;
  planName?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityId?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  receiveLocation?: InputMaybe<Scalars['String']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  statusId?: InputMaybe<Scalars['String']['input']>;
  submitFee?: InputMaybe<Scalars['String']['input']>;
  totalContractor?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  validityPeriod?: InputMaybe<Scalars['Int']['input']>;
  validityPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationCreateManyProcessApplyInputEnvelope = {
  data: Array<BidNotificationCreateManyProcessApplyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidNotificationCreateManyProcuringEntityInput = {
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  bidPackageCode?: InputMaybe<Scalars['String']['input']>;
  bidPackageId?: InputMaybe<Scalars['String']['input']>;
  bidPackageName?: InputMaybe<Scalars['String']['input']>;
  briefFileId?: InputMaybe<Scalars['String']['input']>;
  briefFileIdEn?: InputMaybe<Scalars['String']['input']>;
  briefFileName?: InputMaybe<Scalars['String']['input']>;
  briefFileNameEn?: InputMaybe<Scalars['String']['input']>;
  cancelByCode?: InputMaybe<Scalars['String']['input']>;
  cancelDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionAgency?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionFileId?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionFileName?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionNo?: InputMaybe<Scalars['DateTime']['input']>;
  cancelReason?: InputMaybe<Scalars['String']['input']>;
  cancelType?: InputMaybe<Scalars['String']['input']>;
  closeDate?: InputMaybe<Scalars['DateTime']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  constructionTypeCode?: InputMaybe<Scalars['String']['input']>;
  constructionTypeId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionAgencyEn?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileIdEn?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionFileNameEn?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  decisionNoEn?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  fileId?: InputMaybe<Scalars['String']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  guaranteeForm?: InputMaybe<Scalars['String']['input']>;
  guaranteeValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investFieldCode?: InputMaybe<Scalars['String']['input']>;
  investFieldId?: InputMaybe<Scalars['String']['input']>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorId?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isInviteInterest?: InputMaybe<Scalars['Boolean']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isPreNotification?: InputMaybe<Scalars['Boolean']['input']>;
  issueLocation?: InputMaybe<Scalars['String']['input']>;
  openDate?: InputMaybe<Scalars['DateTime']['input']>;
  openLocation?: InputMaybe<Scalars['String']['input']>;
  otherFileId?: InputMaybe<Scalars['String']['input']>;
  otherFileIdEn?: InputMaybe<Scalars['String']['input']>;
  otherFileName?: InputMaybe<Scalars['String']['input']>;
  otherFileNameEn?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planId?: InputMaybe<Scalars['String']['input']>;
  planName?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  processApplyId?: InputMaybe<Scalars['String']['input']>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  receiveLocation?: InputMaybe<Scalars['String']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  statusId?: InputMaybe<Scalars['String']['input']>;
  submitFee?: InputMaybe<Scalars['String']['input']>;
  totalContractor?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  validityPeriod?: InputMaybe<Scalars['Int']['input']>;
  validityPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationCreateManyProcuringEntityInputEnvelope = {
  data: Array<BidNotificationCreateManyProcuringEntityInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidNotificationCreateNestedManyWithoutBidPackageInput = {
  connect?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationCreateOrConnectWithoutBidPackageInput>>;
  create?: InputMaybe<Array<BidNotificationCreateWithoutBidPackageInput>>;
  createMany?: InputMaybe<BidNotificationCreateManyBidPackageInputEnvelope>;
};

export type BidNotificationCreateNestedManyWithoutBidSelectionPlanInput = {
  connect?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationCreateOrConnectWithoutBidSelectionPlanInput>>;
  create?: InputMaybe<Array<BidNotificationCreateWithoutBidSelectionPlanInput>>;
  createMany?: InputMaybe<BidNotificationCreateManyBidSelectionPlanInputEnvelope>;
};

export type BidNotificationCreateNestedManyWithoutConstructionTypeInput = {
  connect?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationCreateOrConnectWithoutConstructionTypeInput>>;
  create?: InputMaybe<Array<BidNotificationCreateWithoutConstructionTypeInput>>;
  createMany?: InputMaybe<BidNotificationCreateManyConstructionTypeInputEnvelope>;
};

export type BidNotificationCreateNestedManyWithoutInvestFieldInput = {
  connect?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationCreateOrConnectWithoutInvestFieldInput>>;
  create?: InputMaybe<Array<BidNotificationCreateWithoutInvestFieldInput>>;
  createMany?: InputMaybe<BidNotificationCreateManyInvestFieldInputEnvelope>;
};

export type BidNotificationCreateNestedManyWithoutInvestorInput = {
  connect?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationCreateOrConnectWithoutInvestorInput>>;
  create?: InputMaybe<Array<BidNotificationCreateWithoutInvestorInput>>;
  createMany?: InputMaybe<BidNotificationCreateManyInvestorInputEnvelope>;
};

export type BidNotificationCreateNestedManyWithoutProcessApplyInput = {
  connect?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationCreateOrConnectWithoutProcessApplyInput>>;
  create?: InputMaybe<Array<BidNotificationCreateWithoutProcessApplyInput>>;
  createMany?: InputMaybe<BidNotificationCreateManyProcessApplyInputEnvelope>;
};

export type BidNotificationCreateNestedManyWithoutProcuringEntityInput = {
  connect?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationCreateOrConnectWithoutProcuringEntityInput>>;
  create?: InputMaybe<Array<BidNotificationCreateWithoutProcuringEntityInput>>;
  createMany?: InputMaybe<BidNotificationCreateManyProcuringEntityInputEnvelope>;
};

export type BidNotificationCreateNestedOneWithoutBidNotificationChaptersInput = {
  connect?: InputMaybe<BidNotificationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidNotificationCreateOrConnectWithoutBidNotificationChaptersInput>;
  create?: InputMaybe<BidNotificationCreateWithoutBidNotificationChaptersInput>;
};

export type BidNotificationCreateNestedOneWithoutBidPetitionContractorsInput = {
  connect?: InputMaybe<BidNotificationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidNotificationCreateOrConnectWithoutBidPetitionContractorsInput>;
  create?: InputMaybe<BidNotificationCreateWithoutBidPetitionContractorsInput>;
};

export type BidNotificationCreateNestedOneWithoutChapterFilesInput = {
  connect?: InputMaybe<BidNotificationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidNotificationCreateOrConnectWithoutChapterFilesInput>;
  create?: InputMaybe<BidNotificationCreateWithoutChapterFilesInput>;
};

export type BidNotificationCreateNestedOneWithoutContractorsInput = {
  connect?: InputMaybe<BidNotificationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidNotificationCreateOrConnectWithoutContractorsInput>;
  create?: InputMaybe<BidNotificationCreateWithoutContractorsInput>;
};

export type BidNotificationCreateNestedOneWithoutResultInput = {
  connect?: InputMaybe<BidNotificationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidNotificationCreateOrConnectWithoutResultInput>;
  create?: InputMaybe<BidNotificationCreateWithoutResultInput>;
};

export type BidNotificationCreateOrConnectWithoutBidNotificationChaptersInput = {
  create: BidNotificationCreateWithoutBidNotificationChaptersInput;
  where: BidNotificationWhereUniqueInput;
};

export type BidNotificationCreateOrConnectWithoutBidPackageInput = {
  create: BidNotificationCreateWithoutBidPackageInput;
  where: BidNotificationWhereUniqueInput;
};

export type BidNotificationCreateOrConnectWithoutBidPetitionContractorsInput = {
  create: BidNotificationCreateWithoutBidPetitionContractorsInput;
  where: BidNotificationWhereUniqueInput;
};

export type BidNotificationCreateOrConnectWithoutBidSelectionPlanInput = {
  create: BidNotificationCreateWithoutBidSelectionPlanInput;
  where: BidNotificationWhereUniqueInput;
};

export type BidNotificationCreateOrConnectWithoutChapterFilesInput = {
  create: BidNotificationCreateWithoutChapterFilesInput;
  where: BidNotificationWhereUniqueInput;
};

export type BidNotificationCreateOrConnectWithoutConstructionTypeInput = {
  create: BidNotificationCreateWithoutConstructionTypeInput;
  where: BidNotificationWhereUniqueInput;
};

export type BidNotificationCreateOrConnectWithoutContractorsInput = {
  create: BidNotificationCreateWithoutContractorsInput;
  where: BidNotificationWhereUniqueInput;
};

export type BidNotificationCreateOrConnectWithoutInvestFieldInput = {
  create: BidNotificationCreateWithoutInvestFieldInput;
  where: BidNotificationWhereUniqueInput;
};

export type BidNotificationCreateOrConnectWithoutInvestorInput = {
  create: BidNotificationCreateWithoutInvestorInput;
  where: BidNotificationWhereUniqueInput;
};

export type BidNotificationCreateOrConnectWithoutProcessApplyInput = {
  create: BidNotificationCreateWithoutProcessApplyInput;
  where: BidNotificationWhereUniqueInput;
};

export type BidNotificationCreateOrConnectWithoutProcuringEntityInput = {
  create: BidNotificationCreateWithoutProcuringEntityInput;
  where: BidNotificationWhereUniqueInput;
};

export type BidNotificationCreateOrConnectWithoutResultInput = {
  create: BidNotificationCreateWithoutResultInput;
  where: BidNotificationWhereUniqueInput;
};

export type BidNotificationCreateWithoutBidNotificationChaptersInput = {
  bidNotificationClarifies?: InputMaybe<BidNotificationClarifyCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  bidNotificationResultGoodsPrices?: InputMaybe<BidNotificationResultGoodsPriceCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationStatus?: InputMaybe<CatBidNotificationStatusCreateNestedOneWithoutBidNotificationsInput>;
  bidPackage?: InputMaybe<BidPackageCreateNestedOneWithoutBidNotificationsInput>;
  bidPackageCode?: InputMaybe<Scalars['String']['input']>;
  bidPackageName?: InputMaybe<Scalars['String']['input']>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutBidNotificationInput>;
  bidPreConferences?: InputMaybe<BidPreConferenceCreateNestedManyWithoutBidNotificationInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanCreateNestedOneWithoutBidNotificationsInput>;
  briefFileId?: InputMaybe<Scalars['String']['input']>;
  briefFileIdEn?: InputMaybe<Scalars['String']['input']>;
  briefFileName?: InputMaybe<Scalars['String']['input']>;
  briefFileNameEn?: InputMaybe<Scalars['String']['input']>;
  cancelByCode?: InputMaybe<Scalars['String']['input']>;
  cancelDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionAgency?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionFileId?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionFileName?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionNo?: InputMaybe<Scalars['DateTime']['input']>;
  cancelReason?: InputMaybe<Scalars['String']['input']>;
  cancelType?: InputMaybe<Scalars['String']['input']>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutBidNotificationInput>;
  closeDate?: InputMaybe<Scalars['DateTime']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  constructionType?: InputMaybe<CatConstructionTypeCreateNestedOneWithoutBidNotificationsInput>;
  constructionTypeCode?: InputMaybe<Scalars['String']['input']>;
  contractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutBidNotificationInput>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionAgencyEn?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileIdEn?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionFileNameEn?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  decisionNoEn?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  fileId?: InputMaybe<Scalars['String']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  guaranteeForm?: InputMaybe<Scalars['String']['input']>;
  guaranteeValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investField?: InputMaybe<CatBidFieldCreateNestedOneWithoutInvestBidNotificationsInput>;
  investFieldCode?: InputMaybe<Scalars['String']['input']>;
  investor?: InputMaybe<OrganizationCreateNestedOneWithoutInvestorBidNotificationsInput>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isInviteInterest?: InputMaybe<Scalars['Boolean']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isPreNotification?: InputMaybe<Scalars['Boolean']['input']>;
  issueLocation?: InputMaybe<Scalars['String']['input']>;
  openDate?: InputMaybe<Scalars['DateTime']['input']>;
  openLocation?: InputMaybe<Scalars['String']['input']>;
  otherFileId?: InputMaybe<Scalars['String']['input']>;
  otherFileIdEn?: InputMaybe<Scalars['String']['input']>;
  otherFileName?: InputMaybe<Scalars['String']['input']>;
  otherFileNameEn?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planName?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutBidNotificationsInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntity?: InputMaybe<OrganizationCreateNestedOneWithoutProcuringEntitiesInput>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  receiveLocation?: InputMaybe<Scalars['String']['input']>;
  result?: InputMaybe<BidNotificationResultCreateNestedManyWithoutBidNotificationInput>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  submitFee?: InputMaybe<Scalars['String']['input']>;
  totalContractor?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  validityPeriod?: InputMaybe<Scalars['Int']['input']>;
  validityPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationCreateWithoutBidPackageInput = {
  bidNotificationChapters?: InputMaybe<BidNotificationChapterCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationClarifies?: InputMaybe<BidNotificationClarifyCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  bidNotificationResultGoodsPrices?: InputMaybe<BidNotificationResultGoodsPriceCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationStatus?: InputMaybe<CatBidNotificationStatusCreateNestedOneWithoutBidNotificationsInput>;
  bidPackageCode?: InputMaybe<Scalars['String']['input']>;
  bidPackageName?: InputMaybe<Scalars['String']['input']>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutBidNotificationInput>;
  bidPreConferences?: InputMaybe<BidPreConferenceCreateNestedManyWithoutBidNotificationInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanCreateNestedOneWithoutBidNotificationsInput>;
  briefFileId?: InputMaybe<Scalars['String']['input']>;
  briefFileIdEn?: InputMaybe<Scalars['String']['input']>;
  briefFileName?: InputMaybe<Scalars['String']['input']>;
  briefFileNameEn?: InputMaybe<Scalars['String']['input']>;
  cancelByCode?: InputMaybe<Scalars['String']['input']>;
  cancelDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionAgency?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionFileId?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionFileName?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionNo?: InputMaybe<Scalars['DateTime']['input']>;
  cancelReason?: InputMaybe<Scalars['String']['input']>;
  cancelType?: InputMaybe<Scalars['String']['input']>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutBidNotificationInput>;
  closeDate?: InputMaybe<Scalars['DateTime']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  constructionType?: InputMaybe<CatConstructionTypeCreateNestedOneWithoutBidNotificationsInput>;
  constructionTypeCode?: InputMaybe<Scalars['String']['input']>;
  contractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutBidNotificationInput>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionAgencyEn?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileIdEn?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionFileNameEn?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  decisionNoEn?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  fileId?: InputMaybe<Scalars['String']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  guaranteeForm?: InputMaybe<Scalars['String']['input']>;
  guaranteeValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investField?: InputMaybe<CatBidFieldCreateNestedOneWithoutInvestBidNotificationsInput>;
  investFieldCode?: InputMaybe<Scalars['String']['input']>;
  investor?: InputMaybe<OrganizationCreateNestedOneWithoutInvestorBidNotificationsInput>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isInviteInterest?: InputMaybe<Scalars['Boolean']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isPreNotification?: InputMaybe<Scalars['Boolean']['input']>;
  issueLocation?: InputMaybe<Scalars['String']['input']>;
  openDate?: InputMaybe<Scalars['DateTime']['input']>;
  openLocation?: InputMaybe<Scalars['String']['input']>;
  otherFileId?: InputMaybe<Scalars['String']['input']>;
  otherFileIdEn?: InputMaybe<Scalars['String']['input']>;
  otherFileName?: InputMaybe<Scalars['String']['input']>;
  otherFileNameEn?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planName?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutBidNotificationsInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntity?: InputMaybe<OrganizationCreateNestedOneWithoutProcuringEntitiesInput>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  receiveLocation?: InputMaybe<Scalars['String']['input']>;
  result?: InputMaybe<BidNotificationResultCreateNestedManyWithoutBidNotificationInput>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  submitFee?: InputMaybe<Scalars['String']['input']>;
  totalContractor?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  validityPeriod?: InputMaybe<Scalars['Int']['input']>;
  validityPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationCreateWithoutBidPetitionContractorsInput = {
  bidNotificationChapters?: InputMaybe<BidNotificationChapterCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationClarifies?: InputMaybe<BidNotificationClarifyCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  bidNotificationResultGoodsPrices?: InputMaybe<BidNotificationResultGoodsPriceCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationStatus?: InputMaybe<CatBidNotificationStatusCreateNestedOneWithoutBidNotificationsInput>;
  bidPackage?: InputMaybe<BidPackageCreateNestedOneWithoutBidNotificationsInput>;
  bidPackageCode?: InputMaybe<Scalars['String']['input']>;
  bidPackageName?: InputMaybe<Scalars['String']['input']>;
  bidPreConferences?: InputMaybe<BidPreConferenceCreateNestedManyWithoutBidNotificationInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanCreateNestedOneWithoutBidNotificationsInput>;
  briefFileId?: InputMaybe<Scalars['String']['input']>;
  briefFileIdEn?: InputMaybe<Scalars['String']['input']>;
  briefFileName?: InputMaybe<Scalars['String']['input']>;
  briefFileNameEn?: InputMaybe<Scalars['String']['input']>;
  cancelByCode?: InputMaybe<Scalars['String']['input']>;
  cancelDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionAgency?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionFileId?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionFileName?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionNo?: InputMaybe<Scalars['DateTime']['input']>;
  cancelReason?: InputMaybe<Scalars['String']['input']>;
  cancelType?: InputMaybe<Scalars['String']['input']>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutBidNotificationInput>;
  closeDate?: InputMaybe<Scalars['DateTime']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  constructionType?: InputMaybe<CatConstructionTypeCreateNestedOneWithoutBidNotificationsInput>;
  constructionTypeCode?: InputMaybe<Scalars['String']['input']>;
  contractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutBidNotificationInput>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionAgencyEn?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileIdEn?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionFileNameEn?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  decisionNoEn?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  fileId?: InputMaybe<Scalars['String']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  guaranteeForm?: InputMaybe<Scalars['String']['input']>;
  guaranteeValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investField?: InputMaybe<CatBidFieldCreateNestedOneWithoutInvestBidNotificationsInput>;
  investFieldCode?: InputMaybe<Scalars['String']['input']>;
  investor?: InputMaybe<OrganizationCreateNestedOneWithoutInvestorBidNotificationsInput>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isInviteInterest?: InputMaybe<Scalars['Boolean']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isPreNotification?: InputMaybe<Scalars['Boolean']['input']>;
  issueLocation?: InputMaybe<Scalars['String']['input']>;
  openDate?: InputMaybe<Scalars['DateTime']['input']>;
  openLocation?: InputMaybe<Scalars['String']['input']>;
  otherFileId?: InputMaybe<Scalars['String']['input']>;
  otherFileIdEn?: InputMaybe<Scalars['String']['input']>;
  otherFileName?: InputMaybe<Scalars['String']['input']>;
  otherFileNameEn?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planName?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutBidNotificationsInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntity?: InputMaybe<OrganizationCreateNestedOneWithoutProcuringEntitiesInput>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  receiveLocation?: InputMaybe<Scalars['String']['input']>;
  result?: InputMaybe<BidNotificationResultCreateNestedManyWithoutBidNotificationInput>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  submitFee?: InputMaybe<Scalars['String']['input']>;
  totalContractor?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  validityPeriod?: InputMaybe<Scalars['Int']['input']>;
  validityPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationCreateWithoutBidSelectionPlanInput = {
  bidNotificationChapters?: InputMaybe<BidNotificationChapterCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationClarifies?: InputMaybe<BidNotificationClarifyCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  bidNotificationResultGoodsPrices?: InputMaybe<BidNotificationResultGoodsPriceCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationStatus?: InputMaybe<CatBidNotificationStatusCreateNestedOneWithoutBidNotificationsInput>;
  bidPackage?: InputMaybe<BidPackageCreateNestedOneWithoutBidNotificationsInput>;
  bidPackageCode?: InputMaybe<Scalars['String']['input']>;
  bidPackageName?: InputMaybe<Scalars['String']['input']>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutBidNotificationInput>;
  bidPreConferences?: InputMaybe<BidPreConferenceCreateNestedManyWithoutBidNotificationInput>;
  briefFileId?: InputMaybe<Scalars['String']['input']>;
  briefFileIdEn?: InputMaybe<Scalars['String']['input']>;
  briefFileName?: InputMaybe<Scalars['String']['input']>;
  briefFileNameEn?: InputMaybe<Scalars['String']['input']>;
  cancelByCode?: InputMaybe<Scalars['String']['input']>;
  cancelDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionAgency?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionFileId?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionFileName?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionNo?: InputMaybe<Scalars['DateTime']['input']>;
  cancelReason?: InputMaybe<Scalars['String']['input']>;
  cancelType?: InputMaybe<Scalars['String']['input']>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutBidNotificationInput>;
  closeDate?: InputMaybe<Scalars['DateTime']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  constructionType?: InputMaybe<CatConstructionTypeCreateNestedOneWithoutBidNotificationsInput>;
  constructionTypeCode?: InputMaybe<Scalars['String']['input']>;
  contractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutBidNotificationInput>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionAgencyEn?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileIdEn?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionFileNameEn?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  decisionNoEn?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  fileId?: InputMaybe<Scalars['String']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  guaranteeForm?: InputMaybe<Scalars['String']['input']>;
  guaranteeValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investField?: InputMaybe<CatBidFieldCreateNestedOneWithoutInvestBidNotificationsInput>;
  investFieldCode?: InputMaybe<Scalars['String']['input']>;
  investor?: InputMaybe<OrganizationCreateNestedOneWithoutInvestorBidNotificationsInput>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isInviteInterest?: InputMaybe<Scalars['Boolean']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isPreNotification?: InputMaybe<Scalars['Boolean']['input']>;
  issueLocation?: InputMaybe<Scalars['String']['input']>;
  openDate?: InputMaybe<Scalars['DateTime']['input']>;
  openLocation?: InputMaybe<Scalars['String']['input']>;
  otherFileId?: InputMaybe<Scalars['String']['input']>;
  otherFileIdEn?: InputMaybe<Scalars['String']['input']>;
  otherFileName?: InputMaybe<Scalars['String']['input']>;
  otherFileNameEn?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planName?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutBidNotificationsInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntity?: InputMaybe<OrganizationCreateNestedOneWithoutProcuringEntitiesInput>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  receiveLocation?: InputMaybe<Scalars['String']['input']>;
  result?: InputMaybe<BidNotificationResultCreateNestedManyWithoutBidNotificationInput>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  submitFee?: InputMaybe<Scalars['String']['input']>;
  totalContractor?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  validityPeriod?: InputMaybe<Scalars['Int']['input']>;
  validityPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationCreateWithoutChapterFilesInput = {
  bidNotificationChapters?: InputMaybe<BidNotificationChapterCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationClarifies?: InputMaybe<BidNotificationClarifyCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  bidNotificationResultGoodsPrices?: InputMaybe<BidNotificationResultGoodsPriceCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationStatus?: InputMaybe<CatBidNotificationStatusCreateNestedOneWithoutBidNotificationsInput>;
  bidPackage?: InputMaybe<BidPackageCreateNestedOneWithoutBidNotificationsInput>;
  bidPackageCode?: InputMaybe<Scalars['String']['input']>;
  bidPackageName?: InputMaybe<Scalars['String']['input']>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutBidNotificationInput>;
  bidPreConferences?: InputMaybe<BidPreConferenceCreateNestedManyWithoutBidNotificationInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanCreateNestedOneWithoutBidNotificationsInput>;
  briefFileId?: InputMaybe<Scalars['String']['input']>;
  briefFileIdEn?: InputMaybe<Scalars['String']['input']>;
  briefFileName?: InputMaybe<Scalars['String']['input']>;
  briefFileNameEn?: InputMaybe<Scalars['String']['input']>;
  cancelByCode?: InputMaybe<Scalars['String']['input']>;
  cancelDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionAgency?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionFileId?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionFileName?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionNo?: InputMaybe<Scalars['DateTime']['input']>;
  cancelReason?: InputMaybe<Scalars['String']['input']>;
  cancelType?: InputMaybe<Scalars['String']['input']>;
  closeDate?: InputMaybe<Scalars['DateTime']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  constructionType?: InputMaybe<CatConstructionTypeCreateNestedOneWithoutBidNotificationsInput>;
  constructionTypeCode?: InputMaybe<Scalars['String']['input']>;
  contractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutBidNotificationInput>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionAgencyEn?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileIdEn?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionFileNameEn?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  decisionNoEn?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  fileId?: InputMaybe<Scalars['String']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  guaranteeForm?: InputMaybe<Scalars['String']['input']>;
  guaranteeValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investField?: InputMaybe<CatBidFieldCreateNestedOneWithoutInvestBidNotificationsInput>;
  investFieldCode?: InputMaybe<Scalars['String']['input']>;
  investor?: InputMaybe<OrganizationCreateNestedOneWithoutInvestorBidNotificationsInput>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isInviteInterest?: InputMaybe<Scalars['Boolean']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isPreNotification?: InputMaybe<Scalars['Boolean']['input']>;
  issueLocation?: InputMaybe<Scalars['String']['input']>;
  openDate?: InputMaybe<Scalars['DateTime']['input']>;
  openLocation?: InputMaybe<Scalars['String']['input']>;
  otherFileId?: InputMaybe<Scalars['String']['input']>;
  otherFileIdEn?: InputMaybe<Scalars['String']['input']>;
  otherFileName?: InputMaybe<Scalars['String']['input']>;
  otherFileNameEn?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planName?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutBidNotificationsInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntity?: InputMaybe<OrganizationCreateNestedOneWithoutProcuringEntitiesInput>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  receiveLocation?: InputMaybe<Scalars['String']['input']>;
  result?: InputMaybe<BidNotificationResultCreateNestedManyWithoutBidNotificationInput>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  submitFee?: InputMaybe<Scalars['String']['input']>;
  totalContractor?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  validityPeriod?: InputMaybe<Scalars['Int']['input']>;
  validityPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationCreateWithoutConstructionTypeInput = {
  bidNotificationChapters?: InputMaybe<BidNotificationChapterCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationClarifies?: InputMaybe<BidNotificationClarifyCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  bidNotificationResultGoodsPrices?: InputMaybe<BidNotificationResultGoodsPriceCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationStatus?: InputMaybe<CatBidNotificationStatusCreateNestedOneWithoutBidNotificationsInput>;
  bidPackage?: InputMaybe<BidPackageCreateNestedOneWithoutBidNotificationsInput>;
  bidPackageCode?: InputMaybe<Scalars['String']['input']>;
  bidPackageName?: InputMaybe<Scalars['String']['input']>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutBidNotificationInput>;
  bidPreConferences?: InputMaybe<BidPreConferenceCreateNestedManyWithoutBidNotificationInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanCreateNestedOneWithoutBidNotificationsInput>;
  briefFileId?: InputMaybe<Scalars['String']['input']>;
  briefFileIdEn?: InputMaybe<Scalars['String']['input']>;
  briefFileName?: InputMaybe<Scalars['String']['input']>;
  briefFileNameEn?: InputMaybe<Scalars['String']['input']>;
  cancelByCode?: InputMaybe<Scalars['String']['input']>;
  cancelDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionAgency?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionFileId?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionFileName?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionNo?: InputMaybe<Scalars['DateTime']['input']>;
  cancelReason?: InputMaybe<Scalars['String']['input']>;
  cancelType?: InputMaybe<Scalars['String']['input']>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutBidNotificationInput>;
  closeDate?: InputMaybe<Scalars['DateTime']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  constructionTypeCode?: InputMaybe<Scalars['String']['input']>;
  contractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutBidNotificationInput>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionAgencyEn?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileIdEn?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionFileNameEn?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  decisionNoEn?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  fileId?: InputMaybe<Scalars['String']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  guaranteeForm?: InputMaybe<Scalars['String']['input']>;
  guaranteeValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investField?: InputMaybe<CatBidFieldCreateNestedOneWithoutInvestBidNotificationsInput>;
  investFieldCode?: InputMaybe<Scalars['String']['input']>;
  investor?: InputMaybe<OrganizationCreateNestedOneWithoutInvestorBidNotificationsInput>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isInviteInterest?: InputMaybe<Scalars['Boolean']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isPreNotification?: InputMaybe<Scalars['Boolean']['input']>;
  issueLocation?: InputMaybe<Scalars['String']['input']>;
  openDate?: InputMaybe<Scalars['DateTime']['input']>;
  openLocation?: InputMaybe<Scalars['String']['input']>;
  otherFileId?: InputMaybe<Scalars['String']['input']>;
  otherFileIdEn?: InputMaybe<Scalars['String']['input']>;
  otherFileName?: InputMaybe<Scalars['String']['input']>;
  otherFileNameEn?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planName?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutBidNotificationsInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntity?: InputMaybe<OrganizationCreateNestedOneWithoutProcuringEntitiesInput>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  receiveLocation?: InputMaybe<Scalars['String']['input']>;
  result?: InputMaybe<BidNotificationResultCreateNestedManyWithoutBidNotificationInput>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  submitFee?: InputMaybe<Scalars['String']['input']>;
  totalContractor?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  validityPeriod?: InputMaybe<Scalars['Int']['input']>;
  validityPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationCreateWithoutContractorsInput = {
  bidNotificationChapters?: InputMaybe<BidNotificationChapterCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationClarifies?: InputMaybe<BidNotificationClarifyCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  bidNotificationResultGoodsPrices?: InputMaybe<BidNotificationResultGoodsPriceCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationStatus?: InputMaybe<CatBidNotificationStatusCreateNestedOneWithoutBidNotificationsInput>;
  bidPackage?: InputMaybe<BidPackageCreateNestedOneWithoutBidNotificationsInput>;
  bidPackageCode?: InputMaybe<Scalars['String']['input']>;
  bidPackageName?: InputMaybe<Scalars['String']['input']>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutBidNotificationInput>;
  bidPreConferences?: InputMaybe<BidPreConferenceCreateNestedManyWithoutBidNotificationInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanCreateNestedOneWithoutBidNotificationsInput>;
  briefFileId?: InputMaybe<Scalars['String']['input']>;
  briefFileIdEn?: InputMaybe<Scalars['String']['input']>;
  briefFileName?: InputMaybe<Scalars['String']['input']>;
  briefFileNameEn?: InputMaybe<Scalars['String']['input']>;
  cancelByCode?: InputMaybe<Scalars['String']['input']>;
  cancelDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionAgency?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionFileId?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionFileName?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionNo?: InputMaybe<Scalars['DateTime']['input']>;
  cancelReason?: InputMaybe<Scalars['String']['input']>;
  cancelType?: InputMaybe<Scalars['String']['input']>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutBidNotificationInput>;
  closeDate?: InputMaybe<Scalars['DateTime']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  constructionType?: InputMaybe<CatConstructionTypeCreateNestedOneWithoutBidNotificationsInput>;
  constructionTypeCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionAgencyEn?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileIdEn?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionFileNameEn?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  decisionNoEn?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  fileId?: InputMaybe<Scalars['String']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  guaranteeForm?: InputMaybe<Scalars['String']['input']>;
  guaranteeValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investField?: InputMaybe<CatBidFieldCreateNestedOneWithoutInvestBidNotificationsInput>;
  investFieldCode?: InputMaybe<Scalars['String']['input']>;
  investor?: InputMaybe<OrganizationCreateNestedOneWithoutInvestorBidNotificationsInput>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isInviteInterest?: InputMaybe<Scalars['Boolean']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isPreNotification?: InputMaybe<Scalars['Boolean']['input']>;
  issueLocation?: InputMaybe<Scalars['String']['input']>;
  openDate?: InputMaybe<Scalars['DateTime']['input']>;
  openLocation?: InputMaybe<Scalars['String']['input']>;
  otherFileId?: InputMaybe<Scalars['String']['input']>;
  otherFileIdEn?: InputMaybe<Scalars['String']['input']>;
  otherFileName?: InputMaybe<Scalars['String']['input']>;
  otherFileNameEn?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planName?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutBidNotificationsInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntity?: InputMaybe<OrganizationCreateNestedOneWithoutProcuringEntitiesInput>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  receiveLocation?: InputMaybe<Scalars['String']['input']>;
  result?: InputMaybe<BidNotificationResultCreateNestedManyWithoutBidNotificationInput>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  submitFee?: InputMaybe<Scalars['String']['input']>;
  totalContractor?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  validityPeriod?: InputMaybe<Scalars['Int']['input']>;
  validityPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationCreateWithoutInvestFieldInput = {
  bidNotificationChapters?: InputMaybe<BidNotificationChapterCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationClarifies?: InputMaybe<BidNotificationClarifyCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  bidNotificationResultGoodsPrices?: InputMaybe<BidNotificationResultGoodsPriceCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationStatus?: InputMaybe<CatBidNotificationStatusCreateNestedOneWithoutBidNotificationsInput>;
  bidPackage?: InputMaybe<BidPackageCreateNestedOneWithoutBidNotificationsInput>;
  bidPackageCode?: InputMaybe<Scalars['String']['input']>;
  bidPackageName?: InputMaybe<Scalars['String']['input']>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutBidNotificationInput>;
  bidPreConferences?: InputMaybe<BidPreConferenceCreateNestedManyWithoutBidNotificationInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanCreateNestedOneWithoutBidNotificationsInput>;
  briefFileId?: InputMaybe<Scalars['String']['input']>;
  briefFileIdEn?: InputMaybe<Scalars['String']['input']>;
  briefFileName?: InputMaybe<Scalars['String']['input']>;
  briefFileNameEn?: InputMaybe<Scalars['String']['input']>;
  cancelByCode?: InputMaybe<Scalars['String']['input']>;
  cancelDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionAgency?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionFileId?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionFileName?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionNo?: InputMaybe<Scalars['DateTime']['input']>;
  cancelReason?: InputMaybe<Scalars['String']['input']>;
  cancelType?: InputMaybe<Scalars['String']['input']>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutBidNotificationInput>;
  closeDate?: InputMaybe<Scalars['DateTime']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  constructionType?: InputMaybe<CatConstructionTypeCreateNestedOneWithoutBidNotificationsInput>;
  constructionTypeCode?: InputMaybe<Scalars['String']['input']>;
  contractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutBidNotificationInput>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionAgencyEn?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileIdEn?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionFileNameEn?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  decisionNoEn?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  fileId?: InputMaybe<Scalars['String']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  guaranteeForm?: InputMaybe<Scalars['String']['input']>;
  guaranteeValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investFieldCode?: InputMaybe<Scalars['String']['input']>;
  investor?: InputMaybe<OrganizationCreateNestedOneWithoutInvestorBidNotificationsInput>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isInviteInterest?: InputMaybe<Scalars['Boolean']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isPreNotification?: InputMaybe<Scalars['Boolean']['input']>;
  issueLocation?: InputMaybe<Scalars['String']['input']>;
  openDate?: InputMaybe<Scalars['DateTime']['input']>;
  openLocation?: InputMaybe<Scalars['String']['input']>;
  otherFileId?: InputMaybe<Scalars['String']['input']>;
  otherFileIdEn?: InputMaybe<Scalars['String']['input']>;
  otherFileName?: InputMaybe<Scalars['String']['input']>;
  otherFileNameEn?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planName?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutBidNotificationsInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntity?: InputMaybe<OrganizationCreateNestedOneWithoutProcuringEntitiesInput>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  receiveLocation?: InputMaybe<Scalars['String']['input']>;
  result?: InputMaybe<BidNotificationResultCreateNestedManyWithoutBidNotificationInput>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  submitFee?: InputMaybe<Scalars['String']['input']>;
  totalContractor?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  validityPeriod?: InputMaybe<Scalars['Int']['input']>;
  validityPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationCreateWithoutInvestorInput = {
  bidNotificationChapters?: InputMaybe<BidNotificationChapterCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationClarifies?: InputMaybe<BidNotificationClarifyCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  bidNotificationResultGoodsPrices?: InputMaybe<BidNotificationResultGoodsPriceCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationStatus?: InputMaybe<CatBidNotificationStatusCreateNestedOneWithoutBidNotificationsInput>;
  bidPackage?: InputMaybe<BidPackageCreateNestedOneWithoutBidNotificationsInput>;
  bidPackageCode?: InputMaybe<Scalars['String']['input']>;
  bidPackageName?: InputMaybe<Scalars['String']['input']>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutBidNotificationInput>;
  bidPreConferences?: InputMaybe<BidPreConferenceCreateNestedManyWithoutBidNotificationInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanCreateNestedOneWithoutBidNotificationsInput>;
  briefFileId?: InputMaybe<Scalars['String']['input']>;
  briefFileIdEn?: InputMaybe<Scalars['String']['input']>;
  briefFileName?: InputMaybe<Scalars['String']['input']>;
  briefFileNameEn?: InputMaybe<Scalars['String']['input']>;
  cancelByCode?: InputMaybe<Scalars['String']['input']>;
  cancelDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionAgency?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionFileId?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionFileName?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionNo?: InputMaybe<Scalars['DateTime']['input']>;
  cancelReason?: InputMaybe<Scalars['String']['input']>;
  cancelType?: InputMaybe<Scalars['String']['input']>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutBidNotificationInput>;
  closeDate?: InputMaybe<Scalars['DateTime']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  constructionType?: InputMaybe<CatConstructionTypeCreateNestedOneWithoutBidNotificationsInput>;
  constructionTypeCode?: InputMaybe<Scalars['String']['input']>;
  contractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutBidNotificationInput>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionAgencyEn?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileIdEn?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionFileNameEn?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  decisionNoEn?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  fileId?: InputMaybe<Scalars['String']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  guaranteeForm?: InputMaybe<Scalars['String']['input']>;
  guaranteeValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investField?: InputMaybe<CatBidFieldCreateNestedOneWithoutInvestBidNotificationsInput>;
  investFieldCode?: InputMaybe<Scalars['String']['input']>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isInviteInterest?: InputMaybe<Scalars['Boolean']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isPreNotification?: InputMaybe<Scalars['Boolean']['input']>;
  issueLocation?: InputMaybe<Scalars['String']['input']>;
  openDate?: InputMaybe<Scalars['DateTime']['input']>;
  openLocation?: InputMaybe<Scalars['String']['input']>;
  otherFileId?: InputMaybe<Scalars['String']['input']>;
  otherFileIdEn?: InputMaybe<Scalars['String']['input']>;
  otherFileName?: InputMaybe<Scalars['String']['input']>;
  otherFileNameEn?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planName?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutBidNotificationsInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntity?: InputMaybe<OrganizationCreateNestedOneWithoutProcuringEntitiesInput>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  receiveLocation?: InputMaybe<Scalars['String']['input']>;
  result?: InputMaybe<BidNotificationResultCreateNestedManyWithoutBidNotificationInput>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  submitFee?: InputMaybe<Scalars['String']['input']>;
  totalContractor?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  validityPeriod?: InputMaybe<Scalars['Int']['input']>;
  validityPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationCreateWithoutProcessApplyInput = {
  bidNotificationChapters?: InputMaybe<BidNotificationChapterCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationClarifies?: InputMaybe<BidNotificationClarifyCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  bidNotificationResultGoodsPrices?: InputMaybe<BidNotificationResultGoodsPriceCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationStatus?: InputMaybe<CatBidNotificationStatusCreateNestedOneWithoutBidNotificationsInput>;
  bidPackage?: InputMaybe<BidPackageCreateNestedOneWithoutBidNotificationsInput>;
  bidPackageCode?: InputMaybe<Scalars['String']['input']>;
  bidPackageName?: InputMaybe<Scalars['String']['input']>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutBidNotificationInput>;
  bidPreConferences?: InputMaybe<BidPreConferenceCreateNestedManyWithoutBidNotificationInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanCreateNestedOneWithoutBidNotificationsInput>;
  briefFileId?: InputMaybe<Scalars['String']['input']>;
  briefFileIdEn?: InputMaybe<Scalars['String']['input']>;
  briefFileName?: InputMaybe<Scalars['String']['input']>;
  briefFileNameEn?: InputMaybe<Scalars['String']['input']>;
  cancelByCode?: InputMaybe<Scalars['String']['input']>;
  cancelDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionAgency?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionFileId?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionFileName?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionNo?: InputMaybe<Scalars['DateTime']['input']>;
  cancelReason?: InputMaybe<Scalars['String']['input']>;
  cancelType?: InputMaybe<Scalars['String']['input']>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutBidNotificationInput>;
  closeDate?: InputMaybe<Scalars['DateTime']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  constructionType?: InputMaybe<CatConstructionTypeCreateNestedOneWithoutBidNotificationsInput>;
  constructionTypeCode?: InputMaybe<Scalars['String']['input']>;
  contractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutBidNotificationInput>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionAgencyEn?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileIdEn?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionFileNameEn?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  decisionNoEn?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  fileId?: InputMaybe<Scalars['String']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  guaranteeForm?: InputMaybe<Scalars['String']['input']>;
  guaranteeValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investField?: InputMaybe<CatBidFieldCreateNestedOneWithoutInvestBidNotificationsInput>;
  investFieldCode?: InputMaybe<Scalars['String']['input']>;
  investor?: InputMaybe<OrganizationCreateNestedOneWithoutInvestorBidNotificationsInput>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isInviteInterest?: InputMaybe<Scalars['Boolean']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isPreNotification?: InputMaybe<Scalars['Boolean']['input']>;
  issueLocation?: InputMaybe<Scalars['String']['input']>;
  openDate?: InputMaybe<Scalars['DateTime']['input']>;
  openLocation?: InputMaybe<Scalars['String']['input']>;
  otherFileId?: InputMaybe<Scalars['String']['input']>;
  otherFileIdEn?: InputMaybe<Scalars['String']['input']>;
  otherFileName?: InputMaybe<Scalars['String']['input']>;
  otherFileNameEn?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planName?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntity?: InputMaybe<OrganizationCreateNestedOneWithoutProcuringEntitiesInput>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  receiveLocation?: InputMaybe<Scalars['String']['input']>;
  result?: InputMaybe<BidNotificationResultCreateNestedManyWithoutBidNotificationInput>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  submitFee?: InputMaybe<Scalars['String']['input']>;
  totalContractor?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  validityPeriod?: InputMaybe<Scalars['Int']['input']>;
  validityPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationCreateWithoutProcuringEntityInput = {
  bidNotificationChapters?: InputMaybe<BidNotificationChapterCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationClarifies?: InputMaybe<BidNotificationClarifyCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  bidNotificationResultGoodsPrices?: InputMaybe<BidNotificationResultGoodsPriceCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationStatus?: InputMaybe<CatBidNotificationStatusCreateNestedOneWithoutBidNotificationsInput>;
  bidPackage?: InputMaybe<BidPackageCreateNestedOneWithoutBidNotificationsInput>;
  bidPackageCode?: InputMaybe<Scalars['String']['input']>;
  bidPackageName?: InputMaybe<Scalars['String']['input']>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutBidNotificationInput>;
  bidPreConferences?: InputMaybe<BidPreConferenceCreateNestedManyWithoutBidNotificationInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanCreateNestedOneWithoutBidNotificationsInput>;
  briefFileId?: InputMaybe<Scalars['String']['input']>;
  briefFileIdEn?: InputMaybe<Scalars['String']['input']>;
  briefFileName?: InputMaybe<Scalars['String']['input']>;
  briefFileNameEn?: InputMaybe<Scalars['String']['input']>;
  cancelByCode?: InputMaybe<Scalars['String']['input']>;
  cancelDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionAgency?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionFileId?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionFileName?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionNo?: InputMaybe<Scalars['DateTime']['input']>;
  cancelReason?: InputMaybe<Scalars['String']['input']>;
  cancelType?: InputMaybe<Scalars['String']['input']>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutBidNotificationInput>;
  closeDate?: InputMaybe<Scalars['DateTime']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  constructionType?: InputMaybe<CatConstructionTypeCreateNestedOneWithoutBidNotificationsInput>;
  constructionTypeCode?: InputMaybe<Scalars['String']['input']>;
  contractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutBidNotificationInput>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionAgencyEn?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileIdEn?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionFileNameEn?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  decisionNoEn?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  fileId?: InputMaybe<Scalars['String']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  guaranteeForm?: InputMaybe<Scalars['String']['input']>;
  guaranteeValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investField?: InputMaybe<CatBidFieldCreateNestedOneWithoutInvestBidNotificationsInput>;
  investFieldCode?: InputMaybe<Scalars['String']['input']>;
  investor?: InputMaybe<OrganizationCreateNestedOneWithoutInvestorBidNotificationsInput>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isInviteInterest?: InputMaybe<Scalars['Boolean']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isPreNotification?: InputMaybe<Scalars['Boolean']['input']>;
  issueLocation?: InputMaybe<Scalars['String']['input']>;
  openDate?: InputMaybe<Scalars['DateTime']['input']>;
  openLocation?: InputMaybe<Scalars['String']['input']>;
  otherFileId?: InputMaybe<Scalars['String']['input']>;
  otherFileIdEn?: InputMaybe<Scalars['String']['input']>;
  otherFileName?: InputMaybe<Scalars['String']['input']>;
  otherFileNameEn?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planName?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutBidNotificationsInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  receiveLocation?: InputMaybe<Scalars['String']['input']>;
  result?: InputMaybe<BidNotificationResultCreateNestedManyWithoutBidNotificationInput>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  submitFee?: InputMaybe<Scalars['String']['input']>;
  totalContractor?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  validityPeriod?: InputMaybe<Scalars['Int']['input']>;
  validityPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationCreateWithoutResultInput = {
  bidNotificationChapters?: InputMaybe<BidNotificationChapterCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationClarifies?: InputMaybe<BidNotificationClarifyCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  bidNotificationResultGoodsPrices?: InputMaybe<BidNotificationResultGoodsPriceCreateNestedManyWithoutBidNotificationInput>;
  bidNotificationStatus?: InputMaybe<CatBidNotificationStatusCreateNestedOneWithoutBidNotificationsInput>;
  bidPackage?: InputMaybe<BidPackageCreateNestedOneWithoutBidNotificationsInput>;
  bidPackageCode?: InputMaybe<Scalars['String']['input']>;
  bidPackageName?: InputMaybe<Scalars['String']['input']>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutBidNotificationInput>;
  bidPreConferences?: InputMaybe<BidPreConferenceCreateNestedManyWithoutBidNotificationInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanCreateNestedOneWithoutBidNotificationsInput>;
  briefFileId?: InputMaybe<Scalars['String']['input']>;
  briefFileIdEn?: InputMaybe<Scalars['String']['input']>;
  briefFileName?: InputMaybe<Scalars['String']['input']>;
  briefFileNameEn?: InputMaybe<Scalars['String']['input']>;
  cancelByCode?: InputMaybe<Scalars['String']['input']>;
  cancelDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionAgency?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  cancelDecisionFileId?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionFileName?: InputMaybe<Scalars['String']['input']>;
  cancelDecisionNo?: InputMaybe<Scalars['DateTime']['input']>;
  cancelReason?: InputMaybe<Scalars['String']['input']>;
  cancelType?: InputMaybe<Scalars['String']['input']>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutBidNotificationInput>;
  closeDate?: InputMaybe<Scalars['DateTime']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  constructionType?: InputMaybe<CatConstructionTypeCreateNestedOneWithoutBidNotificationsInput>;
  constructionTypeCode?: InputMaybe<Scalars['String']['input']>;
  contractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutBidNotificationInput>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionAgencyEn?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileIdEn?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionFileNameEn?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  decisionNoEn?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  fileId?: InputMaybe<Scalars['String']['input']>;
  fileName?: InputMaybe<Scalars['String']['input']>;
  guaranteeForm?: InputMaybe<Scalars['String']['input']>;
  guaranteeValue?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investField?: InputMaybe<CatBidFieldCreateNestedOneWithoutInvestBidNotificationsInput>;
  investFieldCode?: InputMaybe<Scalars['String']['input']>;
  investor?: InputMaybe<OrganizationCreateNestedOneWithoutInvestorBidNotificationsInput>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isInviteInterest?: InputMaybe<Scalars['Boolean']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isPreNotification?: InputMaybe<Scalars['Boolean']['input']>;
  issueLocation?: InputMaybe<Scalars['String']['input']>;
  openDate?: InputMaybe<Scalars['DateTime']['input']>;
  openLocation?: InputMaybe<Scalars['String']['input']>;
  otherFileId?: InputMaybe<Scalars['String']['input']>;
  otherFileIdEn?: InputMaybe<Scalars['String']['input']>;
  otherFileName?: InputMaybe<Scalars['String']['input']>;
  otherFileNameEn?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planName?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutBidNotificationsInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntity?: InputMaybe<OrganizationCreateNestedOneWithoutProcuringEntitiesInput>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  receiveLocation?: InputMaybe<Scalars['String']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  submitFee?: InputMaybe<Scalars['String']['input']>;
  totalContractor?: InputMaybe<Scalars['Int']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  validityPeriod?: InputMaybe<Scalars['Int']['input']>;
  validityPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationListRelationFilter = {
  every?: InputMaybe<BidNotificationWhereInput>;
  none?: InputMaybe<BidNotificationWhereInput>;
  some?: InputMaybe<BidNotificationWhereInput>;
};

export type BidNotificationOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type BidNotificationOrderByWithRelationInput = {
  bidNotificationChapters?: InputMaybe<BidNotificationChapterOrderByRelationAggregateInput>;
  bidNotificationClarifies?: InputMaybe<BidNotificationClarifyOrderByRelationAggregateInput>;
  bidNotificationCode?: InputMaybe<SortOrderInput>;
  bidNotificationId?: InputMaybe<SortOrderInput>;
  bidNotificationResultGoodsPrices?: InputMaybe<BidNotificationResultGoodsPriceOrderByRelationAggregateInput>;
  bidNotificationStatus?: InputMaybe<CatBidNotificationStatusOrderByWithRelationInput>;
  bidPackage?: InputMaybe<BidPackageOrderByWithRelationInput>;
  bidPackageCode?: InputMaybe<SortOrderInput>;
  bidPackageId?: InputMaybe<SortOrderInput>;
  bidPackageName?: InputMaybe<SortOrderInput>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorOrderByRelationAggregateInput>;
  bidPreConferences?: InputMaybe<BidPreConferenceOrderByRelationAggregateInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanOrderByWithRelationInput>;
  briefFileId?: InputMaybe<SortOrderInput>;
  briefFileIdEn?: InputMaybe<SortOrderInput>;
  briefFileName?: InputMaybe<SortOrderInput>;
  briefFileNameEn?: InputMaybe<SortOrderInput>;
  cancelByCode?: InputMaybe<SortOrderInput>;
  cancelDate?: InputMaybe<SortOrderInput>;
  cancelDecisionAgency?: InputMaybe<SortOrderInput>;
  cancelDecisionDate?: InputMaybe<SortOrderInput>;
  cancelDecisionFileId?: InputMaybe<SortOrderInput>;
  cancelDecisionFileName?: InputMaybe<SortOrderInput>;
  cancelDecisionNo?: InputMaybe<SortOrderInput>;
  cancelReason?: InputMaybe<SortOrderInput>;
  cancelType?: InputMaybe<SortOrderInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileOrderByRelationAggregateInput>;
  closeDate?: InputMaybe<SortOrderInput>;
  code?: InputMaybe<SortOrderInput>;
  constructionType?: InputMaybe<CatConstructionTypeOrderByWithRelationInput>;
  constructionTypeCode?: InputMaybe<SortOrderInput>;
  constructionTypeId?: InputMaybe<SortOrderInput>;
  contractors?: InputMaybe<BidNotificationContractorOrderByRelationAggregateInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  createdBy?: InputMaybe<SortOrderInput>;
  decisionAgency?: InputMaybe<SortOrderInput>;
  decisionAgencyEn?: InputMaybe<SortOrderInput>;
  decisionDate?: InputMaybe<SortOrderInput>;
  decisionFileId?: InputMaybe<SortOrderInput>;
  decisionFileIdEn?: InputMaybe<SortOrderInput>;
  decisionFileName?: InputMaybe<SortOrderInput>;
  decisionFileNameEn?: InputMaybe<SortOrderInput>;
  decisionNo?: InputMaybe<SortOrderInput>;
  decisionNoEn?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  fileId?: InputMaybe<SortOrderInput>;
  fileName?: InputMaybe<SortOrderInput>;
  guaranteeForm?: InputMaybe<SortOrderInput>;
  guaranteeValue?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  investField?: InputMaybe<CatBidFieldOrderByWithRelationInput>;
  investFieldCode?: InputMaybe<SortOrderInput>;
  investFieldId?: InputMaybe<SortOrderInput>;
  investor?: InputMaybe<OrganizationOrderByWithRelationInput>;
  investorCode?: InputMaybe<SortOrderInput>;
  investorId?: InputMaybe<SortOrderInput>;
  investorName?: InputMaybe<SortOrderInput>;
  isInviteInterest?: InputMaybe<SortOrder>;
  isLatest?: InputMaybe<SortOrder>;
  isPreNotification?: InputMaybe<SortOrder>;
  issueLocation?: InputMaybe<SortOrderInput>;
  openDate?: InputMaybe<SortOrderInput>;
  openLocation?: InputMaybe<SortOrderInput>;
  otherFileId?: InputMaybe<SortOrderInput>;
  otherFileIdEn?: InputMaybe<SortOrderInput>;
  otherFileName?: InputMaybe<SortOrderInput>;
  otherFileNameEn?: InputMaybe<SortOrderInput>;
  planCode?: InputMaybe<SortOrderInput>;
  planId?: InputMaybe<SortOrderInput>;
  planName?: InputMaybe<SortOrderInput>;
  planVersion?: InputMaybe<SortOrderInput>;
  processApply?: InputMaybe<CatProcessApplyOrderByWithRelationInput>;
  processApplyCode?: InputMaybe<SortOrderInput>;
  processApplyId?: InputMaybe<SortOrderInput>;
  procuringEntity?: InputMaybe<OrganizationOrderByWithRelationInput>;
  procuringEntityCode?: InputMaybe<SortOrderInput>;
  procuringEntityId?: InputMaybe<SortOrderInput>;
  procuringEntityName?: InputMaybe<SortOrderInput>;
  publishedAt?: InputMaybe<SortOrderInput>;
  receiveLocation?: InputMaybe<SortOrderInput>;
  result?: InputMaybe<BidNotificationResultOrderByRelationAggregateInput>;
  statusCode?: InputMaybe<SortOrderInput>;
  statusId?: InputMaybe<SortOrderInput>;
  submitFee?: InputMaybe<SortOrderInput>;
  totalContractor?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  updatedBy?: InputMaybe<SortOrderInput>;
  validityPeriod?: InputMaybe<SortOrderInput>;
  validityPeriodUnit?: InputMaybe<SortOrderInput>;
  version?: InputMaybe<SortOrderInput>;
};

export type BidNotificationResult = {
  __typename?: 'BidNotificationResult';
  _count: BidNotificationResultCount;
  bidLotResults?: Maybe<Array<BidLotResult>>;
  bidNotification?: Maybe<BidNotification>;
  bidNotificationCode?: Maybe<Scalars['String']['output']>;
  bidNotificationContractors?: Maybe<Array<BidNotificationContractor>>;
  bidNotificationId?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  decisionAgency?: Maybe<Scalars['String']['output']>;
  decisionDate?: Maybe<Scalars['DateTime']['output']>;
  decisionFileId?: Maybe<Scalars['String']['output']>;
  decisionFileName?: Maybe<Scalars['String']['output']>;
  decisionNo?: Maybe<Scalars['String']['output']>;
  deletedAt?: Maybe<Scalars['DateTime']['output']>;
  id: Scalars['String']['output'];
  isInviteInterest: Scalars['Boolean']['output'];
  isLatest: Scalars['Boolean']['output'];
  isPreNotification: Scalars['Boolean']['output'];
  publishedAt?: Maybe<Scalars['DateTime']['output']>;
  statusCode?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  updatedBy?: Maybe<Scalars['String']['output']>;
  version?: Maybe<Scalars['String']['output']>;
};

export type BidNotificationResultConnection = {
  __typename?: 'BidNotificationResultConnection';
  nodes?: Maybe<Array<BidNotificationResult>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type BidNotificationResultCount = {
  __typename?: 'BidNotificationResultCount';
  bidLotResults: Scalars['Int']['output'];
  bidNotificationContractors: Scalars['Int']['output'];
};

export type BidNotificationResultCreateInput = {
  bidLotResults?: InputMaybe<BidLotResultCreateNestedManyWithoutBidNotificationResultInput>;
  bidNotification?: InputMaybe<BidNotificationCreateNestedOneWithoutResultInput>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationContractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutBidNotificationResultInput>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isInviteInterest?: InputMaybe<Scalars['Boolean']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isPreNotification?: InputMaybe<Scalars['Boolean']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationResultCreateManyBidNotificationInput = {
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isInviteInterest?: InputMaybe<Scalars['Boolean']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isPreNotification?: InputMaybe<Scalars['Boolean']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationResultCreateManyBidNotificationInputEnvelope = {
  data: Array<BidNotificationResultCreateManyBidNotificationInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidNotificationResultCreateNestedManyWithoutBidNotificationInput = {
  connect?: InputMaybe<Array<BidNotificationResultWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationResultCreateOrConnectWithoutBidNotificationInput>>;
  create?: InputMaybe<Array<BidNotificationResultCreateWithoutBidNotificationInput>>;
  createMany?: InputMaybe<BidNotificationResultCreateManyBidNotificationInputEnvelope>;
};

export type BidNotificationResultCreateNestedOneWithoutBidLotResultsInput = {
  connect?: InputMaybe<BidNotificationResultWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidNotificationResultCreateOrConnectWithoutBidLotResultsInput>;
  create?: InputMaybe<BidNotificationResultCreateWithoutBidLotResultsInput>;
};

export type BidNotificationResultCreateNestedOneWithoutBidNotificationContractorsInput = {
  connect?: InputMaybe<BidNotificationResultWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidNotificationResultCreateOrConnectWithoutBidNotificationContractorsInput>;
  create?: InputMaybe<BidNotificationResultCreateWithoutBidNotificationContractorsInput>;
};

export type BidNotificationResultCreateOrConnectWithoutBidLotResultsInput = {
  create: BidNotificationResultCreateWithoutBidLotResultsInput;
  where: BidNotificationResultWhereUniqueInput;
};

export type BidNotificationResultCreateOrConnectWithoutBidNotificationContractorsInput = {
  create: BidNotificationResultCreateWithoutBidNotificationContractorsInput;
  where: BidNotificationResultWhereUniqueInput;
};

export type BidNotificationResultCreateOrConnectWithoutBidNotificationInput = {
  create: BidNotificationResultCreateWithoutBidNotificationInput;
  where: BidNotificationResultWhereUniqueInput;
};

export type BidNotificationResultCreateWithoutBidLotResultsInput = {
  bidNotification?: InputMaybe<BidNotificationCreateNestedOneWithoutResultInput>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationContractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutBidNotificationResultInput>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isInviteInterest?: InputMaybe<Scalars['Boolean']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isPreNotification?: InputMaybe<Scalars['Boolean']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationResultCreateWithoutBidNotificationContractorsInput = {
  bidLotResults?: InputMaybe<BidLotResultCreateNestedManyWithoutBidNotificationResultInput>;
  bidNotification?: InputMaybe<BidNotificationCreateNestedOneWithoutResultInput>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isInviteInterest?: InputMaybe<Scalars['Boolean']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isPreNotification?: InputMaybe<Scalars['Boolean']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationResultCreateWithoutBidNotificationInput = {
  bidLotResults?: InputMaybe<BidLotResultCreateNestedManyWithoutBidNotificationResultInput>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationContractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutBidNotificationResultInput>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isInviteInterest?: InputMaybe<Scalars['Boolean']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isPreNotification?: InputMaybe<Scalars['Boolean']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationResultGoodsPrice = {
  __typename?: 'BidNotificationResultGoodsPrice';
  bidNotification?: Maybe<BidNotification>;
  bidNotificationId?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  index?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  origin?: Maybe<Scalars['String']['output']>;
  price?: Maybe<Scalars['Decimal']['output']>;
  quantity?: Maybe<Scalars['Decimal']['output']>;
  total?: Maybe<Scalars['Decimal']['output']>;
  unit?: Maybe<Scalars['String']['output']>;
};

export type BidNotificationResultGoodsPriceCreateManyBidNotificationInput = {
  id?: InputMaybe<Scalars['String']['input']>;
  index?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  origin?: InputMaybe<Scalars['String']['input']>;
  price?: InputMaybe<Scalars['Decimal']['input']>;
  quantity?: InputMaybe<Scalars['Decimal']['input']>;
  total?: InputMaybe<Scalars['Decimal']['input']>;
  unit?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationResultGoodsPriceCreateManyBidNotificationInputEnvelope = {
  data: Array<BidNotificationResultGoodsPriceCreateManyBidNotificationInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidNotificationResultGoodsPriceCreateNestedManyWithoutBidNotificationInput = {
  connect?: InputMaybe<Array<BidNotificationResultGoodsPriceWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationResultGoodsPriceCreateOrConnectWithoutBidNotificationInput>>;
  create?: InputMaybe<Array<BidNotificationResultGoodsPriceCreateWithoutBidNotificationInput>>;
  createMany?: InputMaybe<BidNotificationResultGoodsPriceCreateManyBidNotificationInputEnvelope>;
};

export type BidNotificationResultGoodsPriceCreateOrConnectWithoutBidNotificationInput = {
  create: BidNotificationResultGoodsPriceCreateWithoutBidNotificationInput;
  where: BidNotificationResultGoodsPriceWhereUniqueInput;
};

export type BidNotificationResultGoodsPriceCreateWithoutBidNotificationInput = {
  id?: InputMaybe<Scalars['String']['input']>;
  index?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  origin?: InputMaybe<Scalars['String']['input']>;
  price?: InputMaybe<Scalars['Decimal']['input']>;
  quantity?: InputMaybe<Scalars['Decimal']['input']>;
  total?: InputMaybe<Scalars['Decimal']['input']>;
  unit?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationResultGoodsPriceListRelationFilter = {
  every?: InputMaybe<BidNotificationResultGoodsPriceWhereInput>;
  none?: InputMaybe<BidNotificationResultGoodsPriceWhereInput>;
  some?: InputMaybe<BidNotificationResultGoodsPriceWhereInput>;
};

export type BidNotificationResultGoodsPriceOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type BidNotificationResultGoodsPriceScalarWhereInput = {
  AND?: InputMaybe<Array<BidNotificationResultGoodsPriceScalarWhereInput>>;
  NOT?: InputMaybe<Array<BidNotificationResultGoodsPriceScalarWhereInput>>;
  OR?: InputMaybe<Array<BidNotificationResultGoodsPriceScalarWhereInput>>;
  bidNotificationId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  index?: InputMaybe<IntNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  origin?: InputMaybe<StringNullableFilter>;
  price?: InputMaybe<DecimalNullableFilter>;
  quantity?: InputMaybe<DecimalNullableFilter>;
  total?: InputMaybe<DecimalNullableFilter>;
  unit?: InputMaybe<StringNullableFilter>;
};

export type BidNotificationResultGoodsPriceUpdateManyMutationInput = {
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  index?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  origin?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationResultGoodsPriceUpdateManyWithWhereWithoutBidNotificationInput = {
  data: BidNotificationResultGoodsPriceUpdateManyMutationInput;
  where: BidNotificationResultGoodsPriceScalarWhereInput;
};

export type BidNotificationResultGoodsPriceUpdateManyWithoutBidNotificationNestedInput = {
  connect?: InputMaybe<Array<BidNotificationResultGoodsPriceWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationResultGoodsPriceCreateOrConnectWithoutBidNotificationInput>>;
  create?: InputMaybe<Array<BidNotificationResultGoodsPriceCreateWithoutBidNotificationInput>>;
  createMany?: InputMaybe<BidNotificationResultGoodsPriceCreateManyBidNotificationInputEnvelope>;
  delete?: InputMaybe<Array<BidNotificationResultGoodsPriceWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidNotificationResultGoodsPriceScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidNotificationResultGoodsPriceWhereUniqueInput>>;
  set?: InputMaybe<Array<BidNotificationResultGoodsPriceWhereUniqueInput>>;
  update?: InputMaybe<Array<BidNotificationResultGoodsPriceUpdateWithWhereUniqueWithoutBidNotificationInput>>;
  updateMany?: InputMaybe<Array<BidNotificationResultGoodsPriceUpdateManyWithWhereWithoutBidNotificationInput>>;
  upsert?: InputMaybe<Array<BidNotificationResultGoodsPriceUpsertWithWhereUniqueWithoutBidNotificationInput>>;
};

export type BidNotificationResultGoodsPriceUpdateWithWhereUniqueWithoutBidNotificationInput = {
  data: BidNotificationResultGoodsPriceUpdateWithoutBidNotificationInput;
  where: BidNotificationResultGoodsPriceWhereUniqueInput;
};

export type BidNotificationResultGoodsPriceUpdateWithoutBidNotificationInput = {
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  index?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  origin?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationResultGoodsPriceUpsertWithWhereUniqueWithoutBidNotificationInput = {
  create: BidNotificationResultGoodsPriceCreateWithoutBidNotificationInput;
  update: BidNotificationResultGoodsPriceUpdateWithoutBidNotificationInput;
  where: BidNotificationResultGoodsPriceWhereUniqueInput;
};

export type BidNotificationResultGoodsPriceWhereInput = {
  AND?: InputMaybe<Array<BidNotificationResultGoodsPriceWhereInput>>;
  NOT?: InputMaybe<Array<BidNotificationResultGoodsPriceWhereInput>>;
  OR?: InputMaybe<Array<BidNotificationResultGoodsPriceWhereInput>>;
  bidNotification?: InputMaybe<BidNotificationWhereInput>;
  bidNotificationId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  index?: InputMaybe<IntNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  origin?: InputMaybe<StringNullableFilter>;
  price?: InputMaybe<DecimalNullableFilter>;
  quantity?: InputMaybe<DecimalNullableFilter>;
  total?: InputMaybe<DecimalNullableFilter>;
  unit?: InputMaybe<StringNullableFilter>;
};

export type BidNotificationResultGoodsPriceWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']['input']>;
};

export type BidNotificationResultListRelationFilter = {
  every?: InputMaybe<BidNotificationResultWhereInput>;
  none?: InputMaybe<BidNotificationResultWhereInput>;
  some?: InputMaybe<BidNotificationResultWhereInput>;
};

export type BidNotificationResultOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type BidNotificationResultOrderByWithRelationInput = {
  bidLotResults?: InputMaybe<BidLotResultOrderByRelationAggregateInput>;
  bidNotification?: InputMaybe<BidNotificationOrderByWithRelationInput>;
  bidNotificationCode?: InputMaybe<SortOrderInput>;
  bidNotificationContractors?: InputMaybe<BidNotificationContractorOrderByRelationAggregateInput>;
  bidNotificationId?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  createdBy?: InputMaybe<SortOrderInput>;
  decisionAgency?: InputMaybe<SortOrderInput>;
  decisionDate?: InputMaybe<SortOrderInput>;
  decisionFileId?: InputMaybe<SortOrderInput>;
  decisionFileName?: InputMaybe<SortOrderInput>;
  decisionNo?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  isInviteInterest?: InputMaybe<SortOrder>;
  isLatest?: InputMaybe<SortOrder>;
  isPreNotification?: InputMaybe<SortOrder>;
  publishedAt?: InputMaybe<SortOrderInput>;
  statusCode?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  updatedBy?: InputMaybe<SortOrderInput>;
  version?: InputMaybe<SortOrderInput>;
};

export enum BidNotificationResultScalarFieldEnum {
  BidNotificationCode = 'bidNotificationCode',
  BidNotificationId = 'bidNotificationId',
  CreatedAt = 'createdAt',
  CreatedBy = 'createdBy',
  DecisionAgency = 'decisionAgency',
  DecisionDate = 'decisionDate',
  DecisionFileId = 'decisionFileId',
  DecisionFileName = 'decisionFileName',
  DecisionNo = 'decisionNo',
  DeletedAt = 'deletedAt',
  Id = 'id',
  IsInviteInterest = 'isInviteInterest',
  IsLatest = 'isLatest',
  IsPreNotification = 'isPreNotification',
  PublishedAt = 'publishedAt',
  StatusCode = 'statusCode',
  UpdatedAt = 'updatedAt',
  UpdatedBy = 'updatedBy',
  Version = 'version'
}

export type BidNotificationResultScalarWhereInput = {
  AND?: InputMaybe<Array<BidNotificationResultScalarWhereInput>>;
  NOT?: InputMaybe<Array<BidNotificationResultScalarWhereInput>>;
  OR?: InputMaybe<Array<BidNotificationResultScalarWhereInput>>;
  bidNotificationCode?: InputMaybe<StringNullableFilter>;
  bidNotificationId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  decisionAgency?: InputMaybe<StringNullableFilter>;
  decisionDate?: InputMaybe<DateTimeNullableFilter>;
  decisionFileId?: InputMaybe<StringNullableFilter>;
  decisionFileName?: InputMaybe<StringNullableFilter>;
  decisionNo?: InputMaybe<StringNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isInviteInterest?: InputMaybe<BoolFilter>;
  isLatest?: InputMaybe<BoolFilter>;
  isPreNotification?: InputMaybe<BoolFilter>;
  publishedAt?: InputMaybe<DateTimeNullableFilter>;
  statusCode?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  version?: InputMaybe<StringNullableFilter>;
};

export type BidNotificationResultUpdateInput = {
  bidLotResults?: InputMaybe<BidLotResultUpdateManyWithoutBidNotificationResultNestedInput>;
  bidNotification?: InputMaybe<BidNotificationUpdateOneWithoutResultNestedInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationContractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutBidNotificationResultNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isInviteInterest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPreNotification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationResultUpdateManyMutationInput = {
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isInviteInterest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPreNotification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationResultUpdateManyWithWhereWithoutBidNotificationInput = {
  data: BidNotificationResultUpdateManyMutationInput;
  where: BidNotificationResultScalarWhereInput;
};

export type BidNotificationResultUpdateManyWithoutBidNotificationNestedInput = {
  connect?: InputMaybe<Array<BidNotificationResultWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationResultCreateOrConnectWithoutBidNotificationInput>>;
  create?: InputMaybe<Array<BidNotificationResultCreateWithoutBidNotificationInput>>;
  createMany?: InputMaybe<BidNotificationResultCreateManyBidNotificationInputEnvelope>;
  delete?: InputMaybe<Array<BidNotificationResultWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidNotificationResultScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidNotificationResultWhereUniqueInput>>;
  set?: InputMaybe<Array<BidNotificationResultWhereUniqueInput>>;
  update?: InputMaybe<Array<BidNotificationResultUpdateWithWhereUniqueWithoutBidNotificationInput>>;
  updateMany?: InputMaybe<Array<BidNotificationResultUpdateManyWithWhereWithoutBidNotificationInput>>;
  upsert?: InputMaybe<Array<BidNotificationResultUpsertWithWhereUniqueWithoutBidNotificationInput>>;
};

export type BidNotificationResultUpdateOneWithoutBidLotResultsNestedInput = {
  connect?: InputMaybe<BidNotificationResultWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidNotificationResultCreateOrConnectWithoutBidLotResultsInput>;
  create?: InputMaybe<BidNotificationResultCreateWithoutBidLotResultsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<BidNotificationResultUpdateWithoutBidLotResultsInput>;
  upsert?: InputMaybe<BidNotificationResultUpsertWithoutBidLotResultsInput>;
};

export type BidNotificationResultUpdateOneWithoutBidNotificationContractorsNestedInput = {
  connect?: InputMaybe<BidNotificationResultWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidNotificationResultCreateOrConnectWithoutBidNotificationContractorsInput>;
  create?: InputMaybe<BidNotificationResultCreateWithoutBidNotificationContractorsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<BidNotificationResultUpdateWithoutBidNotificationContractorsInput>;
  upsert?: InputMaybe<BidNotificationResultUpsertWithoutBidNotificationContractorsInput>;
};

export type BidNotificationResultUpdateWithWhereUniqueWithoutBidNotificationInput = {
  data: BidNotificationResultUpdateWithoutBidNotificationInput;
  where: BidNotificationResultWhereUniqueInput;
};

export type BidNotificationResultUpdateWithoutBidLotResultsInput = {
  bidNotification?: InputMaybe<BidNotificationUpdateOneWithoutResultNestedInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationContractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutBidNotificationResultNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isInviteInterest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPreNotification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationResultUpdateWithoutBidNotificationContractorsInput = {
  bidLotResults?: InputMaybe<BidLotResultUpdateManyWithoutBidNotificationResultNestedInput>;
  bidNotification?: InputMaybe<BidNotificationUpdateOneWithoutResultNestedInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isInviteInterest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPreNotification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationResultUpdateWithoutBidNotificationInput = {
  bidLotResults?: InputMaybe<BidLotResultUpdateManyWithoutBidNotificationResultNestedInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationContractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutBidNotificationResultNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isInviteInterest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPreNotification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationResultUpsertWithWhereUniqueWithoutBidNotificationInput = {
  create: BidNotificationResultCreateWithoutBidNotificationInput;
  update: BidNotificationResultUpdateWithoutBidNotificationInput;
  where: BidNotificationResultWhereUniqueInput;
};

export type BidNotificationResultUpsertWithoutBidLotResultsInput = {
  create: BidNotificationResultCreateWithoutBidLotResultsInput;
  update: BidNotificationResultUpdateWithoutBidLotResultsInput;
};

export type BidNotificationResultUpsertWithoutBidNotificationContractorsInput = {
  create: BidNotificationResultCreateWithoutBidNotificationContractorsInput;
  update: BidNotificationResultUpdateWithoutBidNotificationContractorsInput;
};

export type BidNotificationResultWhereInput = {
  AND?: InputMaybe<Array<BidNotificationResultWhereInput>>;
  NOT?: InputMaybe<Array<BidNotificationResultWhereInput>>;
  OR?: InputMaybe<Array<BidNotificationResultWhereInput>>;
  bidLotResults?: InputMaybe<BidLotResultListRelationFilter>;
  bidNotification?: InputMaybe<BidNotificationWhereInput>;
  bidNotificationCode?: InputMaybe<StringNullableFilter>;
  bidNotificationContractors?: InputMaybe<BidNotificationContractorListRelationFilter>;
  bidNotificationId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  decisionAgency?: InputMaybe<StringNullableFilter>;
  decisionDate?: InputMaybe<DateTimeNullableFilter>;
  decisionFileId?: InputMaybe<StringNullableFilter>;
  decisionFileName?: InputMaybe<StringNullableFilter>;
  decisionNo?: InputMaybe<StringNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isInviteInterest?: InputMaybe<BoolFilter>;
  isLatest?: InputMaybe<BoolFilter>;
  isPreNotification?: InputMaybe<BoolFilter>;
  publishedAt?: InputMaybe<DateTimeNullableFilter>;
  statusCode?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  version?: InputMaybe<StringNullableFilter>;
};

export type BidNotificationResultWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']['input']>;
};

export enum BidNotificationScalarFieldEnum {
  BidNotificationCode = 'bidNotificationCode',
  BidNotificationId = 'bidNotificationId',
  BidPackageCode = 'bidPackageCode',
  BidPackageId = 'bidPackageId',
  BidPackageName = 'bidPackageName',
  BriefFileId = 'briefFileId',
  BriefFileIdEn = 'briefFileIdEn',
  BriefFileName = 'briefFileName',
  BriefFileNameEn = 'briefFileNameEn',
  CancelByCode = 'cancelByCode',
  CancelDate = 'cancelDate',
  CancelDecisionAgency = 'cancelDecisionAgency',
  CancelDecisionDate = 'cancelDecisionDate',
  CancelDecisionFileId = 'cancelDecisionFileId',
  CancelDecisionFileName = 'cancelDecisionFileName',
  CancelDecisionNo = 'cancelDecisionNo',
  CancelReason = 'cancelReason',
  CancelType = 'cancelType',
  CloseDate = 'closeDate',
  Code = 'code',
  ConstructionTypeCode = 'constructionTypeCode',
  ConstructionTypeId = 'constructionTypeId',
  CreatedAt = 'createdAt',
  CreatedBy = 'createdBy',
  DecisionAgency = 'decisionAgency',
  DecisionAgencyEn = 'decisionAgencyEn',
  DecisionDate = 'decisionDate',
  DecisionFileId = 'decisionFileId',
  DecisionFileIdEn = 'decisionFileIdEn',
  DecisionFileName = 'decisionFileName',
  DecisionFileNameEn = 'decisionFileNameEn',
  DecisionNo = 'decisionNo',
  DecisionNoEn = 'decisionNoEn',
  DeletedAt = 'deletedAt',
  FileId = 'fileId',
  FileName = 'fileName',
  GuaranteeForm = 'guaranteeForm',
  GuaranteeValue = 'guaranteeValue',
  Id = 'id',
  InvestFieldCode = 'investFieldCode',
  InvestFieldId = 'investFieldId',
  InvestorCode = 'investorCode',
  InvestorId = 'investorId',
  InvestorName = 'investorName',
  IsInviteInterest = 'isInviteInterest',
  IsLatest = 'isLatest',
  IsPreNotification = 'isPreNotification',
  IssueLocation = 'issueLocation',
  OpenDate = 'openDate',
  OpenLocation = 'openLocation',
  OtherFileId = 'otherFileId',
  OtherFileIdEn = 'otherFileIdEn',
  OtherFileName = 'otherFileName',
  OtherFileNameEn = 'otherFileNameEn',
  PlanCode = 'planCode',
  PlanId = 'planId',
  PlanName = 'planName',
  PlanVersion = 'planVersion',
  ProcessApplyCode = 'processApplyCode',
  ProcessApplyId = 'processApplyId',
  ProcuringEntityCode = 'procuringEntityCode',
  ProcuringEntityId = 'procuringEntityId',
  ProcuringEntityName = 'procuringEntityName',
  PublishedAt = 'publishedAt',
  ReceiveLocation = 'receiveLocation',
  StatusCode = 'statusCode',
  StatusId = 'statusId',
  SubmitFee = 'submitFee',
  TotalContractor = 'totalContractor',
  UpdatedAt = 'updatedAt',
  UpdatedBy = 'updatedBy',
  ValidityPeriod = 'validityPeriod',
  ValidityPeriodUnit = 'validityPeriodUnit',
  Version = 'version'
}

export type BidNotificationScalarWhereInput = {
  AND?: InputMaybe<Array<BidNotificationScalarWhereInput>>;
  NOT?: InputMaybe<Array<BidNotificationScalarWhereInput>>;
  OR?: InputMaybe<Array<BidNotificationScalarWhereInput>>;
  bidNotificationCode?: InputMaybe<StringNullableFilter>;
  bidNotificationId?: InputMaybe<StringNullableFilter>;
  bidPackageCode?: InputMaybe<StringNullableFilter>;
  bidPackageId?: InputMaybe<StringNullableFilter>;
  bidPackageName?: InputMaybe<StringNullableFilter>;
  briefFileId?: InputMaybe<StringNullableFilter>;
  briefFileIdEn?: InputMaybe<StringNullableFilter>;
  briefFileName?: InputMaybe<StringNullableFilter>;
  briefFileNameEn?: InputMaybe<StringNullableFilter>;
  cancelByCode?: InputMaybe<StringNullableFilter>;
  cancelDate?: InputMaybe<DateTimeNullableFilter>;
  cancelDecisionAgency?: InputMaybe<StringNullableFilter>;
  cancelDecisionDate?: InputMaybe<DateTimeNullableFilter>;
  cancelDecisionFileId?: InputMaybe<StringNullableFilter>;
  cancelDecisionFileName?: InputMaybe<StringNullableFilter>;
  cancelDecisionNo?: InputMaybe<DateTimeNullableFilter>;
  cancelReason?: InputMaybe<StringNullableFilter>;
  cancelType?: InputMaybe<StringNullableFilter>;
  closeDate?: InputMaybe<DateTimeNullableFilter>;
  code?: InputMaybe<StringNullableFilter>;
  constructionTypeCode?: InputMaybe<StringNullableFilter>;
  constructionTypeId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  decisionAgency?: InputMaybe<StringNullableFilter>;
  decisionAgencyEn?: InputMaybe<StringNullableFilter>;
  decisionDate?: InputMaybe<DateTimeNullableFilter>;
  decisionFileId?: InputMaybe<StringNullableFilter>;
  decisionFileIdEn?: InputMaybe<StringNullableFilter>;
  decisionFileName?: InputMaybe<StringNullableFilter>;
  decisionFileNameEn?: InputMaybe<StringNullableFilter>;
  decisionNo?: InputMaybe<StringNullableFilter>;
  decisionNoEn?: InputMaybe<StringNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  fileId?: InputMaybe<StringNullableFilter>;
  fileName?: InputMaybe<StringNullableFilter>;
  guaranteeForm?: InputMaybe<StringNullableFilter>;
  guaranteeValue?: InputMaybe<BigIntNullableFilter>;
  id?: InputMaybe<StringFilter>;
  investFieldCode?: InputMaybe<StringNullableFilter>;
  investFieldId?: InputMaybe<StringNullableFilter>;
  investorCode?: InputMaybe<StringNullableFilter>;
  investorId?: InputMaybe<StringNullableFilter>;
  investorName?: InputMaybe<StringNullableFilter>;
  isInviteInterest?: InputMaybe<BoolFilter>;
  isLatest?: InputMaybe<BoolFilter>;
  isPreNotification?: InputMaybe<BoolFilter>;
  issueLocation?: InputMaybe<StringNullableFilter>;
  openDate?: InputMaybe<DateTimeNullableFilter>;
  openLocation?: InputMaybe<StringNullableFilter>;
  otherFileId?: InputMaybe<StringNullableFilter>;
  otherFileIdEn?: InputMaybe<StringNullableFilter>;
  otherFileName?: InputMaybe<StringNullableFilter>;
  otherFileNameEn?: InputMaybe<StringNullableFilter>;
  planCode?: InputMaybe<StringNullableFilter>;
  planId?: InputMaybe<StringNullableFilter>;
  planName?: InputMaybe<StringNullableFilter>;
  planVersion?: InputMaybe<StringNullableFilter>;
  processApplyCode?: InputMaybe<StringNullableFilter>;
  processApplyId?: InputMaybe<StringNullableFilter>;
  procuringEntityCode?: InputMaybe<StringNullableFilter>;
  procuringEntityId?: InputMaybe<StringNullableFilter>;
  procuringEntityName?: InputMaybe<StringNullableFilter>;
  publishedAt?: InputMaybe<DateTimeNullableFilter>;
  receiveLocation?: InputMaybe<StringNullableFilter>;
  statusCode?: InputMaybe<StringNullableFilter>;
  statusId?: InputMaybe<StringNullableFilter>;
  submitFee?: InputMaybe<BigIntNullableFilter>;
  totalContractor?: InputMaybe<IntNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  validityPeriod?: InputMaybe<IntNullableFilter>;
  validityPeriodUnit?: InputMaybe<StringNullableFilter>;
  version?: InputMaybe<StringNullableFilter>;
};

export type BidNotificationUpdateInput = {
  bidNotificationChapters?: InputMaybe<BidNotificationChapterUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationClarifies?: InputMaybe<BidNotificationClarifyUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationResultGoodsPrices?: InputMaybe<BidNotificationResultGoodsPriceUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationStatus?: InputMaybe<CatBidNotificationStatusUpdateOneWithoutBidNotificationsNestedInput>;
  bidPackage?: InputMaybe<BidPackageUpdateOneWithoutBidNotificationsNestedInput>;
  bidPackageCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPackageName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorUpdateManyWithoutBidNotificationNestedInput>;
  bidPreConferences?: InputMaybe<BidPreConferenceUpdateManyWithoutBidNotificationNestedInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanUpdateOneWithoutBidNotificationsNestedInput>;
  briefFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelByCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelDecisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelDecisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionNo?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelReason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutBidNotificationNestedInput>;
  closeDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  constructionType?: InputMaybe<CatConstructionTypeUpdateOneWithoutBidNotificationsNestedInput>;
  constructionTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutBidNotificationNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgencyEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNoEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  fileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  fileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  guaranteeForm?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  guaranteeValue?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investField?: InputMaybe<CatBidFieldUpdateOneWithoutInvestBidNotificationsNestedInput>;
  investFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investor?: InputMaybe<OrganizationUpdateOneWithoutInvestorBidNotificationsNestedInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isInviteInterest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPreNotification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  issueLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  openDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  openLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutBidNotificationsNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntity?: InputMaybe<OrganizationUpdateOneWithoutProcuringEntitiesNestedInput>;
  procuringEntityCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntityName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  receiveLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  result?: InputMaybe<BidNotificationResultUpdateManyWithoutBidNotificationNestedInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  submitFee?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  totalContractor?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  validityPeriod?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  validityPeriodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationUpdateManyMutationInput = {
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPackageCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPackageName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelByCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelDecisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelDecisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionNo?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelReason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  closeDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  constructionTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgencyEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNoEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  fileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  fileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  guaranteeForm?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  guaranteeValue?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isInviteInterest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPreNotification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  issueLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  openDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  openLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntityCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntityName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  receiveLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  submitFee?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  totalContractor?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  validityPeriod?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  validityPeriodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationUpdateManyWithWhereWithoutBidPackageInput = {
  data: BidNotificationUpdateManyMutationInput;
  where: BidNotificationScalarWhereInput;
};

export type BidNotificationUpdateManyWithWhereWithoutBidSelectionPlanInput = {
  data: BidNotificationUpdateManyMutationInput;
  where: BidNotificationScalarWhereInput;
};

export type BidNotificationUpdateManyWithWhereWithoutConstructionTypeInput = {
  data: BidNotificationUpdateManyMutationInput;
  where: BidNotificationScalarWhereInput;
};

export type BidNotificationUpdateManyWithWhereWithoutInvestFieldInput = {
  data: BidNotificationUpdateManyMutationInput;
  where: BidNotificationScalarWhereInput;
};

export type BidNotificationUpdateManyWithWhereWithoutInvestorInput = {
  data: BidNotificationUpdateManyMutationInput;
  where: BidNotificationScalarWhereInput;
};

export type BidNotificationUpdateManyWithWhereWithoutProcessApplyInput = {
  data: BidNotificationUpdateManyMutationInput;
  where: BidNotificationScalarWhereInput;
};

export type BidNotificationUpdateManyWithWhereWithoutProcuringEntityInput = {
  data: BidNotificationUpdateManyMutationInput;
  where: BidNotificationScalarWhereInput;
};

export type BidNotificationUpdateManyWithoutBidPackageNestedInput = {
  connect?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationCreateOrConnectWithoutBidPackageInput>>;
  create?: InputMaybe<Array<BidNotificationCreateWithoutBidPackageInput>>;
  createMany?: InputMaybe<BidNotificationCreateManyBidPackageInputEnvelope>;
  delete?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidNotificationScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  set?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  update?: InputMaybe<Array<BidNotificationUpdateWithWhereUniqueWithoutBidPackageInput>>;
  updateMany?: InputMaybe<Array<BidNotificationUpdateManyWithWhereWithoutBidPackageInput>>;
  upsert?: InputMaybe<Array<BidNotificationUpsertWithWhereUniqueWithoutBidPackageInput>>;
};

export type BidNotificationUpdateManyWithoutBidSelectionPlanNestedInput = {
  connect?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationCreateOrConnectWithoutBidSelectionPlanInput>>;
  create?: InputMaybe<Array<BidNotificationCreateWithoutBidSelectionPlanInput>>;
  createMany?: InputMaybe<BidNotificationCreateManyBidSelectionPlanInputEnvelope>;
  delete?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidNotificationScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  set?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  update?: InputMaybe<Array<BidNotificationUpdateWithWhereUniqueWithoutBidSelectionPlanInput>>;
  updateMany?: InputMaybe<Array<BidNotificationUpdateManyWithWhereWithoutBidSelectionPlanInput>>;
  upsert?: InputMaybe<Array<BidNotificationUpsertWithWhereUniqueWithoutBidSelectionPlanInput>>;
};

export type BidNotificationUpdateManyWithoutConstructionTypeNestedInput = {
  connect?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationCreateOrConnectWithoutConstructionTypeInput>>;
  create?: InputMaybe<Array<BidNotificationCreateWithoutConstructionTypeInput>>;
  createMany?: InputMaybe<BidNotificationCreateManyConstructionTypeInputEnvelope>;
  delete?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidNotificationScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  set?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  update?: InputMaybe<Array<BidNotificationUpdateWithWhereUniqueWithoutConstructionTypeInput>>;
  updateMany?: InputMaybe<Array<BidNotificationUpdateManyWithWhereWithoutConstructionTypeInput>>;
  upsert?: InputMaybe<Array<BidNotificationUpsertWithWhereUniqueWithoutConstructionTypeInput>>;
};

export type BidNotificationUpdateManyWithoutInvestFieldNestedInput = {
  connect?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationCreateOrConnectWithoutInvestFieldInput>>;
  create?: InputMaybe<Array<BidNotificationCreateWithoutInvestFieldInput>>;
  createMany?: InputMaybe<BidNotificationCreateManyInvestFieldInputEnvelope>;
  delete?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidNotificationScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  set?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  update?: InputMaybe<Array<BidNotificationUpdateWithWhereUniqueWithoutInvestFieldInput>>;
  updateMany?: InputMaybe<Array<BidNotificationUpdateManyWithWhereWithoutInvestFieldInput>>;
  upsert?: InputMaybe<Array<BidNotificationUpsertWithWhereUniqueWithoutInvestFieldInput>>;
};

export type BidNotificationUpdateManyWithoutInvestorNestedInput = {
  connect?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationCreateOrConnectWithoutInvestorInput>>;
  create?: InputMaybe<Array<BidNotificationCreateWithoutInvestorInput>>;
  createMany?: InputMaybe<BidNotificationCreateManyInvestorInputEnvelope>;
  delete?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidNotificationScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  set?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  update?: InputMaybe<Array<BidNotificationUpdateWithWhereUniqueWithoutInvestorInput>>;
  updateMany?: InputMaybe<Array<BidNotificationUpdateManyWithWhereWithoutInvestorInput>>;
  upsert?: InputMaybe<Array<BidNotificationUpsertWithWhereUniqueWithoutInvestorInput>>;
};

export type BidNotificationUpdateManyWithoutProcessApplyNestedInput = {
  connect?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationCreateOrConnectWithoutProcessApplyInput>>;
  create?: InputMaybe<Array<BidNotificationCreateWithoutProcessApplyInput>>;
  createMany?: InputMaybe<BidNotificationCreateManyProcessApplyInputEnvelope>;
  delete?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidNotificationScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  set?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  update?: InputMaybe<Array<BidNotificationUpdateWithWhereUniqueWithoutProcessApplyInput>>;
  updateMany?: InputMaybe<Array<BidNotificationUpdateManyWithWhereWithoutProcessApplyInput>>;
  upsert?: InputMaybe<Array<BidNotificationUpsertWithWhereUniqueWithoutProcessApplyInput>>;
};

export type BidNotificationUpdateManyWithoutProcuringEntityNestedInput = {
  connect?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidNotificationCreateOrConnectWithoutProcuringEntityInput>>;
  create?: InputMaybe<Array<BidNotificationCreateWithoutProcuringEntityInput>>;
  createMany?: InputMaybe<BidNotificationCreateManyProcuringEntityInputEnvelope>;
  delete?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidNotificationScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  set?: InputMaybe<Array<BidNotificationWhereUniqueInput>>;
  update?: InputMaybe<Array<BidNotificationUpdateWithWhereUniqueWithoutProcuringEntityInput>>;
  updateMany?: InputMaybe<Array<BidNotificationUpdateManyWithWhereWithoutProcuringEntityInput>>;
  upsert?: InputMaybe<Array<BidNotificationUpsertWithWhereUniqueWithoutProcuringEntityInput>>;
};

export type BidNotificationUpdateOneWithoutBidNotificationChaptersNestedInput = {
  connect?: InputMaybe<BidNotificationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidNotificationCreateOrConnectWithoutBidNotificationChaptersInput>;
  create?: InputMaybe<BidNotificationCreateWithoutBidNotificationChaptersInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<BidNotificationUpdateWithoutBidNotificationChaptersInput>;
  upsert?: InputMaybe<BidNotificationUpsertWithoutBidNotificationChaptersInput>;
};

export type BidNotificationUpdateOneWithoutBidPetitionContractorsNestedInput = {
  connect?: InputMaybe<BidNotificationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidNotificationCreateOrConnectWithoutBidPetitionContractorsInput>;
  create?: InputMaybe<BidNotificationCreateWithoutBidPetitionContractorsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<BidNotificationUpdateWithoutBidPetitionContractorsInput>;
  upsert?: InputMaybe<BidNotificationUpsertWithoutBidPetitionContractorsInput>;
};

export type BidNotificationUpdateOneWithoutChapterFilesNestedInput = {
  connect?: InputMaybe<BidNotificationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidNotificationCreateOrConnectWithoutChapterFilesInput>;
  create?: InputMaybe<BidNotificationCreateWithoutChapterFilesInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<BidNotificationUpdateWithoutChapterFilesInput>;
  upsert?: InputMaybe<BidNotificationUpsertWithoutChapterFilesInput>;
};

export type BidNotificationUpdateOneWithoutContractorsNestedInput = {
  connect?: InputMaybe<BidNotificationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidNotificationCreateOrConnectWithoutContractorsInput>;
  create?: InputMaybe<BidNotificationCreateWithoutContractorsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<BidNotificationUpdateWithoutContractorsInput>;
  upsert?: InputMaybe<BidNotificationUpsertWithoutContractorsInput>;
};

export type BidNotificationUpdateOneWithoutResultNestedInput = {
  connect?: InputMaybe<BidNotificationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidNotificationCreateOrConnectWithoutResultInput>;
  create?: InputMaybe<BidNotificationCreateWithoutResultInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<BidNotificationUpdateWithoutResultInput>;
  upsert?: InputMaybe<BidNotificationUpsertWithoutResultInput>;
};

export type BidNotificationUpdateWithWhereUniqueWithoutBidPackageInput = {
  data: BidNotificationUpdateWithoutBidPackageInput;
  where: BidNotificationWhereUniqueInput;
};

export type BidNotificationUpdateWithWhereUniqueWithoutBidSelectionPlanInput = {
  data: BidNotificationUpdateWithoutBidSelectionPlanInput;
  where: BidNotificationWhereUniqueInput;
};

export type BidNotificationUpdateWithWhereUniqueWithoutConstructionTypeInput = {
  data: BidNotificationUpdateWithoutConstructionTypeInput;
  where: BidNotificationWhereUniqueInput;
};

export type BidNotificationUpdateWithWhereUniqueWithoutInvestFieldInput = {
  data: BidNotificationUpdateWithoutInvestFieldInput;
  where: BidNotificationWhereUniqueInput;
};

export type BidNotificationUpdateWithWhereUniqueWithoutInvestorInput = {
  data: BidNotificationUpdateWithoutInvestorInput;
  where: BidNotificationWhereUniqueInput;
};

export type BidNotificationUpdateWithWhereUniqueWithoutProcessApplyInput = {
  data: BidNotificationUpdateWithoutProcessApplyInput;
  where: BidNotificationWhereUniqueInput;
};

export type BidNotificationUpdateWithWhereUniqueWithoutProcuringEntityInput = {
  data: BidNotificationUpdateWithoutProcuringEntityInput;
  where: BidNotificationWhereUniqueInput;
};

export type BidNotificationUpdateWithoutBidNotificationChaptersInput = {
  bidNotificationClarifies?: InputMaybe<BidNotificationClarifyUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationResultGoodsPrices?: InputMaybe<BidNotificationResultGoodsPriceUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationStatus?: InputMaybe<CatBidNotificationStatusUpdateOneWithoutBidNotificationsNestedInput>;
  bidPackage?: InputMaybe<BidPackageUpdateOneWithoutBidNotificationsNestedInput>;
  bidPackageCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPackageName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorUpdateManyWithoutBidNotificationNestedInput>;
  bidPreConferences?: InputMaybe<BidPreConferenceUpdateManyWithoutBidNotificationNestedInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanUpdateOneWithoutBidNotificationsNestedInput>;
  briefFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelByCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelDecisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelDecisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionNo?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelReason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutBidNotificationNestedInput>;
  closeDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  constructionType?: InputMaybe<CatConstructionTypeUpdateOneWithoutBidNotificationsNestedInput>;
  constructionTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutBidNotificationNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgencyEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNoEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  fileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  fileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  guaranteeForm?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  guaranteeValue?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investField?: InputMaybe<CatBidFieldUpdateOneWithoutInvestBidNotificationsNestedInput>;
  investFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investor?: InputMaybe<OrganizationUpdateOneWithoutInvestorBidNotificationsNestedInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isInviteInterest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPreNotification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  issueLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  openDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  openLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutBidNotificationsNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntity?: InputMaybe<OrganizationUpdateOneWithoutProcuringEntitiesNestedInput>;
  procuringEntityCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntityName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  receiveLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  result?: InputMaybe<BidNotificationResultUpdateManyWithoutBidNotificationNestedInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  submitFee?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  totalContractor?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  validityPeriod?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  validityPeriodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationUpdateWithoutBidPackageInput = {
  bidNotificationChapters?: InputMaybe<BidNotificationChapterUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationClarifies?: InputMaybe<BidNotificationClarifyUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationResultGoodsPrices?: InputMaybe<BidNotificationResultGoodsPriceUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationStatus?: InputMaybe<CatBidNotificationStatusUpdateOneWithoutBidNotificationsNestedInput>;
  bidPackageCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPackageName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorUpdateManyWithoutBidNotificationNestedInput>;
  bidPreConferences?: InputMaybe<BidPreConferenceUpdateManyWithoutBidNotificationNestedInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanUpdateOneWithoutBidNotificationsNestedInput>;
  briefFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelByCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelDecisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelDecisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionNo?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelReason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutBidNotificationNestedInput>;
  closeDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  constructionType?: InputMaybe<CatConstructionTypeUpdateOneWithoutBidNotificationsNestedInput>;
  constructionTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutBidNotificationNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgencyEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNoEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  fileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  fileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  guaranteeForm?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  guaranteeValue?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investField?: InputMaybe<CatBidFieldUpdateOneWithoutInvestBidNotificationsNestedInput>;
  investFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investor?: InputMaybe<OrganizationUpdateOneWithoutInvestorBidNotificationsNestedInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isInviteInterest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPreNotification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  issueLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  openDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  openLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutBidNotificationsNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntity?: InputMaybe<OrganizationUpdateOneWithoutProcuringEntitiesNestedInput>;
  procuringEntityCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntityName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  receiveLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  result?: InputMaybe<BidNotificationResultUpdateManyWithoutBidNotificationNestedInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  submitFee?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  totalContractor?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  validityPeriod?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  validityPeriodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationUpdateWithoutBidPetitionContractorsInput = {
  bidNotificationChapters?: InputMaybe<BidNotificationChapterUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationClarifies?: InputMaybe<BidNotificationClarifyUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationResultGoodsPrices?: InputMaybe<BidNotificationResultGoodsPriceUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationStatus?: InputMaybe<CatBidNotificationStatusUpdateOneWithoutBidNotificationsNestedInput>;
  bidPackage?: InputMaybe<BidPackageUpdateOneWithoutBidNotificationsNestedInput>;
  bidPackageCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPackageName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPreConferences?: InputMaybe<BidPreConferenceUpdateManyWithoutBidNotificationNestedInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanUpdateOneWithoutBidNotificationsNestedInput>;
  briefFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelByCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelDecisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelDecisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionNo?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelReason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutBidNotificationNestedInput>;
  closeDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  constructionType?: InputMaybe<CatConstructionTypeUpdateOneWithoutBidNotificationsNestedInput>;
  constructionTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutBidNotificationNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgencyEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNoEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  fileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  fileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  guaranteeForm?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  guaranteeValue?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investField?: InputMaybe<CatBidFieldUpdateOneWithoutInvestBidNotificationsNestedInput>;
  investFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investor?: InputMaybe<OrganizationUpdateOneWithoutInvestorBidNotificationsNestedInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isInviteInterest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPreNotification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  issueLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  openDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  openLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutBidNotificationsNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntity?: InputMaybe<OrganizationUpdateOneWithoutProcuringEntitiesNestedInput>;
  procuringEntityCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntityName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  receiveLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  result?: InputMaybe<BidNotificationResultUpdateManyWithoutBidNotificationNestedInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  submitFee?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  totalContractor?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  validityPeriod?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  validityPeriodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationUpdateWithoutBidSelectionPlanInput = {
  bidNotificationChapters?: InputMaybe<BidNotificationChapterUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationClarifies?: InputMaybe<BidNotificationClarifyUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationResultGoodsPrices?: InputMaybe<BidNotificationResultGoodsPriceUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationStatus?: InputMaybe<CatBidNotificationStatusUpdateOneWithoutBidNotificationsNestedInput>;
  bidPackage?: InputMaybe<BidPackageUpdateOneWithoutBidNotificationsNestedInput>;
  bidPackageCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPackageName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorUpdateManyWithoutBidNotificationNestedInput>;
  bidPreConferences?: InputMaybe<BidPreConferenceUpdateManyWithoutBidNotificationNestedInput>;
  briefFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelByCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelDecisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelDecisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionNo?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelReason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutBidNotificationNestedInput>;
  closeDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  constructionType?: InputMaybe<CatConstructionTypeUpdateOneWithoutBidNotificationsNestedInput>;
  constructionTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutBidNotificationNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgencyEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNoEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  fileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  fileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  guaranteeForm?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  guaranteeValue?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investField?: InputMaybe<CatBidFieldUpdateOneWithoutInvestBidNotificationsNestedInput>;
  investFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investor?: InputMaybe<OrganizationUpdateOneWithoutInvestorBidNotificationsNestedInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isInviteInterest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPreNotification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  issueLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  openDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  openLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutBidNotificationsNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntity?: InputMaybe<OrganizationUpdateOneWithoutProcuringEntitiesNestedInput>;
  procuringEntityCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntityName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  receiveLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  result?: InputMaybe<BidNotificationResultUpdateManyWithoutBidNotificationNestedInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  submitFee?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  totalContractor?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  validityPeriod?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  validityPeriodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationUpdateWithoutChapterFilesInput = {
  bidNotificationChapters?: InputMaybe<BidNotificationChapterUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationClarifies?: InputMaybe<BidNotificationClarifyUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationResultGoodsPrices?: InputMaybe<BidNotificationResultGoodsPriceUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationStatus?: InputMaybe<CatBidNotificationStatusUpdateOneWithoutBidNotificationsNestedInput>;
  bidPackage?: InputMaybe<BidPackageUpdateOneWithoutBidNotificationsNestedInput>;
  bidPackageCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPackageName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorUpdateManyWithoutBidNotificationNestedInput>;
  bidPreConferences?: InputMaybe<BidPreConferenceUpdateManyWithoutBidNotificationNestedInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanUpdateOneWithoutBidNotificationsNestedInput>;
  briefFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelByCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelDecisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelDecisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionNo?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelReason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  closeDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  constructionType?: InputMaybe<CatConstructionTypeUpdateOneWithoutBidNotificationsNestedInput>;
  constructionTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutBidNotificationNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgencyEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNoEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  fileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  fileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  guaranteeForm?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  guaranteeValue?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investField?: InputMaybe<CatBidFieldUpdateOneWithoutInvestBidNotificationsNestedInput>;
  investFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investor?: InputMaybe<OrganizationUpdateOneWithoutInvestorBidNotificationsNestedInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isInviteInterest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPreNotification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  issueLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  openDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  openLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutBidNotificationsNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntity?: InputMaybe<OrganizationUpdateOneWithoutProcuringEntitiesNestedInput>;
  procuringEntityCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntityName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  receiveLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  result?: InputMaybe<BidNotificationResultUpdateManyWithoutBidNotificationNestedInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  submitFee?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  totalContractor?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  validityPeriod?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  validityPeriodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationUpdateWithoutConstructionTypeInput = {
  bidNotificationChapters?: InputMaybe<BidNotificationChapterUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationClarifies?: InputMaybe<BidNotificationClarifyUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationResultGoodsPrices?: InputMaybe<BidNotificationResultGoodsPriceUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationStatus?: InputMaybe<CatBidNotificationStatusUpdateOneWithoutBidNotificationsNestedInput>;
  bidPackage?: InputMaybe<BidPackageUpdateOneWithoutBidNotificationsNestedInput>;
  bidPackageCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPackageName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorUpdateManyWithoutBidNotificationNestedInput>;
  bidPreConferences?: InputMaybe<BidPreConferenceUpdateManyWithoutBidNotificationNestedInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanUpdateOneWithoutBidNotificationsNestedInput>;
  briefFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelByCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelDecisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelDecisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionNo?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelReason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutBidNotificationNestedInput>;
  closeDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  constructionTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutBidNotificationNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgencyEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNoEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  fileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  fileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  guaranteeForm?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  guaranteeValue?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investField?: InputMaybe<CatBidFieldUpdateOneWithoutInvestBidNotificationsNestedInput>;
  investFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investor?: InputMaybe<OrganizationUpdateOneWithoutInvestorBidNotificationsNestedInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isInviteInterest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPreNotification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  issueLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  openDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  openLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutBidNotificationsNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntity?: InputMaybe<OrganizationUpdateOneWithoutProcuringEntitiesNestedInput>;
  procuringEntityCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntityName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  receiveLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  result?: InputMaybe<BidNotificationResultUpdateManyWithoutBidNotificationNestedInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  submitFee?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  totalContractor?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  validityPeriod?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  validityPeriodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationUpdateWithoutContractorsInput = {
  bidNotificationChapters?: InputMaybe<BidNotificationChapterUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationClarifies?: InputMaybe<BidNotificationClarifyUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationResultGoodsPrices?: InputMaybe<BidNotificationResultGoodsPriceUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationStatus?: InputMaybe<CatBidNotificationStatusUpdateOneWithoutBidNotificationsNestedInput>;
  bidPackage?: InputMaybe<BidPackageUpdateOneWithoutBidNotificationsNestedInput>;
  bidPackageCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPackageName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorUpdateManyWithoutBidNotificationNestedInput>;
  bidPreConferences?: InputMaybe<BidPreConferenceUpdateManyWithoutBidNotificationNestedInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanUpdateOneWithoutBidNotificationsNestedInput>;
  briefFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelByCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelDecisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelDecisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionNo?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelReason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutBidNotificationNestedInput>;
  closeDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  constructionType?: InputMaybe<CatConstructionTypeUpdateOneWithoutBidNotificationsNestedInput>;
  constructionTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgencyEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNoEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  fileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  fileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  guaranteeForm?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  guaranteeValue?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investField?: InputMaybe<CatBidFieldUpdateOneWithoutInvestBidNotificationsNestedInput>;
  investFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investor?: InputMaybe<OrganizationUpdateOneWithoutInvestorBidNotificationsNestedInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isInviteInterest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPreNotification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  issueLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  openDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  openLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutBidNotificationsNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntity?: InputMaybe<OrganizationUpdateOneWithoutProcuringEntitiesNestedInput>;
  procuringEntityCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntityName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  receiveLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  result?: InputMaybe<BidNotificationResultUpdateManyWithoutBidNotificationNestedInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  submitFee?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  totalContractor?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  validityPeriod?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  validityPeriodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationUpdateWithoutInvestFieldInput = {
  bidNotificationChapters?: InputMaybe<BidNotificationChapterUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationClarifies?: InputMaybe<BidNotificationClarifyUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationResultGoodsPrices?: InputMaybe<BidNotificationResultGoodsPriceUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationStatus?: InputMaybe<CatBidNotificationStatusUpdateOneWithoutBidNotificationsNestedInput>;
  bidPackage?: InputMaybe<BidPackageUpdateOneWithoutBidNotificationsNestedInput>;
  bidPackageCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPackageName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorUpdateManyWithoutBidNotificationNestedInput>;
  bidPreConferences?: InputMaybe<BidPreConferenceUpdateManyWithoutBidNotificationNestedInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanUpdateOneWithoutBidNotificationsNestedInput>;
  briefFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelByCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelDecisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelDecisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionNo?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelReason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutBidNotificationNestedInput>;
  closeDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  constructionType?: InputMaybe<CatConstructionTypeUpdateOneWithoutBidNotificationsNestedInput>;
  constructionTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutBidNotificationNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgencyEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNoEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  fileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  fileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  guaranteeForm?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  guaranteeValue?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investor?: InputMaybe<OrganizationUpdateOneWithoutInvestorBidNotificationsNestedInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isInviteInterest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPreNotification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  issueLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  openDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  openLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutBidNotificationsNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntity?: InputMaybe<OrganizationUpdateOneWithoutProcuringEntitiesNestedInput>;
  procuringEntityCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntityName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  receiveLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  result?: InputMaybe<BidNotificationResultUpdateManyWithoutBidNotificationNestedInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  submitFee?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  totalContractor?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  validityPeriod?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  validityPeriodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationUpdateWithoutInvestorInput = {
  bidNotificationChapters?: InputMaybe<BidNotificationChapterUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationClarifies?: InputMaybe<BidNotificationClarifyUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationResultGoodsPrices?: InputMaybe<BidNotificationResultGoodsPriceUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationStatus?: InputMaybe<CatBidNotificationStatusUpdateOneWithoutBidNotificationsNestedInput>;
  bidPackage?: InputMaybe<BidPackageUpdateOneWithoutBidNotificationsNestedInput>;
  bidPackageCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPackageName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorUpdateManyWithoutBidNotificationNestedInput>;
  bidPreConferences?: InputMaybe<BidPreConferenceUpdateManyWithoutBidNotificationNestedInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanUpdateOneWithoutBidNotificationsNestedInput>;
  briefFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelByCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelDecisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelDecisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionNo?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelReason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutBidNotificationNestedInput>;
  closeDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  constructionType?: InputMaybe<CatConstructionTypeUpdateOneWithoutBidNotificationsNestedInput>;
  constructionTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutBidNotificationNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgencyEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNoEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  fileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  fileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  guaranteeForm?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  guaranteeValue?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investField?: InputMaybe<CatBidFieldUpdateOneWithoutInvestBidNotificationsNestedInput>;
  investFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isInviteInterest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPreNotification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  issueLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  openDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  openLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutBidNotificationsNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntity?: InputMaybe<OrganizationUpdateOneWithoutProcuringEntitiesNestedInput>;
  procuringEntityCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntityName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  receiveLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  result?: InputMaybe<BidNotificationResultUpdateManyWithoutBidNotificationNestedInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  submitFee?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  totalContractor?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  validityPeriod?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  validityPeriodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationUpdateWithoutProcessApplyInput = {
  bidNotificationChapters?: InputMaybe<BidNotificationChapterUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationClarifies?: InputMaybe<BidNotificationClarifyUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationResultGoodsPrices?: InputMaybe<BidNotificationResultGoodsPriceUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationStatus?: InputMaybe<CatBidNotificationStatusUpdateOneWithoutBidNotificationsNestedInput>;
  bidPackage?: InputMaybe<BidPackageUpdateOneWithoutBidNotificationsNestedInput>;
  bidPackageCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPackageName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorUpdateManyWithoutBidNotificationNestedInput>;
  bidPreConferences?: InputMaybe<BidPreConferenceUpdateManyWithoutBidNotificationNestedInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanUpdateOneWithoutBidNotificationsNestedInput>;
  briefFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelByCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelDecisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelDecisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionNo?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelReason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutBidNotificationNestedInput>;
  closeDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  constructionType?: InputMaybe<CatConstructionTypeUpdateOneWithoutBidNotificationsNestedInput>;
  constructionTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutBidNotificationNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgencyEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNoEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  fileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  fileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  guaranteeForm?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  guaranteeValue?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investField?: InputMaybe<CatBidFieldUpdateOneWithoutInvestBidNotificationsNestedInput>;
  investFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investor?: InputMaybe<OrganizationUpdateOneWithoutInvestorBidNotificationsNestedInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isInviteInterest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPreNotification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  issueLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  openDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  openLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntity?: InputMaybe<OrganizationUpdateOneWithoutProcuringEntitiesNestedInput>;
  procuringEntityCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntityName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  receiveLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  result?: InputMaybe<BidNotificationResultUpdateManyWithoutBidNotificationNestedInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  submitFee?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  totalContractor?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  validityPeriod?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  validityPeriodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationUpdateWithoutProcuringEntityInput = {
  bidNotificationChapters?: InputMaybe<BidNotificationChapterUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationClarifies?: InputMaybe<BidNotificationClarifyUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationResultGoodsPrices?: InputMaybe<BidNotificationResultGoodsPriceUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationStatus?: InputMaybe<CatBidNotificationStatusUpdateOneWithoutBidNotificationsNestedInput>;
  bidPackage?: InputMaybe<BidPackageUpdateOneWithoutBidNotificationsNestedInput>;
  bidPackageCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPackageName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorUpdateManyWithoutBidNotificationNestedInput>;
  bidPreConferences?: InputMaybe<BidPreConferenceUpdateManyWithoutBidNotificationNestedInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanUpdateOneWithoutBidNotificationsNestedInput>;
  briefFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelByCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelDecisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelDecisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionNo?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelReason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutBidNotificationNestedInput>;
  closeDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  constructionType?: InputMaybe<CatConstructionTypeUpdateOneWithoutBidNotificationsNestedInput>;
  constructionTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutBidNotificationNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgencyEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNoEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  fileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  fileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  guaranteeForm?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  guaranteeValue?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investField?: InputMaybe<CatBidFieldUpdateOneWithoutInvestBidNotificationsNestedInput>;
  investFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investor?: InputMaybe<OrganizationUpdateOneWithoutInvestorBidNotificationsNestedInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isInviteInterest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPreNotification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  issueLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  openDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  openLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutBidNotificationsNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntityCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntityName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  receiveLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  result?: InputMaybe<BidNotificationResultUpdateManyWithoutBidNotificationNestedInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  submitFee?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  totalContractor?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  validityPeriod?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  validityPeriodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationUpdateWithoutResultInput = {
  bidNotificationChapters?: InputMaybe<BidNotificationChapterUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationClarifies?: InputMaybe<BidNotificationClarifyUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationResultGoodsPrices?: InputMaybe<BidNotificationResultGoodsPriceUpdateManyWithoutBidNotificationNestedInput>;
  bidNotificationStatus?: InputMaybe<CatBidNotificationStatusUpdateOneWithoutBidNotificationsNestedInput>;
  bidPackage?: InputMaybe<BidPackageUpdateOneWithoutBidNotificationsNestedInput>;
  bidPackageCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPackageName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorUpdateManyWithoutBidNotificationNestedInput>;
  bidPreConferences?: InputMaybe<BidPreConferenceUpdateManyWithoutBidNotificationNestedInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanUpdateOneWithoutBidNotificationsNestedInput>;
  briefFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  briefFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelByCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelDecisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelDecisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelDecisionNo?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cancelReason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutBidNotificationNestedInput>;
  closeDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  constructionType?: InputMaybe<CatConstructionTypeUpdateOneWithoutBidNotificationsNestedInput>;
  constructionTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutBidNotificationNestedInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgencyEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNoEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  fileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  fileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  guaranteeForm?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  guaranteeValue?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investField?: InputMaybe<CatBidFieldUpdateOneWithoutInvestBidNotificationsNestedInput>;
  investFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investor?: InputMaybe<OrganizationUpdateOneWithoutInvestorBidNotificationsNestedInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isInviteInterest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPreNotification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  issueLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  openDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  openLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileIdEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  otherFileNameEn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutBidNotificationsNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntity?: InputMaybe<OrganizationUpdateOneWithoutProcuringEntitiesNestedInput>;
  procuringEntityCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntityName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  receiveLocation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  submitFee?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  totalContractor?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  validityPeriod?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  validityPeriodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidNotificationUpsertWithWhereUniqueWithoutBidPackageInput = {
  create: BidNotificationCreateWithoutBidPackageInput;
  update: BidNotificationUpdateWithoutBidPackageInput;
  where: BidNotificationWhereUniqueInput;
};

export type BidNotificationUpsertWithWhereUniqueWithoutBidSelectionPlanInput = {
  create: BidNotificationCreateWithoutBidSelectionPlanInput;
  update: BidNotificationUpdateWithoutBidSelectionPlanInput;
  where: BidNotificationWhereUniqueInput;
};

export type BidNotificationUpsertWithWhereUniqueWithoutConstructionTypeInput = {
  create: BidNotificationCreateWithoutConstructionTypeInput;
  update: BidNotificationUpdateWithoutConstructionTypeInput;
  where: BidNotificationWhereUniqueInput;
};

export type BidNotificationUpsertWithWhereUniqueWithoutInvestFieldInput = {
  create: BidNotificationCreateWithoutInvestFieldInput;
  update: BidNotificationUpdateWithoutInvestFieldInput;
  where: BidNotificationWhereUniqueInput;
};

export type BidNotificationUpsertWithWhereUniqueWithoutInvestorInput = {
  create: BidNotificationCreateWithoutInvestorInput;
  update: BidNotificationUpdateWithoutInvestorInput;
  where: BidNotificationWhereUniqueInput;
};

export type BidNotificationUpsertWithWhereUniqueWithoutProcessApplyInput = {
  create: BidNotificationCreateWithoutProcessApplyInput;
  update: BidNotificationUpdateWithoutProcessApplyInput;
  where: BidNotificationWhereUniqueInput;
};

export type BidNotificationUpsertWithWhereUniqueWithoutProcuringEntityInput = {
  create: BidNotificationCreateWithoutProcuringEntityInput;
  update: BidNotificationUpdateWithoutProcuringEntityInput;
  where: BidNotificationWhereUniqueInput;
};

export type BidNotificationUpsertWithoutBidNotificationChaptersInput = {
  create: BidNotificationCreateWithoutBidNotificationChaptersInput;
  update: BidNotificationUpdateWithoutBidNotificationChaptersInput;
};

export type BidNotificationUpsertWithoutBidPetitionContractorsInput = {
  create: BidNotificationCreateWithoutBidPetitionContractorsInput;
  update: BidNotificationUpdateWithoutBidPetitionContractorsInput;
};

export type BidNotificationUpsertWithoutChapterFilesInput = {
  create: BidNotificationCreateWithoutChapterFilesInput;
  update: BidNotificationUpdateWithoutChapterFilesInput;
};

export type BidNotificationUpsertWithoutContractorsInput = {
  create: BidNotificationCreateWithoutContractorsInput;
  update: BidNotificationUpdateWithoutContractorsInput;
};

export type BidNotificationUpsertWithoutResultInput = {
  create: BidNotificationCreateWithoutResultInput;
  update: BidNotificationUpdateWithoutResultInput;
};

export type BidNotificationWhereInput = {
  AND?: InputMaybe<Array<BidNotificationWhereInput>>;
  NOT?: InputMaybe<Array<BidNotificationWhereInput>>;
  OR?: InputMaybe<Array<BidNotificationWhereInput>>;
  bidNotificationChapters?: InputMaybe<BidNotificationChapterListRelationFilter>;
  bidNotificationClarifies?: InputMaybe<BidNotificationClarifyListRelationFilter>;
  bidNotificationCode?: InputMaybe<StringNullableFilter>;
  bidNotificationId?: InputMaybe<StringNullableFilter>;
  bidNotificationResultGoodsPrices?: InputMaybe<BidNotificationResultGoodsPriceListRelationFilter>;
  bidNotificationStatus?: InputMaybe<CatBidNotificationStatusWhereInput>;
  bidPackage?: InputMaybe<BidPackageWhereInput>;
  bidPackageCode?: InputMaybe<StringNullableFilter>;
  bidPackageId?: InputMaybe<StringNullableFilter>;
  bidPackageName?: InputMaybe<StringNullableFilter>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorListRelationFilter>;
  bidPreConferences?: InputMaybe<BidPreConferenceListRelationFilter>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanWhereInput>;
  briefFileId?: InputMaybe<StringNullableFilter>;
  briefFileIdEn?: InputMaybe<StringNullableFilter>;
  briefFileName?: InputMaybe<StringNullableFilter>;
  briefFileNameEn?: InputMaybe<StringNullableFilter>;
  cancelByCode?: InputMaybe<StringNullableFilter>;
  cancelDate?: InputMaybe<DateTimeNullableFilter>;
  cancelDecisionAgency?: InputMaybe<StringNullableFilter>;
  cancelDecisionDate?: InputMaybe<DateTimeNullableFilter>;
  cancelDecisionFileId?: InputMaybe<StringNullableFilter>;
  cancelDecisionFileName?: InputMaybe<StringNullableFilter>;
  cancelDecisionNo?: InputMaybe<DateTimeNullableFilter>;
  cancelReason?: InputMaybe<StringNullableFilter>;
  cancelType?: InputMaybe<StringNullableFilter>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileListRelationFilter>;
  closeDate?: InputMaybe<DateTimeNullableFilter>;
  code?: InputMaybe<StringNullableFilter>;
  constructionType?: InputMaybe<CatConstructionTypeWhereInput>;
  constructionTypeCode?: InputMaybe<StringNullableFilter>;
  constructionTypeId?: InputMaybe<StringNullableFilter>;
  contractors?: InputMaybe<BidNotificationContractorListRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  decisionAgency?: InputMaybe<StringNullableFilter>;
  decisionAgencyEn?: InputMaybe<StringNullableFilter>;
  decisionDate?: InputMaybe<DateTimeNullableFilter>;
  decisionFileId?: InputMaybe<StringNullableFilter>;
  decisionFileIdEn?: InputMaybe<StringNullableFilter>;
  decisionFileName?: InputMaybe<StringNullableFilter>;
  decisionFileNameEn?: InputMaybe<StringNullableFilter>;
  decisionNo?: InputMaybe<StringNullableFilter>;
  decisionNoEn?: InputMaybe<StringNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  fileId?: InputMaybe<StringNullableFilter>;
  fileName?: InputMaybe<StringNullableFilter>;
  guaranteeForm?: InputMaybe<StringNullableFilter>;
  guaranteeValue?: InputMaybe<BigIntNullableFilter>;
  id?: InputMaybe<StringFilter>;
  investField?: InputMaybe<CatBidFieldWhereInput>;
  investFieldCode?: InputMaybe<StringNullableFilter>;
  investFieldId?: InputMaybe<StringNullableFilter>;
  investor?: InputMaybe<OrganizationWhereInput>;
  investorCode?: InputMaybe<StringNullableFilter>;
  investorId?: InputMaybe<StringNullableFilter>;
  investorName?: InputMaybe<StringNullableFilter>;
  isInviteInterest?: InputMaybe<BoolFilter>;
  isLatest?: InputMaybe<BoolFilter>;
  isPreNotification?: InputMaybe<BoolFilter>;
  issueLocation?: InputMaybe<StringNullableFilter>;
  openDate?: InputMaybe<DateTimeNullableFilter>;
  openLocation?: InputMaybe<StringNullableFilter>;
  otherFileId?: InputMaybe<StringNullableFilter>;
  otherFileIdEn?: InputMaybe<StringNullableFilter>;
  otherFileName?: InputMaybe<StringNullableFilter>;
  otherFileNameEn?: InputMaybe<StringNullableFilter>;
  planCode?: InputMaybe<StringNullableFilter>;
  planId?: InputMaybe<StringNullableFilter>;
  planName?: InputMaybe<StringNullableFilter>;
  planVersion?: InputMaybe<StringNullableFilter>;
  processApply?: InputMaybe<CatProcessApplyWhereInput>;
  processApplyCode?: InputMaybe<StringNullableFilter>;
  processApplyId?: InputMaybe<StringNullableFilter>;
  procuringEntity?: InputMaybe<OrganizationWhereInput>;
  procuringEntityCode?: InputMaybe<StringNullableFilter>;
  procuringEntityId?: InputMaybe<StringNullableFilter>;
  procuringEntityName?: InputMaybe<StringNullableFilter>;
  publishedAt?: InputMaybe<DateTimeNullableFilter>;
  receiveLocation?: InputMaybe<StringNullableFilter>;
  result?: InputMaybe<BidNotificationResultListRelationFilter>;
  statusCode?: InputMaybe<StringNullableFilter>;
  statusId?: InputMaybe<StringNullableFilter>;
  submitFee?: InputMaybe<BigIntNullableFilter>;
  totalContractor?: InputMaybe<IntNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  validityPeriod?: InputMaybe<IntNullableFilter>;
  validityPeriodUnit?: InputMaybe<StringNullableFilter>;
  version?: InputMaybe<StringNullableFilter>;
};

export type BidNotificationWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']['input']>;
};

export type BidPackage = {
  __typename?: 'BidPackage';
  _count: BidPackageCount;
  bidEstimatePrice?: Maybe<Scalars['Decimal']['output']>;
  bidField?: Maybe<CatBidField>;
  bidFieldCode?: Maybe<Scalars['String']['output']>;
  bidFieldId?: Maybe<Scalars['String']['output']>;
  bidForm?: Maybe<CatBidForm>;
  bidFormCode?: Maybe<Scalars['String']['output']>;
  bidFormId?: Maybe<Scalars['String']['output']>;
  bidMode?: Maybe<CatBidMode>;
  bidModeCode?: Maybe<Scalars['String']['output']>;
  bidModeId?: Maybe<Scalars['String']['output']>;
  bidNoImg?: Maybe<Scalars['String']['output']>;
  bidNotificationCode?: Maybe<Scalars['String']['output']>;
  bidNotificationVersion?: Maybe<Scalars['String']['output']>;
  bidNotifications?: Maybe<Array<BidNotification>>;
  bidPackageLots?: Maybe<Array<BidPackageLot>>;
  bidPackageSymbol?: Maybe<Scalars['String']['output']>;
  bidPrice?: Maybe<Scalars['Decimal']['output']>;
  bidPriceDetail?: Maybe<Scalars['String']['output']>;
  bidPriceEx?: Maybe<Scalars['String']['output']>;
  bidPriceOld?: Maybe<Scalars['String']['output']>;
  bidPriceUnit?: Maybe<Scalars['String']['output']>;
  bidSelectionPlan?: Maybe<BidSelectionPlan>;
  bidStartMonth?: Maybe<Scalars['Int']['output']>;
  bidStartQuarter?: Maybe<Scalars['String']['output']>;
  bidStartTime?: Maybe<Scalars['String']['output']>;
  bidStartUnit?: Maybe<Scalars['String']['output']>;
  bidStartYear?: Maybe<Scalars['Int']['output']>;
  capitalClassify?: Maybe<Scalars['String']['output']>;
  capitalDetail?: Maybe<Scalars['String']['output']>;
  capitalType?: Maybe<Scalars['String']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  contractPeriod?: Maybe<Scalars['Int']['output']>;
  contractPeriodText?: Maybe<Scalars['String']['output']>;
  contractPeriodUnit?: Maybe<Scalars['String']['output']>;
  contractType?: Maybe<CatContractType>;
  contractTypeCode?: Maybe<Scalars['String']['output']>;
  contractTypeId?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  deletedAt?: Maybe<Scalars['DateTime']['output']>;
  district?: Maybe<CatArea>;
  districtCode?: Maybe<Scalars['String']['output']>;
  districtId?: Maybe<Scalars['String']['output']>;
  exchangeDate?: Maybe<Scalars['DateTime']['output']>;
  id: Scalars['String']['output'];
  isConcentrateShopping: Scalars['Boolean']['output'];
  isDomestic: Scalars['Boolean']['output'];
  isInternet: Scalars['Boolean']['output'];
  isMedicine?: Maybe<Scalars['Boolean']['output']>;
  isMultiLot: Scalars['Boolean']['output'];
  isOnlineShopping: Scalars['Boolean']['output'];
  isPrequalification: Scalars['Boolean']['output'];
  linkNotificationInfo?: Maybe<Scalars['String']['output']>;
  location?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  petitions?: Maybe<Array<BidPetitionContractor>>;
  planCode?: Maybe<Scalars['String']['output']>;
  planCodeOld?: Maybe<Scalars['String']['output']>;
  planId?: Maybe<Scalars['String']['output']>;
  planVersion?: Maybe<Scalars['String']['output']>;
  processApply?: Maybe<CatProcessApply>;
  processApplyCode?: Maybe<Scalars['String']['output']>;
  processApplyId?: Maybe<Scalars['String']['output']>;
  province?: Maybe<CatArea>;
  provinceCode?: Maybe<Scalars['String']['output']>;
  provinceId?: Maybe<Scalars['String']['output']>;
  reciprocalCapital?: Maybe<Scalars['String']['output']>;
  reciprocalCapitalUnit?: Maybe<Scalars['String']['output']>;
  shoppingAgency?: Maybe<CatAgency>;
  shoppingAgencyCode?: Maybe<Scalars['String']['output']>;
  shoppingAgencyId?: Maybe<Scalars['String']['output']>;
  supervisor?: Maybe<Scalars['String']['output']>;
  underUnit?: Maybe<CatMinistry>;
  underUnitCode?: Maybe<Scalars['String']['output']>;
  underUnitId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  updatedBy?: Maybe<Scalars['String']['output']>;
  ward?: Maybe<CatArea>;
  wardCode?: Maybe<Scalars['String']['output']>;
  wardId?: Maybe<Scalars['String']['output']>;
};

export type BidPackageCount = {
  __typename?: 'BidPackageCount';
  bidNotifications: Scalars['Int']['output'];
  bidPackageLots: Scalars['Int']['output'];
  petitions: Scalars['Int']['output'];
};

export type BidPackageCreateInput = {
  bidEstimatePrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidField?: InputMaybe<CatBidFieldCreateNestedOneWithoutBidPackagesInput>;
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidForm?: InputMaybe<CatBidFormCreateNestedOneWithoutBidPackagesInput>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidMode?: InputMaybe<CatBidModeCreateNestedOneWithoutBidPackagesInput>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidNoImg?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  bidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutBidPackageInput>;
  bidPackageLots?: InputMaybe<BidPackageLotCreateNestedManyWithoutPackageInput>;
  bidPackageSymbol?: InputMaybe<Scalars['String']['input']>;
  bidPrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidPriceDetail?: InputMaybe<Scalars['String']['input']>;
  bidPriceEx?: InputMaybe<Scalars['String']['input']>;
  bidPriceOld?: InputMaybe<Scalars['String']['input']>;
  bidPriceUnit?: InputMaybe<Scalars['String']['input']>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanCreateNestedOneWithoutBidPackagesInput>;
  bidStartMonth?: InputMaybe<Scalars['Int']['input']>;
  bidStartQuarter?: InputMaybe<Scalars['String']['input']>;
  bidStartTime?: InputMaybe<Scalars['String']['input']>;
  bidStartUnit?: InputMaybe<Scalars['String']['input']>;
  bidStartYear?: InputMaybe<Scalars['Int']['input']>;
  capitalClassify?: InputMaybe<Scalars['String']['input']>;
  capitalDetail?: InputMaybe<Scalars['String']['input']>;
  capitalType?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractPeriod?: InputMaybe<Scalars['Int']['input']>;
  contractPeriodText?: InputMaybe<Scalars['String']['input']>;
  contractPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  contractType?: InputMaybe<CatContractTypeCreateNestedOneWithoutBidPackagesInput>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  district?: InputMaybe<CatAreaCreateNestedOneWithoutDistrictBidPackagesInput>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  exchangeDate?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isConcentrateShopping: Scalars['Boolean']['input'];
  isDomestic?: InputMaybe<Scalars['Boolean']['input']>;
  isInternet?: InputMaybe<Scalars['Boolean']['input']>;
  isMedicine?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiLot?: InputMaybe<Scalars['Boolean']['input']>;
  isOnlineShopping: Scalars['Boolean']['input'];
  isPrequalification?: InputMaybe<Scalars['Boolean']['input']>;
  linkNotificationInfo?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  petitions?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutPackageInput>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planCodeOld?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutBidPackagesInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  province?: InputMaybe<CatAreaCreateNestedOneWithoutProvinceBidPackagesInput>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  shoppingAgency?: InputMaybe<CatAgencyCreateNestedOneWithoutBidPackagesInput>;
  shoppingAgencyCode?: InputMaybe<Scalars['String']['input']>;
  supervisor?: InputMaybe<Scalars['String']['input']>;
  underUnit?: InputMaybe<CatMinistryCreateNestedOneWithoutBidPackagesInput>;
  underUnitCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  ward?: InputMaybe<CatAreaCreateNestedOneWithoutWardBidPackagesInput>;
  wardCode?: InputMaybe<Scalars['String']['input']>;
};

export type BidPackageCreateManyBidFieldInput = {
  bidEstimatePrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidFormId?: InputMaybe<Scalars['String']['input']>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidModeId?: InputMaybe<Scalars['String']['input']>;
  bidNoImg?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  bidPackageSymbol?: InputMaybe<Scalars['String']['input']>;
  bidPrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidPriceDetail?: InputMaybe<Scalars['String']['input']>;
  bidPriceEx?: InputMaybe<Scalars['String']['input']>;
  bidPriceOld?: InputMaybe<Scalars['String']['input']>;
  bidPriceUnit?: InputMaybe<Scalars['String']['input']>;
  bidStartMonth?: InputMaybe<Scalars['Int']['input']>;
  bidStartQuarter?: InputMaybe<Scalars['String']['input']>;
  bidStartTime?: InputMaybe<Scalars['String']['input']>;
  bidStartUnit?: InputMaybe<Scalars['String']['input']>;
  bidStartYear?: InputMaybe<Scalars['Int']['input']>;
  capitalClassify?: InputMaybe<Scalars['String']['input']>;
  capitalDetail?: InputMaybe<Scalars['String']['input']>;
  capitalType?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractPeriod?: InputMaybe<Scalars['Int']['input']>;
  contractPeriodText?: InputMaybe<Scalars['String']['input']>;
  contractPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  contractTypeId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  districtId?: InputMaybe<Scalars['String']['input']>;
  exchangeDate?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isConcentrateShopping: Scalars['Boolean']['input'];
  isDomestic?: InputMaybe<Scalars['Boolean']['input']>;
  isInternet?: InputMaybe<Scalars['Boolean']['input']>;
  isMedicine?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiLot?: InputMaybe<Scalars['Boolean']['input']>;
  isOnlineShopping: Scalars['Boolean']['input'];
  isPrequalification?: InputMaybe<Scalars['Boolean']['input']>;
  linkNotificationInfo?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planCodeOld?: InputMaybe<Scalars['String']['input']>;
  planId?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  processApplyId?: InputMaybe<Scalars['String']['input']>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  provinceId?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  shoppingAgencyCode?: InputMaybe<Scalars['String']['input']>;
  shoppingAgencyId?: InputMaybe<Scalars['String']['input']>;
  supervisor?: InputMaybe<Scalars['String']['input']>;
  underUnitCode?: InputMaybe<Scalars['String']['input']>;
  underUnitId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  wardCode?: InputMaybe<Scalars['String']['input']>;
  wardId?: InputMaybe<Scalars['String']['input']>;
};

export type BidPackageCreateManyBidFieldInputEnvelope = {
  data: Array<BidPackageCreateManyBidFieldInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidPackageCreateManyBidFormInput = {
  bidEstimatePrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidFieldId?: InputMaybe<Scalars['String']['input']>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidModeId?: InputMaybe<Scalars['String']['input']>;
  bidNoImg?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  bidPackageSymbol?: InputMaybe<Scalars['String']['input']>;
  bidPrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidPriceDetail?: InputMaybe<Scalars['String']['input']>;
  bidPriceEx?: InputMaybe<Scalars['String']['input']>;
  bidPriceOld?: InputMaybe<Scalars['String']['input']>;
  bidPriceUnit?: InputMaybe<Scalars['String']['input']>;
  bidStartMonth?: InputMaybe<Scalars['Int']['input']>;
  bidStartQuarter?: InputMaybe<Scalars['String']['input']>;
  bidStartTime?: InputMaybe<Scalars['String']['input']>;
  bidStartUnit?: InputMaybe<Scalars['String']['input']>;
  bidStartYear?: InputMaybe<Scalars['Int']['input']>;
  capitalClassify?: InputMaybe<Scalars['String']['input']>;
  capitalDetail?: InputMaybe<Scalars['String']['input']>;
  capitalType?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractPeriod?: InputMaybe<Scalars['Int']['input']>;
  contractPeriodText?: InputMaybe<Scalars['String']['input']>;
  contractPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  contractTypeId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  districtId?: InputMaybe<Scalars['String']['input']>;
  exchangeDate?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isConcentrateShopping: Scalars['Boolean']['input'];
  isDomestic?: InputMaybe<Scalars['Boolean']['input']>;
  isInternet?: InputMaybe<Scalars['Boolean']['input']>;
  isMedicine?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiLot?: InputMaybe<Scalars['Boolean']['input']>;
  isOnlineShopping: Scalars['Boolean']['input'];
  isPrequalification?: InputMaybe<Scalars['Boolean']['input']>;
  linkNotificationInfo?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planCodeOld?: InputMaybe<Scalars['String']['input']>;
  planId?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  processApplyId?: InputMaybe<Scalars['String']['input']>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  provinceId?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  shoppingAgencyCode?: InputMaybe<Scalars['String']['input']>;
  shoppingAgencyId?: InputMaybe<Scalars['String']['input']>;
  supervisor?: InputMaybe<Scalars['String']['input']>;
  underUnitCode?: InputMaybe<Scalars['String']['input']>;
  underUnitId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  wardCode?: InputMaybe<Scalars['String']['input']>;
  wardId?: InputMaybe<Scalars['String']['input']>;
};

export type BidPackageCreateManyBidFormInputEnvelope = {
  data: Array<BidPackageCreateManyBidFormInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidPackageCreateManyBidModeInput = {
  bidEstimatePrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidFieldId?: InputMaybe<Scalars['String']['input']>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidFormId?: InputMaybe<Scalars['String']['input']>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidNoImg?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  bidPackageSymbol?: InputMaybe<Scalars['String']['input']>;
  bidPrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidPriceDetail?: InputMaybe<Scalars['String']['input']>;
  bidPriceEx?: InputMaybe<Scalars['String']['input']>;
  bidPriceOld?: InputMaybe<Scalars['String']['input']>;
  bidPriceUnit?: InputMaybe<Scalars['String']['input']>;
  bidStartMonth?: InputMaybe<Scalars['Int']['input']>;
  bidStartQuarter?: InputMaybe<Scalars['String']['input']>;
  bidStartTime?: InputMaybe<Scalars['String']['input']>;
  bidStartUnit?: InputMaybe<Scalars['String']['input']>;
  bidStartYear?: InputMaybe<Scalars['Int']['input']>;
  capitalClassify?: InputMaybe<Scalars['String']['input']>;
  capitalDetail?: InputMaybe<Scalars['String']['input']>;
  capitalType?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractPeriod?: InputMaybe<Scalars['Int']['input']>;
  contractPeriodText?: InputMaybe<Scalars['String']['input']>;
  contractPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  contractTypeId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  districtId?: InputMaybe<Scalars['String']['input']>;
  exchangeDate?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isConcentrateShopping: Scalars['Boolean']['input'];
  isDomestic?: InputMaybe<Scalars['Boolean']['input']>;
  isInternet?: InputMaybe<Scalars['Boolean']['input']>;
  isMedicine?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiLot?: InputMaybe<Scalars['Boolean']['input']>;
  isOnlineShopping: Scalars['Boolean']['input'];
  isPrequalification?: InputMaybe<Scalars['Boolean']['input']>;
  linkNotificationInfo?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planCodeOld?: InputMaybe<Scalars['String']['input']>;
  planId?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  processApplyId?: InputMaybe<Scalars['String']['input']>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  provinceId?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  shoppingAgencyCode?: InputMaybe<Scalars['String']['input']>;
  shoppingAgencyId?: InputMaybe<Scalars['String']['input']>;
  supervisor?: InputMaybe<Scalars['String']['input']>;
  underUnitCode?: InputMaybe<Scalars['String']['input']>;
  underUnitId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  wardCode?: InputMaybe<Scalars['String']['input']>;
  wardId?: InputMaybe<Scalars['String']['input']>;
};

export type BidPackageCreateManyBidModeInputEnvelope = {
  data: Array<BidPackageCreateManyBidModeInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidPackageCreateManyBidSelectionPlanInput = {
  bidEstimatePrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidFieldId?: InputMaybe<Scalars['String']['input']>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidFormId?: InputMaybe<Scalars['String']['input']>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidModeId?: InputMaybe<Scalars['String']['input']>;
  bidNoImg?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  bidPackageSymbol?: InputMaybe<Scalars['String']['input']>;
  bidPrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidPriceDetail?: InputMaybe<Scalars['String']['input']>;
  bidPriceEx?: InputMaybe<Scalars['String']['input']>;
  bidPriceOld?: InputMaybe<Scalars['String']['input']>;
  bidPriceUnit?: InputMaybe<Scalars['String']['input']>;
  bidStartMonth?: InputMaybe<Scalars['Int']['input']>;
  bidStartQuarter?: InputMaybe<Scalars['String']['input']>;
  bidStartTime?: InputMaybe<Scalars['String']['input']>;
  bidStartUnit?: InputMaybe<Scalars['String']['input']>;
  bidStartYear?: InputMaybe<Scalars['Int']['input']>;
  capitalClassify?: InputMaybe<Scalars['String']['input']>;
  capitalDetail?: InputMaybe<Scalars['String']['input']>;
  capitalType?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractPeriod?: InputMaybe<Scalars['Int']['input']>;
  contractPeriodText?: InputMaybe<Scalars['String']['input']>;
  contractPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  contractTypeId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  districtId?: InputMaybe<Scalars['String']['input']>;
  exchangeDate?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isConcentrateShopping: Scalars['Boolean']['input'];
  isDomestic?: InputMaybe<Scalars['Boolean']['input']>;
  isInternet?: InputMaybe<Scalars['Boolean']['input']>;
  isMedicine?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiLot?: InputMaybe<Scalars['Boolean']['input']>;
  isOnlineShopping: Scalars['Boolean']['input'];
  isPrequalification?: InputMaybe<Scalars['Boolean']['input']>;
  linkNotificationInfo?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planCodeOld?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  processApplyId?: InputMaybe<Scalars['String']['input']>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  provinceId?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  shoppingAgencyCode?: InputMaybe<Scalars['String']['input']>;
  shoppingAgencyId?: InputMaybe<Scalars['String']['input']>;
  supervisor?: InputMaybe<Scalars['String']['input']>;
  underUnitCode?: InputMaybe<Scalars['String']['input']>;
  underUnitId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  wardCode?: InputMaybe<Scalars['String']['input']>;
  wardId?: InputMaybe<Scalars['String']['input']>;
};

export type BidPackageCreateManyBidSelectionPlanInputEnvelope = {
  data: Array<BidPackageCreateManyBidSelectionPlanInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidPackageCreateManyContractTypeInput = {
  bidEstimatePrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidFieldId?: InputMaybe<Scalars['String']['input']>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidFormId?: InputMaybe<Scalars['String']['input']>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidModeId?: InputMaybe<Scalars['String']['input']>;
  bidNoImg?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  bidPackageSymbol?: InputMaybe<Scalars['String']['input']>;
  bidPrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidPriceDetail?: InputMaybe<Scalars['String']['input']>;
  bidPriceEx?: InputMaybe<Scalars['String']['input']>;
  bidPriceOld?: InputMaybe<Scalars['String']['input']>;
  bidPriceUnit?: InputMaybe<Scalars['String']['input']>;
  bidStartMonth?: InputMaybe<Scalars['Int']['input']>;
  bidStartQuarter?: InputMaybe<Scalars['String']['input']>;
  bidStartTime?: InputMaybe<Scalars['String']['input']>;
  bidStartUnit?: InputMaybe<Scalars['String']['input']>;
  bidStartYear?: InputMaybe<Scalars['Int']['input']>;
  capitalClassify?: InputMaybe<Scalars['String']['input']>;
  capitalDetail?: InputMaybe<Scalars['String']['input']>;
  capitalType?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractPeriod?: InputMaybe<Scalars['Int']['input']>;
  contractPeriodText?: InputMaybe<Scalars['String']['input']>;
  contractPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  districtId?: InputMaybe<Scalars['String']['input']>;
  exchangeDate?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isConcentrateShopping: Scalars['Boolean']['input'];
  isDomestic?: InputMaybe<Scalars['Boolean']['input']>;
  isInternet?: InputMaybe<Scalars['Boolean']['input']>;
  isMedicine?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiLot?: InputMaybe<Scalars['Boolean']['input']>;
  isOnlineShopping: Scalars['Boolean']['input'];
  isPrequalification?: InputMaybe<Scalars['Boolean']['input']>;
  linkNotificationInfo?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planCodeOld?: InputMaybe<Scalars['String']['input']>;
  planId?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  processApplyId?: InputMaybe<Scalars['String']['input']>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  provinceId?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  shoppingAgencyCode?: InputMaybe<Scalars['String']['input']>;
  shoppingAgencyId?: InputMaybe<Scalars['String']['input']>;
  supervisor?: InputMaybe<Scalars['String']['input']>;
  underUnitCode?: InputMaybe<Scalars['String']['input']>;
  underUnitId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  wardCode?: InputMaybe<Scalars['String']['input']>;
  wardId?: InputMaybe<Scalars['String']['input']>;
};

export type BidPackageCreateManyContractTypeInputEnvelope = {
  data: Array<BidPackageCreateManyContractTypeInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidPackageCreateManyDistrictInput = {
  bidEstimatePrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidFieldId?: InputMaybe<Scalars['String']['input']>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidFormId?: InputMaybe<Scalars['String']['input']>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidModeId?: InputMaybe<Scalars['String']['input']>;
  bidNoImg?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  bidPackageSymbol?: InputMaybe<Scalars['String']['input']>;
  bidPrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidPriceDetail?: InputMaybe<Scalars['String']['input']>;
  bidPriceEx?: InputMaybe<Scalars['String']['input']>;
  bidPriceOld?: InputMaybe<Scalars['String']['input']>;
  bidPriceUnit?: InputMaybe<Scalars['String']['input']>;
  bidStartMonth?: InputMaybe<Scalars['Int']['input']>;
  bidStartQuarter?: InputMaybe<Scalars['String']['input']>;
  bidStartTime?: InputMaybe<Scalars['String']['input']>;
  bidStartUnit?: InputMaybe<Scalars['String']['input']>;
  bidStartYear?: InputMaybe<Scalars['Int']['input']>;
  capitalClassify?: InputMaybe<Scalars['String']['input']>;
  capitalDetail?: InputMaybe<Scalars['String']['input']>;
  capitalType?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractPeriod?: InputMaybe<Scalars['Int']['input']>;
  contractPeriodText?: InputMaybe<Scalars['String']['input']>;
  contractPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  contractTypeId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  exchangeDate?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isConcentrateShopping: Scalars['Boolean']['input'];
  isDomestic?: InputMaybe<Scalars['Boolean']['input']>;
  isInternet?: InputMaybe<Scalars['Boolean']['input']>;
  isMedicine?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiLot?: InputMaybe<Scalars['Boolean']['input']>;
  isOnlineShopping: Scalars['Boolean']['input'];
  isPrequalification?: InputMaybe<Scalars['Boolean']['input']>;
  linkNotificationInfo?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planCodeOld?: InputMaybe<Scalars['String']['input']>;
  planId?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  processApplyId?: InputMaybe<Scalars['String']['input']>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  provinceId?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  shoppingAgencyCode?: InputMaybe<Scalars['String']['input']>;
  shoppingAgencyId?: InputMaybe<Scalars['String']['input']>;
  supervisor?: InputMaybe<Scalars['String']['input']>;
  underUnitCode?: InputMaybe<Scalars['String']['input']>;
  underUnitId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  wardCode?: InputMaybe<Scalars['String']['input']>;
  wardId?: InputMaybe<Scalars['String']['input']>;
};

export type BidPackageCreateManyDistrictInputEnvelope = {
  data: Array<BidPackageCreateManyDistrictInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidPackageCreateManyProcessApplyInput = {
  bidEstimatePrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidFieldId?: InputMaybe<Scalars['String']['input']>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidFormId?: InputMaybe<Scalars['String']['input']>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidModeId?: InputMaybe<Scalars['String']['input']>;
  bidNoImg?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  bidPackageSymbol?: InputMaybe<Scalars['String']['input']>;
  bidPrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidPriceDetail?: InputMaybe<Scalars['String']['input']>;
  bidPriceEx?: InputMaybe<Scalars['String']['input']>;
  bidPriceOld?: InputMaybe<Scalars['String']['input']>;
  bidPriceUnit?: InputMaybe<Scalars['String']['input']>;
  bidStartMonth?: InputMaybe<Scalars['Int']['input']>;
  bidStartQuarter?: InputMaybe<Scalars['String']['input']>;
  bidStartTime?: InputMaybe<Scalars['String']['input']>;
  bidStartUnit?: InputMaybe<Scalars['String']['input']>;
  bidStartYear?: InputMaybe<Scalars['Int']['input']>;
  capitalClassify?: InputMaybe<Scalars['String']['input']>;
  capitalDetail?: InputMaybe<Scalars['String']['input']>;
  capitalType?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractPeriod?: InputMaybe<Scalars['Int']['input']>;
  contractPeriodText?: InputMaybe<Scalars['String']['input']>;
  contractPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  contractTypeId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  districtId?: InputMaybe<Scalars['String']['input']>;
  exchangeDate?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isConcentrateShopping: Scalars['Boolean']['input'];
  isDomestic?: InputMaybe<Scalars['Boolean']['input']>;
  isInternet?: InputMaybe<Scalars['Boolean']['input']>;
  isMedicine?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiLot?: InputMaybe<Scalars['Boolean']['input']>;
  isOnlineShopping: Scalars['Boolean']['input'];
  isPrequalification?: InputMaybe<Scalars['Boolean']['input']>;
  linkNotificationInfo?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planCodeOld?: InputMaybe<Scalars['String']['input']>;
  planId?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  provinceId?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  shoppingAgencyCode?: InputMaybe<Scalars['String']['input']>;
  shoppingAgencyId?: InputMaybe<Scalars['String']['input']>;
  supervisor?: InputMaybe<Scalars['String']['input']>;
  underUnitCode?: InputMaybe<Scalars['String']['input']>;
  underUnitId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  wardCode?: InputMaybe<Scalars['String']['input']>;
  wardId?: InputMaybe<Scalars['String']['input']>;
};

export type BidPackageCreateManyProcessApplyInputEnvelope = {
  data: Array<BidPackageCreateManyProcessApplyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidPackageCreateManyProvinceInput = {
  bidEstimatePrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidFieldId?: InputMaybe<Scalars['String']['input']>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidFormId?: InputMaybe<Scalars['String']['input']>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidModeId?: InputMaybe<Scalars['String']['input']>;
  bidNoImg?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  bidPackageSymbol?: InputMaybe<Scalars['String']['input']>;
  bidPrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidPriceDetail?: InputMaybe<Scalars['String']['input']>;
  bidPriceEx?: InputMaybe<Scalars['String']['input']>;
  bidPriceOld?: InputMaybe<Scalars['String']['input']>;
  bidPriceUnit?: InputMaybe<Scalars['String']['input']>;
  bidStartMonth?: InputMaybe<Scalars['Int']['input']>;
  bidStartQuarter?: InputMaybe<Scalars['String']['input']>;
  bidStartTime?: InputMaybe<Scalars['String']['input']>;
  bidStartUnit?: InputMaybe<Scalars['String']['input']>;
  bidStartYear?: InputMaybe<Scalars['Int']['input']>;
  capitalClassify?: InputMaybe<Scalars['String']['input']>;
  capitalDetail?: InputMaybe<Scalars['String']['input']>;
  capitalType?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractPeriod?: InputMaybe<Scalars['Int']['input']>;
  contractPeriodText?: InputMaybe<Scalars['String']['input']>;
  contractPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  contractTypeId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  districtId?: InputMaybe<Scalars['String']['input']>;
  exchangeDate?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isConcentrateShopping: Scalars['Boolean']['input'];
  isDomestic?: InputMaybe<Scalars['Boolean']['input']>;
  isInternet?: InputMaybe<Scalars['Boolean']['input']>;
  isMedicine?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiLot?: InputMaybe<Scalars['Boolean']['input']>;
  isOnlineShopping: Scalars['Boolean']['input'];
  isPrequalification?: InputMaybe<Scalars['Boolean']['input']>;
  linkNotificationInfo?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planCodeOld?: InputMaybe<Scalars['String']['input']>;
  planId?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  processApplyId?: InputMaybe<Scalars['String']['input']>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  shoppingAgencyCode?: InputMaybe<Scalars['String']['input']>;
  shoppingAgencyId?: InputMaybe<Scalars['String']['input']>;
  supervisor?: InputMaybe<Scalars['String']['input']>;
  underUnitCode?: InputMaybe<Scalars['String']['input']>;
  underUnitId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  wardCode?: InputMaybe<Scalars['String']['input']>;
  wardId?: InputMaybe<Scalars['String']['input']>;
};

export type BidPackageCreateManyProvinceInputEnvelope = {
  data: Array<BidPackageCreateManyProvinceInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidPackageCreateManyWardInput = {
  bidEstimatePrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidFieldId?: InputMaybe<Scalars['String']['input']>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidFormId?: InputMaybe<Scalars['String']['input']>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidModeId?: InputMaybe<Scalars['String']['input']>;
  bidNoImg?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  bidPackageSymbol?: InputMaybe<Scalars['String']['input']>;
  bidPrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidPriceDetail?: InputMaybe<Scalars['String']['input']>;
  bidPriceEx?: InputMaybe<Scalars['String']['input']>;
  bidPriceOld?: InputMaybe<Scalars['String']['input']>;
  bidPriceUnit?: InputMaybe<Scalars['String']['input']>;
  bidStartMonth?: InputMaybe<Scalars['Int']['input']>;
  bidStartQuarter?: InputMaybe<Scalars['String']['input']>;
  bidStartTime?: InputMaybe<Scalars['String']['input']>;
  bidStartUnit?: InputMaybe<Scalars['String']['input']>;
  bidStartYear?: InputMaybe<Scalars['Int']['input']>;
  capitalClassify?: InputMaybe<Scalars['String']['input']>;
  capitalDetail?: InputMaybe<Scalars['String']['input']>;
  capitalType?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractPeriod?: InputMaybe<Scalars['Int']['input']>;
  contractPeriodText?: InputMaybe<Scalars['String']['input']>;
  contractPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  contractTypeId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  districtId?: InputMaybe<Scalars['String']['input']>;
  exchangeDate?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isConcentrateShopping: Scalars['Boolean']['input'];
  isDomestic?: InputMaybe<Scalars['Boolean']['input']>;
  isInternet?: InputMaybe<Scalars['Boolean']['input']>;
  isMedicine?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiLot?: InputMaybe<Scalars['Boolean']['input']>;
  isOnlineShopping: Scalars['Boolean']['input'];
  isPrequalification?: InputMaybe<Scalars['Boolean']['input']>;
  linkNotificationInfo?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planCodeOld?: InputMaybe<Scalars['String']['input']>;
  planId?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  processApplyId?: InputMaybe<Scalars['String']['input']>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  provinceId?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  shoppingAgencyCode?: InputMaybe<Scalars['String']['input']>;
  shoppingAgencyId?: InputMaybe<Scalars['String']['input']>;
  supervisor?: InputMaybe<Scalars['String']['input']>;
  underUnitCode?: InputMaybe<Scalars['String']['input']>;
  underUnitId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  wardCode?: InputMaybe<Scalars['String']['input']>;
};

export type BidPackageCreateManyWardInputEnvelope = {
  data: Array<BidPackageCreateManyWardInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidPackageCreateNestedManyWithoutBidFieldInput = {
  connect?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidPackageCreateOrConnectWithoutBidFieldInput>>;
  create?: InputMaybe<Array<BidPackageCreateWithoutBidFieldInput>>;
  createMany?: InputMaybe<BidPackageCreateManyBidFieldInputEnvelope>;
};

export type BidPackageCreateNestedManyWithoutBidFormInput = {
  connect?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidPackageCreateOrConnectWithoutBidFormInput>>;
  create?: InputMaybe<Array<BidPackageCreateWithoutBidFormInput>>;
  createMany?: InputMaybe<BidPackageCreateManyBidFormInputEnvelope>;
};

export type BidPackageCreateNestedManyWithoutBidModeInput = {
  connect?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidPackageCreateOrConnectWithoutBidModeInput>>;
  create?: InputMaybe<Array<BidPackageCreateWithoutBidModeInput>>;
  createMany?: InputMaybe<BidPackageCreateManyBidModeInputEnvelope>;
};

export type BidPackageCreateNestedManyWithoutBidSelectionPlanInput = {
  connect?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidPackageCreateOrConnectWithoutBidSelectionPlanInput>>;
  create?: InputMaybe<Array<BidPackageCreateWithoutBidSelectionPlanInput>>;
  createMany?: InputMaybe<BidPackageCreateManyBidSelectionPlanInputEnvelope>;
};

export type BidPackageCreateNestedManyWithoutContractTypeInput = {
  connect?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidPackageCreateOrConnectWithoutContractTypeInput>>;
  create?: InputMaybe<Array<BidPackageCreateWithoutContractTypeInput>>;
  createMany?: InputMaybe<BidPackageCreateManyContractTypeInputEnvelope>;
};

export type BidPackageCreateNestedManyWithoutDistrictInput = {
  connect?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidPackageCreateOrConnectWithoutDistrictInput>>;
  create?: InputMaybe<Array<BidPackageCreateWithoutDistrictInput>>;
  createMany?: InputMaybe<BidPackageCreateManyDistrictInputEnvelope>;
};

export type BidPackageCreateNestedManyWithoutProcessApplyInput = {
  connect?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidPackageCreateOrConnectWithoutProcessApplyInput>>;
  create?: InputMaybe<Array<BidPackageCreateWithoutProcessApplyInput>>;
  createMany?: InputMaybe<BidPackageCreateManyProcessApplyInputEnvelope>;
};

export type BidPackageCreateNestedManyWithoutProvinceInput = {
  connect?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidPackageCreateOrConnectWithoutProvinceInput>>;
  create?: InputMaybe<Array<BidPackageCreateWithoutProvinceInput>>;
  createMany?: InputMaybe<BidPackageCreateManyProvinceInputEnvelope>;
};

export type BidPackageCreateNestedManyWithoutWardInput = {
  connect?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidPackageCreateOrConnectWithoutWardInput>>;
  create?: InputMaybe<Array<BidPackageCreateWithoutWardInput>>;
  createMany?: InputMaybe<BidPackageCreateManyWardInputEnvelope>;
};

export type BidPackageCreateNestedOneWithoutBidNotificationsInput = {
  connect?: InputMaybe<BidPackageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidPackageCreateOrConnectWithoutBidNotificationsInput>;
  create?: InputMaybe<BidPackageCreateWithoutBidNotificationsInput>;
};

export type BidPackageCreateNestedOneWithoutBidPackageLotsInput = {
  connect?: InputMaybe<BidPackageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidPackageCreateOrConnectWithoutBidPackageLotsInput>;
  create?: InputMaybe<BidPackageCreateWithoutBidPackageLotsInput>;
};

export type BidPackageCreateNestedOneWithoutPetitionsInput = {
  connect?: InputMaybe<BidPackageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidPackageCreateOrConnectWithoutPetitionsInput>;
  create?: InputMaybe<BidPackageCreateWithoutPetitionsInput>;
};

export type BidPackageCreateOrConnectWithoutBidFieldInput = {
  create: BidPackageCreateWithoutBidFieldInput;
  where: BidPackageWhereUniqueInput;
};

export type BidPackageCreateOrConnectWithoutBidFormInput = {
  create: BidPackageCreateWithoutBidFormInput;
  where: BidPackageWhereUniqueInput;
};

export type BidPackageCreateOrConnectWithoutBidModeInput = {
  create: BidPackageCreateWithoutBidModeInput;
  where: BidPackageWhereUniqueInput;
};

export type BidPackageCreateOrConnectWithoutBidNotificationsInput = {
  create: BidPackageCreateWithoutBidNotificationsInput;
  where: BidPackageWhereUniqueInput;
};

export type BidPackageCreateOrConnectWithoutBidPackageLotsInput = {
  create: BidPackageCreateWithoutBidPackageLotsInput;
  where: BidPackageWhereUniqueInput;
};

export type BidPackageCreateOrConnectWithoutBidSelectionPlanInput = {
  create: BidPackageCreateWithoutBidSelectionPlanInput;
  where: BidPackageWhereUniqueInput;
};

export type BidPackageCreateOrConnectWithoutContractTypeInput = {
  create: BidPackageCreateWithoutContractTypeInput;
  where: BidPackageWhereUniqueInput;
};

export type BidPackageCreateOrConnectWithoutDistrictInput = {
  create: BidPackageCreateWithoutDistrictInput;
  where: BidPackageWhereUniqueInput;
};

export type BidPackageCreateOrConnectWithoutPetitionsInput = {
  create: BidPackageCreateWithoutPetitionsInput;
  where: BidPackageWhereUniqueInput;
};

export type BidPackageCreateOrConnectWithoutProcessApplyInput = {
  create: BidPackageCreateWithoutProcessApplyInput;
  where: BidPackageWhereUniqueInput;
};

export type BidPackageCreateOrConnectWithoutProvinceInput = {
  create: BidPackageCreateWithoutProvinceInput;
  where: BidPackageWhereUniqueInput;
};

export type BidPackageCreateOrConnectWithoutWardInput = {
  create: BidPackageCreateWithoutWardInput;
  where: BidPackageWhereUniqueInput;
};

export type BidPackageCreateWithoutBidFieldInput = {
  bidEstimatePrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidForm?: InputMaybe<CatBidFormCreateNestedOneWithoutBidPackagesInput>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidMode?: InputMaybe<CatBidModeCreateNestedOneWithoutBidPackagesInput>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidNoImg?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  bidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutBidPackageInput>;
  bidPackageLots?: InputMaybe<BidPackageLotCreateNestedManyWithoutPackageInput>;
  bidPackageSymbol?: InputMaybe<Scalars['String']['input']>;
  bidPrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidPriceDetail?: InputMaybe<Scalars['String']['input']>;
  bidPriceEx?: InputMaybe<Scalars['String']['input']>;
  bidPriceOld?: InputMaybe<Scalars['String']['input']>;
  bidPriceUnit?: InputMaybe<Scalars['String']['input']>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanCreateNestedOneWithoutBidPackagesInput>;
  bidStartMonth?: InputMaybe<Scalars['Int']['input']>;
  bidStartQuarter?: InputMaybe<Scalars['String']['input']>;
  bidStartTime?: InputMaybe<Scalars['String']['input']>;
  bidStartUnit?: InputMaybe<Scalars['String']['input']>;
  bidStartYear?: InputMaybe<Scalars['Int']['input']>;
  capitalClassify?: InputMaybe<Scalars['String']['input']>;
  capitalDetail?: InputMaybe<Scalars['String']['input']>;
  capitalType?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractPeriod?: InputMaybe<Scalars['Int']['input']>;
  contractPeriodText?: InputMaybe<Scalars['String']['input']>;
  contractPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  contractType?: InputMaybe<CatContractTypeCreateNestedOneWithoutBidPackagesInput>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  district?: InputMaybe<CatAreaCreateNestedOneWithoutDistrictBidPackagesInput>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  exchangeDate?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isConcentrateShopping: Scalars['Boolean']['input'];
  isDomestic?: InputMaybe<Scalars['Boolean']['input']>;
  isInternet?: InputMaybe<Scalars['Boolean']['input']>;
  isMedicine?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiLot?: InputMaybe<Scalars['Boolean']['input']>;
  isOnlineShopping: Scalars['Boolean']['input'];
  isPrequalification?: InputMaybe<Scalars['Boolean']['input']>;
  linkNotificationInfo?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  petitions?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutPackageInput>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planCodeOld?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutBidPackagesInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  province?: InputMaybe<CatAreaCreateNestedOneWithoutProvinceBidPackagesInput>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  shoppingAgency?: InputMaybe<CatAgencyCreateNestedOneWithoutBidPackagesInput>;
  shoppingAgencyCode?: InputMaybe<Scalars['String']['input']>;
  supervisor?: InputMaybe<Scalars['String']['input']>;
  underUnit?: InputMaybe<CatMinistryCreateNestedOneWithoutBidPackagesInput>;
  underUnitCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  ward?: InputMaybe<CatAreaCreateNestedOneWithoutWardBidPackagesInput>;
  wardCode?: InputMaybe<Scalars['String']['input']>;
};

export type BidPackageCreateWithoutBidFormInput = {
  bidEstimatePrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidField?: InputMaybe<CatBidFieldCreateNestedOneWithoutBidPackagesInput>;
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidMode?: InputMaybe<CatBidModeCreateNestedOneWithoutBidPackagesInput>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidNoImg?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  bidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutBidPackageInput>;
  bidPackageLots?: InputMaybe<BidPackageLotCreateNestedManyWithoutPackageInput>;
  bidPackageSymbol?: InputMaybe<Scalars['String']['input']>;
  bidPrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidPriceDetail?: InputMaybe<Scalars['String']['input']>;
  bidPriceEx?: InputMaybe<Scalars['String']['input']>;
  bidPriceOld?: InputMaybe<Scalars['String']['input']>;
  bidPriceUnit?: InputMaybe<Scalars['String']['input']>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanCreateNestedOneWithoutBidPackagesInput>;
  bidStartMonth?: InputMaybe<Scalars['Int']['input']>;
  bidStartQuarter?: InputMaybe<Scalars['String']['input']>;
  bidStartTime?: InputMaybe<Scalars['String']['input']>;
  bidStartUnit?: InputMaybe<Scalars['String']['input']>;
  bidStartYear?: InputMaybe<Scalars['Int']['input']>;
  capitalClassify?: InputMaybe<Scalars['String']['input']>;
  capitalDetail?: InputMaybe<Scalars['String']['input']>;
  capitalType?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractPeriod?: InputMaybe<Scalars['Int']['input']>;
  contractPeriodText?: InputMaybe<Scalars['String']['input']>;
  contractPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  contractType?: InputMaybe<CatContractTypeCreateNestedOneWithoutBidPackagesInput>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  district?: InputMaybe<CatAreaCreateNestedOneWithoutDistrictBidPackagesInput>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  exchangeDate?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isConcentrateShopping: Scalars['Boolean']['input'];
  isDomestic?: InputMaybe<Scalars['Boolean']['input']>;
  isInternet?: InputMaybe<Scalars['Boolean']['input']>;
  isMedicine?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiLot?: InputMaybe<Scalars['Boolean']['input']>;
  isOnlineShopping: Scalars['Boolean']['input'];
  isPrequalification?: InputMaybe<Scalars['Boolean']['input']>;
  linkNotificationInfo?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  petitions?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutPackageInput>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planCodeOld?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutBidPackagesInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  province?: InputMaybe<CatAreaCreateNestedOneWithoutProvinceBidPackagesInput>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  shoppingAgency?: InputMaybe<CatAgencyCreateNestedOneWithoutBidPackagesInput>;
  shoppingAgencyCode?: InputMaybe<Scalars['String']['input']>;
  supervisor?: InputMaybe<Scalars['String']['input']>;
  underUnit?: InputMaybe<CatMinistryCreateNestedOneWithoutBidPackagesInput>;
  underUnitCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  ward?: InputMaybe<CatAreaCreateNestedOneWithoutWardBidPackagesInput>;
  wardCode?: InputMaybe<Scalars['String']['input']>;
};

export type BidPackageCreateWithoutBidModeInput = {
  bidEstimatePrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidField?: InputMaybe<CatBidFieldCreateNestedOneWithoutBidPackagesInput>;
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidForm?: InputMaybe<CatBidFormCreateNestedOneWithoutBidPackagesInput>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidNoImg?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  bidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutBidPackageInput>;
  bidPackageLots?: InputMaybe<BidPackageLotCreateNestedManyWithoutPackageInput>;
  bidPackageSymbol?: InputMaybe<Scalars['String']['input']>;
  bidPrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidPriceDetail?: InputMaybe<Scalars['String']['input']>;
  bidPriceEx?: InputMaybe<Scalars['String']['input']>;
  bidPriceOld?: InputMaybe<Scalars['String']['input']>;
  bidPriceUnit?: InputMaybe<Scalars['String']['input']>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanCreateNestedOneWithoutBidPackagesInput>;
  bidStartMonth?: InputMaybe<Scalars['Int']['input']>;
  bidStartQuarter?: InputMaybe<Scalars['String']['input']>;
  bidStartTime?: InputMaybe<Scalars['String']['input']>;
  bidStartUnit?: InputMaybe<Scalars['String']['input']>;
  bidStartYear?: InputMaybe<Scalars['Int']['input']>;
  capitalClassify?: InputMaybe<Scalars['String']['input']>;
  capitalDetail?: InputMaybe<Scalars['String']['input']>;
  capitalType?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractPeriod?: InputMaybe<Scalars['Int']['input']>;
  contractPeriodText?: InputMaybe<Scalars['String']['input']>;
  contractPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  contractType?: InputMaybe<CatContractTypeCreateNestedOneWithoutBidPackagesInput>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  district?: InputMaybe<CatAreaCreateNestedOneWithoutDistrictBidPackagesInput>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  exchangeDate?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isConcentrateShopping: Scalars['Boolean']['input'];
  isDomestic?: InputMaybe<Scalars['Boolean']['input']>;
  isInternet?: InputMaybe<Scalars['Boolean']['input']>;
  isMedicine?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiLot?: InputMaybe<Scalars['Boolean']['input']>;
  isOnlineShopping: Scalars['Boolean']['input'];
  isPrequalification?: InputMaybe<Scalars['Boolean']['input']>;
  linkNotificationInfo?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  petitions?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutPackageInput>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planCodeOld?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutBidPackagesInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  province?: InputMaybe<CatAreaCreateNestedOneWithoutProvinceBidPackagesInput>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  shoppingAgency?: InputMaybe<CatAgencyCreateNestedOneWithoutBidPackagesInput>;
  shoppingAgencyCode?: InputMaybe<Scalars['String']['input']>;
  supervisor?: InputMaybe<Scalars['String']['input']>;
  underUnit?: InputMaybe<CatMinistryCreateNestedOneWithoutBidPackagesInput>;
  underUnitCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  ward?: InputMaybe<CatAreaCreateNestedOneWithoutWardBidPackagesInput>;
  wardCode?: InputMaybe<Scalars['String']['input']>;
};

export type BidPackageCreateWithoutBidNotificationsInput = {
  bidEstimatePrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidField?: InputMaybe<CatBidFieldCreateNestedOneWithoutBidPackagesInput>;
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidForm?: InputMaybe<CatBidFormCreateNestedOneWithoutBidPackagesInput>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidMode?: InputMaybe<CatBidModeCreateNestedOneWithoutBidPackagesInput>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidNoImg?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  bidPackageLots?: InputMaybe<BidPackageLotCreateNestedManyWithoutPackageInput>;
  bidPackageSymbol?: InputMaybe<Scalars['String']['input']>;
  bidPrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidPriceDetail?: InputMaybe<Scalars['String']['input']>;
  bidPriceEx?: InputMaybe<Scalars['String']['input']>;
  bidPriceOld?: InputMaybe<Scalars['String']['input']>;
  bidPriceUnit?: InputMaybe<Scalars['String']['input']>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanCreateNestedOneWithoutBidPackagesInput>;
  bidStartMonth?: InputMaybe<Scalars['Int']['input']>;
  bidStartQuarter?: InputMaybe<Scalars['String']['input']>;
  bidStartTime?: InputMaybe<Scalars['String']['input']>;
  bidStartUnit?: InputMaybe<Scalars['String']['input']>;
  bidStartYear?: InputMaybe<Scalars['Int']['input']>;
  capitalClassify?: InputMaybe<Scalars['String']['input']>;
  capitalDetail?: InputMaybe<Scalars['String']['input']>;
  capitalType?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractPeriod?: InputMaybe<Scalars['Int']['input']>;
  contractPeriodText?: InputMaybe<Scalars['String']['input']>;
  contractPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  contractType?: InputMaybe<CatContractTypeCreateNestedOneWithoutBidPackagesInput>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  district?: InputMaybe<CatAreaCreateNestedOneWithoutDistrictBidPackagesInput>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  exchangeDate?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isConcentrateShopping: Scalars['Boolean']['input'];
  isDomestic?: InputMaybe<Scalars['Boolean']['input']>;
  isInternet?: InputMaybe<Scalars['Boolean']['input']>;
  isMedicine?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiLot?: InputMaybe<Scalars['Boolean']['input']>;
  isOnlineShopping: Scalars['Boolean']['input'];
  isPrequalification?: InputMaybe<Scalars['Boolean']['input']>;
  linkNotificationInfo?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  petitions?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutPackageInput>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planCodeOld?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutBidPackagesInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  province?: InputMaybe<CatAreaCreateNestedOneWithoutProvinceBidPackagesInput>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  shoppingAgency?: InputMaybe<CatAgencyCreateNestedOneWithoutBidPackagesInput>;
  shoppingAgencyCode?: InputMaybe<Scalars['String']['input']>;
  supervisor?: InputMaybe<Scalars['String']['input']>;
  underUnit?: InputMaybe<CatMinistryCreateNestedOneWithoutBidPackagesInput>;
  underUnitCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  ward?: InputMaybe<CatAreaCreateNestedOneWithoutWardBidPackagesInput>;
  wardCode?: InputMaybe<Scalars['String']['input']>;
};

export type BidPackageCreateWithoutBidPackageLotsInput = {
  bidEstimatePrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidField?: InputMaybe<CatBidFieldCreateNestedOneWithoutBidPackagesInput>;
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidForm?: InputMaybe<CatBidFormCreateNestedOneWithoutBidPackagesInput>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidMode?: InputMaybe<CatBidModeCreateNestedOneWithoutBidPackagesInput>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidNoImg?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  bidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutBidPackageInput>;
  bidPackageSymbol?: InputMaybe<Scalars['String']['input']>;
  bidPrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidPriceDetail?: InputMaybe<Scalars['String']['input']>;
  bidPriceEx?: InputMaybe<Scalars['String']['input']>;
  bidPriceOld?: InputMaybe<Scalars['String']['input']>;
  bidPriceUnit?: InputMaybe<Scalars['String']['input']>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanCreateNestedOneWithoutBidPackagesInput>;
  bidStartMonth?: InputMaybe<Scalars['Int']['input']>;
  bidStartQuarter?: InputMaybe<Scalars['String']['input']>;
  bidStartTime?: InputMaybe<Scalars['String']['input']>;
  bidStartUnit?: InputMaybe<Scalars['String']['input']>;
  bidStartYear?: InputMaybe<Scalars['Int']['input']>;
  capitalClassify?: InputMaybe<Scalars['String']['input']>;
  capitalDetail?: InputMaybe<Scalars['String']['input']>;
  capitalType?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractPeriod?: InputMaybe<Scalars['Int']['input']>;
  contractPeriodText?: InputMaybe<Scalars['String']['input']>;
  contractPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  contractType?: InputMaybe<CatContractTypeCreateNestedOneWithoutBidPackagesInput>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  district?: InputMaybe<CatAreaCreateNestedOneWithoutDistrictBidPackagesInput>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  exchangeDate?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isConcentrateShopping: Scalars['Boolean']['input'];
  isDomestic?: InputMaybe<Scalars['Boolean']['input']>;
  isInternet?: InputMaybe<Scalars['Boolean']['input']>;
  isMedicine?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiLot?: InputMaybe<Scalars['Boolean']['input']>;
  isOnlineShopping: Scalars['Boolean']['input'];
  isPrequalification?: InputMaybe<Scalars['Boolean']['input']>;
  linkNotificationInfo?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  petitions?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutPackageInput>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planCodeOld?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutBidPackagesInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  province?: InputMaybe<CatAreaCreateNestedOneWithoutProvinceBidPackagesInput>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  shoppingAgency?: InputMaybe<CatAgencyCreateNestedOneWithoutBidPackagesInput>;
  shoppingAgencyCode?: InputMaybe<Scalars['String']['input']>;
  supervisor?: InputMaybe<Scalars['String']['input']>;
  underUnit?: InputMaybe<CatMinistryCreateNestedOneWithoutBidPackagesInput>;
  underUnitCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  ward?: InputMaybe<CatAreaCreateNestedOneWithoutWardBidPackagesInput>;
  wardCode?: InputMaybe<Scalars['String']['input']>;
};

export type BidPackageCreateWithoutBidSelectionPlanInput = {
  bidEstimatePrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidField?: InputMaybe<CatBidFieldCreateNestedOneWithoutBidPackagesInput>;
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidForm?: InputMaybe<CatBidFormCreateNestedOneWithoutBidPackagesInput>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidMode?: InputMaybe<CatBidModeCreateNestedOneWithoutBidPackagesInput>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidNoImg?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  bidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutBidPackageInput>;
  bidPackageLots?: InputMaybe<BidPackageLotCreateNestedManyWithoutPackageInput>;
  bidPackageSymbol?: InputMaybe<Scalars['String']['input']>;
  bidPrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidPriceDetail?: InputMaybe<Scalars['String']['input']>;
  bidPriceEx?: InputMaybe<Scalars['String']['input']>;
  bidPriceOld?: InputMaybe<Scalars['String']['input']>;
  bidPriceUnit?: InputMaybe<Scalars['String']['input']>;
  bidStartMonth?: InputMaybe<Scalars['Int']['input']>;
  bidStartQuarter?: InputMaybe<Scalars['String']['input']>;
  bidStartTime?: InputMaybe<Scalars['String']['input']>;
  bidStartUnit?: InputMaybe<Scalars['String']['input']>;
  bidStartYear?: InputMaybe<Scalars['Int']['input']>;
  capitalClassify?: InputMaybe<Scalars['String']['input']>;
  capitalDetail?: InputMaybe<Scalars['String']['input']>;
  capitalType?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractPeriod?: InputMaybe<Scalars['Int']['input']>;
  contractPeriodText?: InputMaybe<Scalars['String']['input']>;
  contractPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  contractType?: InputMaybe<CatContractTypeCreateNestedOneWithoutBidPackagesInput>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  district?: InputMaybe<CatAreaCreateNestedOneWithoutDistrictBidPackagesInput>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  exchangeDate?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isConcentrateShopping: Scalars['Boolean']['input'];
  isDomestic?: InputMaybe<Scalars['Boolean']['input']>;
  isInternet?: InputMaybe<Scalars['Boolean']['input']>;
  isMedicine?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiLot?: InputMaybe<Scalars['Boolean']['input']>;
  isOnlineShopping: Scalars['Boolean']['input'];
  isPrequalification?: InputMaybe<Scalars['Boolean']['input']>;
  linkNotificationInfo?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  petitions?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutPackageInput>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planCodeOld?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutBidPackagesInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  province?: InputMaybe<CatAreaCreateNestedOneWithoutProvinceBidPackagesInput>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  shoppingAgency?: InputMaybe<CatAgencyCreateNestedOneWithoutBidPackagesInput>;
  shoppingAgencyCode?: InputMaybe<Scalars['String']['input']>;
  supervisor?: InputMaybe<Scalars['String']['input']>;
  underUnit?: InputMaybe<CatMinistryCreateNestedOneWithoutBidPackagesInput>;
  underUnitCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  ward?: InputMaybe<CatAreaCreateNestedOneWithoutWardBidPackagesInput>;
  wardCode?: InputMaybe<Scalars['String']['input']>;
};

export type BidPackageCreateWithoutContractTypeInput = {
  bidEstimatePrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidField?: InputMaybe<CatBidFieldCreateNestedOneWithoutBidPackagesInput>;
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidForm?: InputMaybe<CatBidFormCreateNestedOneWithoutBidPackagesInput>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidMode?: InputMaybe<CatBidModeCreateNestedOneWithoutBidPackagesInput>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidNoImg?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  bidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutBidPackageInput>;
  bidPackageLots?: InputMaybe<BidPackageLotCreateNestedManyWithoutPackageInput>;
  bidPackageSymbol?: InputMaybe<Scalars['String']['input']>;
  bidPrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidPriceDetail?: InputMaybe<Scalars['String']['input']>;
  bidPriceEx?: InputMaybe<Scalars['String']['input']>;
  bidPriceOld?: InputMaybe<Scalars['String']['input']>;
  bidPriceUnit?: InputMaybe<Scalars['String']['input']>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanCreateNestedOneWithoutBidPackagesInput>;
  bidStartMonth?: InputMaybe<Scalars['Int']['input']>;
  bidStartQuarter?: InputMaybe<Scalars['String']['input']>;
  bidStartTime?: InputMaybe<Scalars['String']['input']>;
  bidStartUnit?: InputMaybe<Scalars['String']['input']>;
  bidStartYear?: InputMaybe<Scalars['Int']['input']>;
  capitalClassify?: InputMaybe<Scalars['String']['input']>;
  capitalDetail?: InputMaybe<Scalars['String']['input']>;
  capitalType?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractPeriod?: InputMaybe<Scalars['Int']['input']>;
  contractPeriodText?: InputMaybe<Scalars['String']['input']>;
  contractPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  district?: InputMaybe<CatAreaCreateNestedOneWithoutDistrictBidPackagesInput>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  exchangeDate?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isConcentrateShopping: Scalars['Boolean']['input'];
  isDomestic?: InputMaybe<Scalars['Boolean']['input']>;
  isInternet?: InputMaybe<Scalars['Boolean']['input']>;
  isMedicine?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiLot?: InputMaybe<Scalars['Boolean']['input']>;
  isOnlineShopping: Scalars['Boolean']['input'];
  isPrequalification?: InputMaybe<Scalars['Boolean']['input']>;
  linkNotificationInfo?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  petitions?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutPackageInput>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planCodeOld?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutBidPackagesInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  province?: InputMaybe<CatAreaCreateNestedOneWithoutProvinceBidPackagesInput>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  shoppingAgency?: InputMaybe<CatAgencyCreateNestedOneWithoutBidPackagesInput>;
  shoppingAgencyCode?: InputMaybe<Scalars['String']['input']>;
  supervisor?: InputMaybe<Scalars['String']['input']>;
  underUnit?: InputMaybe<CatMinistryCreateNestedOneWithoutBidPackagesInput>;
  underUnitCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  ward?: InputMaybe<CatAreaCreateNestedOneWithoutWardBidPackagesInput>;
  wardCode?: InputMaybe<Scalars['String']['input']>;
};

export type BidPackageCreateWithoutDistrictInput = {
  bidEstimatePrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidField?: InputMaybe<CatBidFieldCreateNestedOneWithoutBidPackagesInput>;
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidForm?: InputMaybe<CatBidFormCreateNestedOneWithoutBidPackagesInput>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidMode?: InputMaybe<CatBidModeCreateNestedOneWithoutBidPackagesInput>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidNoImg?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  bidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutBidPackageInput>;
  bidPackageLots?: InputMaybe<BidPackageLotCreateNestedManyWithoutPackageInput>;
  bidPackageSymbol?: InputMaybe<Scalars['String']['input']>;
  bidPrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidPriceDetail?: InputMaybe<Scalars['String']['input']>;
  bidPriceEx?: InputMaybe<Scalars['String']['input']>;
  bidPriceOld?: InputMaybe<Scalars['String']['input']>;
  bidPriceUnit?: InputMaybe<Scalars['String']['input']>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanCreateNestedOneWithoutBidPackagesInput>;
  bidStartMonth?: InputMaybe<Scalars['Int']['input']>;
  bidStartQuarter?: InputMaybe<Scalars['String']['input']>;
  bidStartTime?: InputMaybe<Scalars['String']['input']>;
  bidStartUnit?: InputMaybe<Scalars['String']['input']>;
  bidStartYear?: InputMaybe<Scalars['Int']['input']>;
  capitalClassify?: InputMaybe<Scalars['String']['input']>;
  capitalDetail?: InputMaybe<Scalars['String']['input']>;
  capitalType?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractPeriod?: InputMaybe<Scalars['Int']['input']>;
  contractPeriodText?: InputMaybe<Scalars['String']['input']>;
  contractPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  contractType?: InputMaybe<CatContractTypeCreateNestedOneWithoutBidPackagesInput>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  exchangeDate?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isConcentrateShopping: Scalars['Boolean']['input'];
  isDomestic?: InputMaybe<Scalars['Boolean']['input']>;
  isInternet?: InputMaybe<Scalars['Boolean']['input']>;
  isMedicine?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiLot?: InputMaybe<Scalars['Boolean']['input']>;
  isOnlineShopping: Scalars['Boolean']['input'];
  isPrequalification?: InputMaybe<Scalars['Boolean']['input']>;
  linkNotificationInfo?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  petitions?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutPackageInput>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planCodeOld?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutBidPackagesInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  province?: InputMaybe<CatAreaCreateNestedOneWithoutProvinceBidPackagesInput>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  shoppingAgency?: InputMaybe<CatAgencyCreateNestedOneWithoutBidPackagesInput>;
  shoppingAgencyCode?: InputMaybe<Scalars['String']['input']>;
  supervisor?: InputMaybe<Scalars['String']['input']>;
  underUnit?: InputMaybe<CatMinistryCreateNestedOneWithoutBidPackagesInput>;
  underUnitCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  ward?: InputMaybe<CatAreaCreateNestedOneWithoutWardBidPackagesInput>;
  wardCode?: InputMaybe<Scalars['String']['input']>;
};

export type BidPackageCreateWithoutPetitionsInput = {
  bidEstimatePrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidField?: InputMaybe<CatBidFieldCreateNestedOneWithoutBidPackagesInput>;
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidForm?: InputMaybe<CatBidFormCreateNestedOneWithoutBidPackagesInput>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidMode?: InputMaybe<CatBidModeCreateNestedOneWithoutBidPackagesInput>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidNoImg?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  bidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutBidPackageInput>;
  bidPackageLots?: InputMaybe<BidPackageLotCreateNestedManyWithoutPackageInput>;
  bidPackageSymbol?: InputMaybe<Scalars['String']['input']>;
  bidPrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidPriceDetail?: InputMaybe<Scalars['String']['input']>;
  bidPriceEx?: InputMaybe<Scalars['String']['input']>;
  bidPriceOld?: InputMaybe<Scalars['String']['input']>;
  bidPriceUnit?: InputMaybe<Scalars['String']['input']>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanCreateNestedOneWithoutBidPackagesInput>;
  bidStartMonth?: InputMaybe<Scalars['Int']['input']>;
  bidStartQuarter?: InputMaybe<Scalars['String']['input']>;
  bidStartTime?: InputMaybe<Scalars['String']['input']>;
  bidStartUnit?: InputMaybe<Scalars['String']['input']>;
  bidStartYear?: InputMaybe<Scalars['Int']['input']>;
  capitalClassify?: InputMaybe<Scalars['String']['input']>;
  capitalDetail?: InputMaybe<Scalars['String']['input']>;
  capitalType?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractPeriod?: InputMaybe<Scalars['Int']['input']>;
  contractPeriodText?: InputMaybe<Scalars['String']['input']>;
  contractPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  contractType?: InputMaybe<CatContractTypeCreateNestedOneWithoutBidPackagesInput>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  district?: InputMaybe<CatAreaCreateNestedOneWithoutDistrictBidPackagesInput>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  exchangeDate?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isConcentrateShopping: Scalars['Boolean']['input'];
  isDomestic?: InputMaybe<Scalars['Boolean']['input']>;
  isInternet?: InputMaybe<Scalars['Boolean']['input']>;
  isMedicine?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiLot?: InputMaybe<Scalars['Boolean']['input']>;
  isOnlineShopping: Scalars['Boolean']['input'];
  isPrequalification?: InputMaybe<Scalars['Boolean']['input']>;
  linkNotificationInfo?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planCodeOld?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutBidPackagesInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  province?: InputMaybe<CatAreaCreateNestedOneWithoutProvinceBidPackagesInput>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  shoppingAgency?: InputMaybe<CatAgencyCreateNestedOneWithoutBidPackagesInput>;
  shoppingAgencyCode?: InputMaybe<Scalars['String']['input']>;
  supervisor?: InputMaybe<Scalars['String']['input']>;
  underUnit?: InputMaybe<CatMinistryCreateNestedOneWithoutBidPackagesInput>;
  underUnitCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  ward?: InputMaybe<CatAreaCreateNestedOneWithoutWardBidPackagesInput>;
  wardCode?: InputMaybe<Scalars['String']['input']>;
};

export type BidPackageCreateWithoutProcessApplyInput = {
  bidEstimatePrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidField?: InputMaybe<CatBidFieldCreateNestedOneWithoutBidPackagesInput>;
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidForm?: InputMaybe<CatBidFormCreateNestedOneWithoutBidPackagesInput>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidMode?: InputMaybe<CatBidModeCreateNestedOneWithoutBidPackagesInput>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidNoImg?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  bidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutBidPackageInput>;
  bidPackageLots?: InputMaybe<BidPackageLotCreateNestedManyWithoutPackageInput>;
  bidPackageSymbol?: InputMaybe<Scalars['String']['input']>;
  bidPrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidPriceDetail?: InputMaybe<Scalars['String']['input']>;
  bidPriceEx?: InputMaybe<Scalars['String']['input']>;
  bidPriceOld?: InputMaybe<Scalars['String']['input']>;
  bidPriceUnit?: InputMaybe<Scalars['String']['input']>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanCreateNestedOneWithoutBidPackagesInput>;
  bidStartMonth?: InputMaybe<Scalars['Int']['input']>;
  bidStartQuarter?: InputMaybe<Scalars['String']['input']>;
  bidStartTime?: InputMaybe<Scalars['String']['input']>;
  bidStartUnit?: InputMaybe<Scalars['String']['input']>;
  bidStartYear?: InputMaybe<Scalars['Int']['input']>;
  capitalClassify?: InputMaybe<Scalars['String']['input']>;
  capitalDetail?: InputMaybe<Scalars['String']['input']>;
  capitalType?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractPeriod?: InputMaybe<Scalars['Int']['input']>;
  contractPeriodText?: InputMaybe<Scalars['String']['input']>;
  contractPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  contractType?: InputMaybe<CatContractTypeCreateNestedOneWithoutBidPackagesInput>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  district?: InputMaybe<CatAreaCreateNestedOneWithoutDistrictBidPackagesInput>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  exchangeDate?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isConcentrateShopping: Scalars['Boolean']['input'];
  isDomestic?: InputMaybe<Scalars['Boolean']['input']>;
  isInternet?: InputMaybe<Scalars['Boolean']['input']>;
  isMedicine?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiLot?: InputMaybe<Scalars['Boolean']['input']>;
  isOnlineShopping: Scalars['Boolean']['input'];
  isPrequalification?: InputMaybe<Scalars['Boolean']['input']>;
  linkNotificationInfo?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  petitions?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutPackageInput>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planCodeOld?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  province?: InputMaybe<CatAreaCreateNestedOneWithoutProvinceBidPackagesInput>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  shoppingAgency?: InputMaybe<CatAgencyCreateNestedOneWithoutBidPackagesInput>;
  shoppingAgencyCode?: InputMaybe<Scalars['String']['input']>;
  supervisor?: InputMaybe<Scalars['String']['input']>;
  underUnit?: InputMaybe<CatMinistryCreateNestedOneWithoutBidPackagesInput>;
  underUnitCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  ward?: InputMaybe<CatAreaCreateNestedOneWithoutWardBidPackagesInput>;
  wardCode?: InputMaybe<Scalars['String']['input']>;
};

export type BidPackageCreateWithoutProvinceInput = {
  bidEstimatePrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidField?: InputMaybe<CatBidFieldCreateNestedOneWithoutBidPackagesInput>;
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidForm?: InputMaybe<CatBidFormCreateNestedOneWithoutBidPackagesInput>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidMode?: InputMaybe<CatBidModeCreateNestedOneWithoutBidPackagesInput>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidNoImg?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  bidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutBidPackageInput>;
  bidPackageLots?: InputMaybe<BidPackageLotCreateNestedManyWithoutPackageInput>;
  bidPackageSymbol?: InputMaybe<Scalars['String']['input']>;
  bidPrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidPriceDetail?: InputMaybe<Scalars['String']['input']>;
  bidPriceEx?: InputMaybe<Scalars['String']['input']>;
  bidPriceOld?: InputMaybe<Scalars['String']['input']>;
  bidPriceUnit?: InputMaybe<Scalars['String']['input']>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanCreateNestedOneWithoutBidPackagesInput>;
  bidStartMonth?: InputMaybe<Scalars['Int']['input']>;
  bidStartQuarter?: InputMaybe<Scalars['String']['input']>;
  bidStartTime?: InputMaybe<Scalars['String']['input']>;
  bidStartUnit?: InputMaybe<Scalars['String']['input']>;
  bidStartYear?: InputMaybe<Scalars['Int']['input']>;
  capitalClassify?: InputMaybe<Scalars['String']['input']>;
  capitalDetail?: InputMaybe<Scalars['String']['input']>;
  capitalType?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractPeriod?: InputMaybe<Scalars['Int']['input']>;
  contractPeriodText?: InputMaybe<Scalars['String']['input']>;
  contractPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  contractType?: InputMaybe<CatContractTypeCreateNestedOneWithoutBidPackagesInput>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  district?: InputMaybe<CatAreaCreateNestedOneWithoutDistrictBidPackagesInput>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  exchangeDate?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isConcentrateShopping: Scalars['Boolean']['input'];
  isDomestic?: InputMaybe<Scalars['Boolean']['input']>;
  isInternet?: InputMaybe<Scalars['Boolean']['input']>;
  isMedicine?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiLot?: InputMaybe<Scalars['Boolean']['input']>;
  isOnlineShopping: Scalars['Boolean']['input'];
  isPrequalification?: InputMaybe<Scalars['Boolean']['input']>;
  linkNotificationInfo?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  petitions?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutPackageInput>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planCodeOld?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutBidPackagesInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  shoppingAgency?: InputMaybe<CatAgencyCreateNestedOneWithoutBidPackagesInput>;
  shoppingAgencyCode?: InputMaybe<Scalars['String']['input']>;
  supervisor?: InputMaybe<Scalars['String']['input']>;
  underUnit?: InputMaybe<CatMinistryCreateNestedOneWithoutBidPackagesInput>;
  underUnitCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  ward?: InputMaybe<CatAreaCreateNestedOneWithoutWardBidPackagesInput>;
  wardCode?: InputMaybe<Scalars['String']['input']>;
};

export type BidPackageCreateWithoutWardInput = {
  bidEstimatePrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidField?: InputMaybe<CatBidFieldCreateNestedOneWithoutBidPackagesInput>;
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidForm?: InputMaybe<CatBidFormCreateNestedOneWithoutBidPackagesInput>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidMode?: InputMaybe<CatBidModeCreateNestedOneWithoutBidPackagesInput>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidNoImg?: InputMaybe<Scalars['String']['input']>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  bidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutBidPackageInput>;
  bidPackageLots?: InputMaybe<BidPackageLotCreateNestedManyWithoutPackageInput>;
  bidPackageSymbol?: InputMaybe<Scalars['String']['input']>;
  bidPrice?: InputMaybe<Scalars['Decimal']['input']>;
  bidPriceDetail?: InputMaybe<Scalars['String']['input']>;
  bidPriceEx?: InputMaybe<Scalars['String']['input']>;
  bidPriceOld?: InputMaybe<Scalars['String']['input']>;
  bidPriceUnit?: InputMaybe<Scalars['String']['input']>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanCreateNestedOneWithoutBidPackagesInput>;
  bidStartMonth?: InputMaybe<Scalars['Int']['input']>;
  bidStartQuarter?: InputMaybe<Scalars['String']['input']>;
  bidStartTime?: InputMaybe<Scalars['String']['input']>;
  bidStartUnit?: InputMaybe<Scalars['String']['input']>;
  bidStartYear?: InputMaybe<Scalars['Int']['input']>;
  capitalClassify?: InputMaybe<Scalars['String']['input']>;
  capitalDetail?: InputMaybe<Scalars['String']['input']>;
  capitalType?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractPeriod?: InputMaybe<Scalars['Int']['input']>;
  contractPeriodText?: InputMaybe<Scalars['String']['input']>;
  contractPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  contractType?: InputMaybe<CatContractTypeCreateNestedOneWithoutBidPackagesInput>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  district?: InputMaybe<CatAreaCreateNestedOneWithoutDistrictBidPackagesInput>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  exchangeDate?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isConcentrateShopping: Scalars['Boolean']['input'];
  isDomestic?: InputMaybe<Scalars['Boolean']['input']>;
  isInternet?: InputMaybe<Scalars['Boolean']['input']>;
  isMedicine?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiLot?: InputMaybe<Scalars['Boolean']['input']>;
  isOnlineShopping: Scalars['Boolean']['input'];
  isPrequalification?: InputMaybe<Scalars['Boolean']['input']>;
  linkNotificationInfo?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  petitions?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutPackageInput>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planCodeOld?: InputMaybe<Scalars['String']['input']>;
  planVersion?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutBidPackagesInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  province?: InputMaybe<CatAreaCreateNestedOneWithoutProvinceBidPackagesInput>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['String']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  shoppingAgency?: InputMaybe<CatAgencyCreateNestedOneWithoutBidPackagesInput>;
  shoppingAgencyCode?: InputMaybe<Scalars['String']['input']>;
  supervisor?: InputMaybe<Scalars['String']['input']>;
  underUnit?: InputMaybe<CatMinistryCreateNestedOneWithoutBidPackagesInput>;
  underUnitCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  wardCode?: InputMaybe<Scalars['String']['input']>;
};

export type BidPackageListRelationFilter = {
  every?: InputMaybe<BidPackageWhereInput>;
  none?: InputMaybe<BidPackageWhereInput>;
  some?: InputMaybe<BidPackageWhereInput>;
};

export type BidPackageLot = {
  __typename?: 'BidPackageLot';
  _count: BidPackageLotCount;
  action?: Maybe<Scalars['String']['output']>;
  bidLotResults?: Maybe<Array<BidLotResult>>;
  code?: Maybe<Scalars['String']['output']>;
  contractPeriod?: Maybe<Scalars['Int']['output']>;
  contractPeriodUnit?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  dangBaoChe?: Maybe<Scalars['String']['output']>;
  deletedAt?: Maybe<Scalars['DateTime']['output']>;
  duongDung?: Maybe<Scalars['String']['output']>;
  estimatePrice?: Maybe<Scalars['String']['output']>;
  groupMedicine?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  medicineCode?: Maybe<Scalars['String']['output']>;
  medicines?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nongDo?: Maybe<Scalars['String']['output']>;
  package?: Maybe<BidPackage>;
  packageCode?: Maybe<Scalars['String']['output']>;
  packageId?: Maybe<Scalars['String']['output']>;
  price?: Maybe<Scalars['String']['output']>;
  pricePlan?: Maybe<Scalars['String']['output']>;
  quantity?: Maybe<Scalars['Int']['output']>;
  uom?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  updatedBy?: Maybe<Scalars['String']['output']>;
};

export type BidPackageLotConnection = {
  __typename?: 'BidPackageLotConnection';
  nodes?: Maybe<Array<BidPackageLot>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type BidPackageLotCount = {
  __typename?: 'BidPackageLotCount';
  bidLotResults: Scalars['Int']['output'];
};

export type BidPackageLotCreateInput = {
  action?: InputMaybe<Scalars['String']['input']>;
  bidLotResults?: InputMaybe<BidLotResultCreateNestedManyWithoutBidPackgeLotInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractPeriod?: InputMaybe<Scalars['Int']['input']>;
  contractPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  dangBaoChe?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  duongDung?: InputMaybe<Scalars['String']['input']>;
  estimatePrice?: InputMaybe<Scalars['String']['input']>;
  groupMedicine?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  medicineCode?: InputMaybe<Scalars['String']['input']>;
  medicines?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  nongDo?: InputMaybe<Scalars['String']['input']>;
  package?: InputMaybe<BidPackageCreateNestedOneWithoutBidPackageLotsInput>;
  packageCode?: InputMaybe<Scalars['String']['input']>;
  price?: InputMaybe<Scalars['String']['input']>;
  pricePlan?: InputMaybe<Scalars['String']['input']>;
  quantity?: InputMaybe<Scalars['Int']['input']>;
  uom?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type BidPackageLotCreateManyPackageInput = {
  action?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractPeriod?: InputMaybe<Scalars['Int']['input']>;
  contractPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  dangBaoChe?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  duongDung?: InputMaybe<Scalars['String']['input']>;
  estimatePrice?: InputMaybe<Scalars['String']['input']>;
  groupMedicine?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  medicineCode?: InputMaybe<Scalars['String']['input']>;
  medicines?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  nongDo?: InputMaybe<Scalars['String']['input']>;
  packageCode?: InputMaybe<Scalars['String']['input']>;
  price?: InputMaybe<Scalars['String']['input']>;
  pricePlan?: InputMaybe<Scalars['String']['input']>;
  quantity?: InputMaybe<Scalars['Int']['input']>;
  uom?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type BidPackageLotCreateManyPackageInputEnvelope = {
  data: Array<BidPackageLotCreateManyPackageInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidPackageLotCreateNestedManyWithoutPackageInput = {
  connect?: InputMaybe<Array<BidPackageLotWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidPackageLotCreateOrConnectWithoutPackageInput>>;
  create?: InputMaybe<Array<BidPackageLotCreateWithoutPackageInput>>;
  createMany?: InputMaybe<BidPackageLotCreateManyPackageInputEnvelope>;
};

export type BidPackageLotCreateNestedOneWithoutBidLotResultsInput = {
  connect?: InputMaybe<BidPackageLotWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidPackageLotCreateOrConnectWithoutBidLotResultsInput>;
  create?: InputMaybe<BidPackageLotCreateWithoutBidLotResultsInput>;
};

export type BidPackageLotCreateOrConnectWithoutBidLotResultsInput = {
  create: BidPackageLotCreateWithoutBidLotResultsInput;
  where: BidPackageLotWhereUniqueInput;
};

export type BidPackageLotCreateOrConnectWithoutPackageInput = {
  create: BidPackageLotCreateWithoutPackageInput;
  where: BidPackageLotWhereUniqueInput;
};

export type BidPackageLotCreateWithoutBidLotResultsInput = {
  action?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractPeriod?: InputMaybe<Scalars['Int']['input']>;
  contractPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  dangBaoChe?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  duongDung?: InputMaybe<Scalars['String']['input']>;
  estimatePrice?: InputMaybe<Scalars['String']['input']>;
  groupMedicine?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  medicineCode?: InputMaybe<Scalars['String']['input']>;
  medicines?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  nongDo?: InputMaybe<Scalars['String']['input']>;
  package?: InputMaybe<BidPackageCreateNestedOneWithoutBidPackageLotsInput>;
  packageCode?: InputMaybe<Scalars['String']['input']>;
  price?: InputMaybe<Scalars['String']['input']>;
  pricePlan?: InputMaybe<Scalars['String']['input']>;
  quantity?: InputMaybe<Scalars['Int']['input']>;
  uom?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type BidPackageLotCreateWithoutPackageInput = {
  action?: InputMaybe<Scalars['String']['input']>;
  bidLotResults?: InputMaybe<BidLotResultCreateNestedManyWithoutBidPackgeLotInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractPeriod?: InputMaybe<Scalars['Int']['input']>;
  contractPeriodUnit?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  dangBaoChe?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  duongDung?: InputMaybe<Scalars['String']['input']>;
  estimatePrice?: InputMaybe<Scalars['String']['input']>;
  groupMedicine?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  medicineCode?: InputMaybe<Scalars['String']['input']>;
  medicines?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  nongDo?: InputMaybe<Scalars['String']['input']>;
  packageCode?: InputMaybe<Scalars['String']['input']>;
  price?: InputMaybe<Scalars['String']['input']>;
  pricePlan?: InputMaybe<Scalars['String']['input']>;
  quantity?: InputMaybe<Scalars['Int']['input']>;
  uom?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type BidPackageLotListRelationFilter = {
  every?: InputMaybe<BidPackageLotWhereInput>;
  none?: InputMaybe<BidPackageLotWhereInput>;
  some?: InputMaybe<BidPackageLotWhereInput>;
};

export type BidPackageLotOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type BidPackageLotOrderByWithRelationInput = {
  action?: InputMaybe<SortOrderInput>;
  bidLotResults?: InputMaybe<BidLotResultOrderByRelationAggregateInput>;
  code?: InputMaybe<SortOrderInput>;
  contractPeriod?: InputMaybe<SortOrderInput>;
  contractPeriodUnit?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  createdBy?: InputMaybe<SortOrderInput>;
  dangBaoChe?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  duongDung?: InputMaybe<SortOrderInput>;
  estimatePrice?: InputMaybe<SortOrderInput>;
  groupMedicine?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  medicineCode?: InputMaybe<SortOrderInput>;
  medicines?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  nongDo?: InputMaybe<SortOrderInput>;
  package?: InputMaybe<BidPackageOrderByWithRelationInput>;
  packageCode?: InputMaybe<SortOrderInput>;
  packageId?: InputMaybe<SortOrderInput>;
  price?: InputMaybe<SortOrderInput>;
  pricePlan?: InputMaybe<SortOrderInput>;
  quantity?: InputMaybe<SortOrderInput>;
  uom?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  updatedBy?: InputMaybe<SortOrderInput>;
};

export enum BidPackageLotScalarFieldEnum {
  Action = 'action',
  Code = 'code',
  ContractPeriod = 'contractPeriod',
  ContractPeriodUnit = 'contractPeriodUnit',
  CreatedAt = 'createdAt',
  CreatedBy = 'createdBy',
  DangBaoChe = 'dangBaoChe',
  DeletedAt = 'deletedAt',
  DuongDung = 'duongDung',
  EstimatePrice = 'estimatePrice',
  GroupMedicine = 'groupMedicine',
  Id = 'id',
  MedicineCode = 'medicineCode',
  Medicines = 'medicines',
  Name = 'name',
  NongDo = 'nongDo',
  PackageCode = 'packageCode',
  PackageId = 'packageId',
  Price = 'price',
  PricePlan = 'pricePlan',
  Quantity = 'quantity',
  Uom = 'uom',
  UpdatedAt = 'updatedAt',
  UpdatedBy = 'updatedBy'
}

export type BidPackageLotScalarWhereInput = {
  AND?: InputMaybe<Array<BidPackageLotScalarWhereInput>>;
  NOT?: InputMaybe<Array<BidPackageLotScalarWhereInput>>;
  OR?: InputMaybe<Array<BidPackageLotScalarWhereInput>>;
  action?: InputMaybe<StringNullableFilter>;
  code?: InputMaybe<StringNullableFilter>;
  contractPeriod?: InputMaybe<IntNullableFilter>;
  contractPeriodUnit?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  dangBaoChe?: InputMaybe<StringNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  duongDung?: InputMaybe<StringNullableFilter>;
  estimatePrice?: InputMaybe<BigIntNullableFilter>;
  groupMedicine?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  medicineCode?: InputMaybe<StringNullableFilter>;
  medicines?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  nongDo?: InputMaybe<StringNullableFilter>;
  packageCode?: InputMaybe<StringNullableFilter>;
  packageId?: InputMaybe<StringNullableFilter>;
  price?: InputMaybe<BigIntNullableFilter>;
  pricePlan?: InputMaybe<StringNullableFilter>;
  quantity?: InputMaybe<IntNullableFilter>;
  uom?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type BidPackageLotUpdateInput = {
  action?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidLotResults?: InputMaybe<BidLotResultUpdateManyWithoutBidPackgeLotNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractPeriod?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  contractPeriodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  dangBaoChe?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  duongDung?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  estimatePrice?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  groupMedicine?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  medicineCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  medicines?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  nongDo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  package?: InputMaybe<BidPackageUpdateOneWithoutBidPackageLotsNestedInput>;
  packageCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  pricePlan?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  uom?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidPackageLotUpdateManyMutationInput = {
  action?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractPeriod?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  contractPeriodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  dangBaoChe?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  duongDung?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  estimatePrice?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  groupMedicine?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  medicineCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  medicines?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  nongDo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  packageCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  pricePlan?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  uom?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidPackageLotUpdateManyWithWhereWithoutPackageInput = {
  data: BidPackageLotUpdateManyMutationInput;
  where: BidPackageLotScalarWhereInput;
};

export type BidPackageLotUpdateManyWithoutPackageNestedInput = {
  connect?: InputMaybe<Array<BidPackageLotWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidPackageLotCreateOrConnectWithoutPackageInput>>;
  create?: InputMaybe<Array<BidPackageLotCreateWithoutPackageInput>>;
  createMany?: InputMaybe<BidPackageLotCreateManyPackageInputEnvelope>;
  delete?: InputMaybe<Array<BidPackageLotWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidPackageLotScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidPackageLotWhereUniqueInput>>;
  set?: InputMaybe<Array<BidPackageLotWhereUniqueInput>>;
  update?: InputMaybe<Array<BidPackageLotUpdateWithWhereUniqueWithoutPackageInput>>;
  updateMany?: InputMaybe<Array<BidPackageLotUpdateManyWithWhereWithoutPackageInput>>;
  upsert?: InputMaybe<Array<BidPackageLotUpsertWithWhereUniqueWithoutPackageInput>>;
};

export type BidPackageLotUpdateOneWithoutBidLotResultsNestedInput = {
  connect?: InputMaybe<BidPackageLotWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidPackageLotCreateOrConnectWithoutBidLotResultsInput>;
  create?: InputMaybe<BidPackageLotCreateWithoutBidLotResultsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<BidPackageLotUpdateWithoutBidLotResultsInput>;
  upsert?: InputMaybe<BidPackageLotUpsertWithoutBidLotResultsInput>;
};

export type BidPackageLotUpdateWithWhereUniqueWithoutPackageInput = {
  data: BidPackageLotUpdateWithoutPackageInput;
  where: BidPackageLotWhereUniqueInput;
};

export type BidPackageLotUpdateWithoutBidLotResultsInput = {
  action?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractPeriod?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  contractPeriodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  dangBaoChe?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  duongDung?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  estimatePrice?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  groupMedicine?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  medicineCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  medicines?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  nongDo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  package?: InputMaybe<BidPackageUpdateOneWithoutBidPackageLotsNestedInput>;
  packageCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  pricePlan?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  uom?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidPackageLotUpdateWithoutPackageInput = {
  action?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidLotResults?: InputMaybe<BidLotResultUpdateManyWithoutBidPackgeLotNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractPeriod?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  contractPeriodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  dangBaoChe?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  duongDung?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  estimatePrice?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  groupMedicine?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  medicineCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  medicines?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  nongDo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  packageCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  pricePlan?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  uom?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidPackageLotUpsertWithWhereUniqueWithoutPackageInput = {
  create: BidPackageLotCreateWithoutPackageInput;
  update: BidPackageLotUpdateWithoutPackageInput;
  where: BidPackageLotWhereUniqueInput;
};

export type BidPackageLotUpsertWithoutBidLotResultsInput = {
  create: BidPackageLotCreateWithoutBidLotResultsInput;
  update: BidPackageLotUpdateWithoutBidLotResultsInput;
};

export type BidPackageLotWhereInput = {
  AND?: InputMaybe<Array<BidPackageLotWhereInput>>;
  NOT?: InputMaybe<Array<BidPackageLotWhereInput>>;
  OR?: InputMaybe<Array<BidPackageLotWhereInput>>;
  action?: InputMaybe<StringNullableFilter>;
  bidLotResults?: InputMaybe<BidLotResultListRelationFilter>;
  code?: InputMaybe<StringNullableFilter>;
  contractPeriod?: InputMaybe<IntNullableFilter>;
  contractPeriodUnit?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  dangBaoChe?: InputMaybe<StringNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  duongDung?: InputMaybe<StringNullableFilter>;
  estimatePrice?: InputMaybe<BigIntNullableFilter>;
  groupMedicine?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  medicineCode?: InputMaybe<StringNullableFilter>;
  medicines?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  nongDo?: InputMaybe<StringNullableFilter>;
  package?: InputMaybe<BidPackageWhereInput>;
  packageCode?: InputMaybe<StringNullableFilter>;
  packageId?: InputMaybe<StringNullableFilter>;
  price?: InputMaybe<BigIntNullableFilter>;
  pricePlan?: InputMaybe<StringNullableFilter>;
  quantity?: InputMaybe<IntNullableFilter>;
  uom?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type BidPackageLotWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']['input']>;
};

export type BidPackageOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type BidPackageOrderByWithRelationInput = {
  bidEstimatePrice?: InputMaybe<SortOrderInput>;
  bidField?: InputMaybe<CatBidFieldOrderByWithRelationInput>;
  bidFieldCode?: InputMaybe<SortOrderInput>;
  bidFieldId?: InputMaybe<SortOrderInput>;
  bidForm?: InputMaybe<CatBidFormOrderByWithRelationInput>;
  bidFormCode?: InputMaybe<SortOrderInput>;
  bidFormId?: InputMaybe<SortOrderInput>;
  bidMode?: InputMaybe<CatBidModeOrderByWithRelationInput>;
  bidModeCode?: InputMaybe<SortOrderInput>;
  bidModeId?: InputMaybe<SortOrderInput>;
  bidNoImg?: InputMaybe<SortOrderInput>;
  bidNotificationCode?: InputMaybe<SortOrderInput>;
  bidNotificationVersion?: InputMaybe<SortOrderInput>;
  bidNotifications?: InputMaybe<BidNotificationOrderByRelationAggregateInput>;
  bidPackageLots?: InputMaybe<BidPackageLotOrderByRelationAggregateInput>;
  bidPackageSymbol?: InputMaybe<SortOrderInput>;
  bidPrice?: InputMaybe<SortOrderInput>;
  bidPriceDetail?: InputMaybe<SortOrderInput>;
  bidPriceEx?: InputMaybe<SortOrderInput>;
  bidPriceOld?: InputMaybe<SortOrderInput>;
  bidPriceUnit?: InputMaybe<SortOrderInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanOrderByWithRelationInput>;
  bidStartMonth?: InputMaybe<SortOrderInput>;
  bidStartQuarter?: InputMaybe<SortOrderInput>;
  bidStartTime?: InputMaybe<SortOrderInput>;
  bidStartUnit?: InputMaybe<SortOrderInput>;
  bidStartYear?: InputMaybe<SortOrderInput>;
  capitalClassify?: InputMaybe<SortOrderInput>;
  capitalDetail?: InputMaybe<SortOrderInput>;
  capitalType?: InputMaybe<SortOrderInput>;
  code?: InputMaybe<SortOrderInput>;
  contractPeriod?: InputMaybe<SortOrderInput>;
  contractPeriodText?: InputMaybe<SortOrderInput>;
  contractPeriodUnit?: InputMaybe<SortOrderInput>;
  contractType?: InputMaybe<CatContractTypeOrderByWithRelationInput>;
  contractTypeCode?: InputMaybe<SortOrderInput>;
  contractTypeId?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  createdBy?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  district?: InputMaybe<CatAreaOrderByWithRelationInput>;
  districtCode?: InputMaybe<SortOrderInput>;
  districtId?: InputMaybe<SortOrderInput>;
  exchangeDate?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  isConcentrateShopping?: InputMaybe<SortOrder>;
  isDomestic?: InputMaybe<SortOrder>;
  isInternet?: InputMaybe<SortOrder>;
  isMedicine?: InputMaybe<SortOrderInput>;
  isMultiLot?: InputMaybe<SortOrder>;
  isOnlineShopping?: InputMaybe<SortOrder>;
  isPrequalification?: InputMaybe<SortOrder>;
  linkNotificationInfo?: InputMaybe<SortOrderInput>;
  location?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  petitions?: InputMaybe<BidPetitionContractorOrderByRelationAggregateInput>;
  planCode?: InputMaybe<SortOrderInput>;
  planCodeOld?: InputMaybe<SortOrderInput>;
  planId?: InputMaybe<SortOrderInput>;
  planVersion?: InputMaybe<SortOrderInput>;
  processApply?: InputMaybe<CatProcessApplyOrderByWithRelationInput>;
  processApplyCode?: InputMaybe<SortOrderInput>;
  processApplyId?: InputMaybe<SortOrderInput>;
  province?: InputMaybe<CatAreaOrderByWithRelationInput>;
  provinceCode?: InputMaybe<SortOrderInput>;
  provinceId?: InputMaybe<SortOrderInput>;
  reciprocalCapital?: InputMaybe<SortOrderInput>;
  reciprocalCapitalUnit?: InputMaybe<SortOrderInput>;
  shoppingAgency?: InputMaybe<CatAgencyOrderByWithRelationInput>;
  shoppingAgencyCode?: InputMaybe<SortOrderInput>;
  shoppingAgencyId?: InputMaybe<SortOrderInput>;
  supervisor?: InputMaybe<SortOrderInput>;
  underUnit?: InputMaybe<CatMinistryOrderByWithRelationInput>;
  underUnitCode?: InputMaybe<SortOrderInput>;
  underUnitId?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  updatedBy?: InputMaybe<SortOrderInput>;
  ward?: InputMaybe<CatAreaOrderByWithRelationInput>;
  wardCode?: InputMaybe<SortOrderInput>;
  wardId?: InputMaybe<SortOrderInput>;
};

export enum BidPackageScalarFieldEnum {
  BidEstimatePrice = 'bidEstimatePrice',
  BidFieldCode = 'bidFieldCode',
  BidFieldId = 'bidFieldId',
  BidFormCode = 'bidFormCode',
  BidFormId = 'bidFormId',
  BidModeCode = 'bidModeCode',
  BidModeId = 'bidModeId',
  BidNoImg = 'bidNoImg',
  BidNotificationCode = 'bidNotificationCode',
  BidNotificationVersion = 'bidNotificationVersion',
  BidPackageSymbol = 'bidPackageSymbol',
  BidPrice = 'bidPrice',
  BidPriceDetail = 'bidPriceDetail',
  BidPriceEx = 'bidPriceEx',
  BidPriceOld = 'bidPriceOld',
  BidPriceUnit = 'bidPriceUnit',
  BidStartMonth = 'bidStartMonth',
  BidStartQuarter = 'bidStartQuarter',
  BidStartTime = 'bidStartTime',
  BidStartUnit = 'bidStartUnit',
  BidStartYear = 'bidStartYear',
  CapitalClassify = 'capitalClassify',
  CapitalDetail = 'capitalDetail',
  CapitalType = 'capitalType',
  Code = 'code',
  ContractPeriod = 'contractPeriod',
  ContractPeriodText = 'contractPeriodText',
  ContractPeriodUnit = 'contractPeriodUnit',
  ContractTypeCode = 'contractTypeCode',
  ContractTypeId = 'contractTypeId',
  CreatedAt = 'createdAt',
  CreatedBy = 'createdBy',
  DeletedAt = 'deletedAt',
  DistrictCode = 'districtCode',
  DistrictId = 'districtId',
  ExchangeDate = 'exchangeDate',
  Id = 'id',
  IsConcentrateShopping = 'isConcentrateShopping',
  IsDomestic = 'isDomestic',
  IsInternet = 'isInternet',
  IsMedicine = 'isMedicine',
  IsMultiLot = 'isMultiLot',
  IsOnlineShopping = 'isOnlineShopping',
  IsPrequalification = 'isPrequalification',
  LinkNotificationInfo = 'linkNotificationInfo',
  Location = 'location',
  Name = 'name',
  PlanCode = 'planCode',
  PlanCodeOld = 'planCodeOld',
  PlanId = 'planId',
  PlanVersion = 'planVersion',
  ProcessApplyCode = 'processApplyCode',
  ProcessApplyId = 'processApplyId',
  ProvinceCode = 'provinceCode',
  ProvinceId = 'provinceId',
  ReciprocalCapital = 'reciprocalCapital',
  ReciprocalCapitalUnit = 'reciprocalCapitalUnit',
  ShoppingAgencyCode = 'shoppingAgencyCode',
  ShoppingAgencyId = 'shoppingAgencyId',
  Supervisor = 'supervisor',
  UnderUnitCode = 'underUnitCode',
  UnderUnitId = 'underUnitId',
  UpdatedAt = 'updatedAt',
  UpdatedBy = 'updatedBy',
  WardCode = 'wardCode',
  WardId = 'wardId'
}

export type BidPackageScalarWhereInput = {
  AND?: InputMaybe<Array<BidPackageScalarWhereInput>>;
  NOT?: InputMaybe<Array<BidPackageScalarWhereInput>>;
  OR?: InputMaybe<Array<BidPackageScalarWhereInput>>;
  bidEstimatePrice?: InputMaybe<DecimalNullableFilter>;
  bidFieldCode?: InputMaybe<StringNullableFilter>;
  bidFieldId?: InputMaybe<StringNullableFilter>;
  bidFormCode?: InputMaybe<StringNullableFilter>;
  bidFormId?: InputMaybe<StringNullableFilter>;
  bidModeCode?: InputMaybe<StringNullableFilter>;
  bidModeId?: InputMaybe<StringNullableFilter>;
  bidNoImg?: InputMaybe<StringNullableFilter>;
  bidNotificationCode?: InputMaybe<StringNullableFilter>;
  bidNotificationVersion?: InputMaybe<StringNullableFilter>;
  bidPackageSymbol?: InputMaybe<StringNullableFilter>;
  bidPrice?: InputMaybe<DecimalNullableFilter>;
  bidPriceDetail?: InputMaybe<StringNullableFilter>;
  bidPriceEx?: InputMaybe<StringNullableFilter>;
  bidPriceOld?: InputMaybe<StringNullableFilter>;
  bidPriceUnit?: InputMaybe<StringNullableFilter>;
  bidStartMonth?: InputMaybe<IntNullableFilter>;
  bidStartQuarter?: InputMaybe<StringNullableFilter>;
  bidStartTime?: InputMaybe<StringNullableFilter>;
  bidStartUnit?: InputMaybe<StringNullableFilter>;
  bidStartYear?: InputMaybe<IntNullableFilter>;
  capitalClassify?: InputMaybe<StringNullableFilter>;
  capitalDetail?: InputMaybe<StringNullableFilter>;
  capitalType?: InputMaybe<StringNullableFilter>;
  code?: InputMaybe<StringNullableFilter>;
  contractPeriod?: InputMaybe<IntNullableFilter>;
  contractPeriodText?: InputMaybe<StringNullableFilter>;
  contractPeriodUnit?: InputMaybe<StringNullableFilter>;
  contractTypeCode?: InputMaybe<StringNullableFilter>;
  contractTypeId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  districtCode?: InputMaybe<StringNullableFilter>;
  districtId?: InputMaybe<StringNullableFilter>;
  exchangeDate?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isConcentrateShopping?: InputMaybe<BoolFilter>;
  isDomestic?: InputMaybe<BoolFilter>;
  isInternet?: InputMaybe<BoolFilter>;
  isMedicine?: InputMaybe<BoolNullableFilter>;
  isMultiLot?: InputMaybe<BoolFilter>;
  isOnlineShopping?: InputMaybe<BoolFilter>;
  isPrequalification?: InputMaybe<BoolFilter>;
  linkNotificationInfo?: InputMaybe<StringNullableFilter>;
  location?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  planCode?: InputMaybe<StringNullableFilter>;
  planCodeOld?: InputMaybe<StringNullableFilter>;
  planId?: InputMaybe<StringNullableFilter>;
  planVersion?: InputMaybe<StringNullableFilter>;
  processApplyCode?: InputMaybe<StringNullableFilter>;
  processApplyId?: InputMaybe<StringNullableFilter>;
  provinceCode?: InputMaybe<StringNullableFilter>;
  provinceId?: InputMaybe<StringNullableFilter>;
  reciprocalCapital?: InputMaybe<StringNullableFilter>;
  reciprocalCapitalUnit?: InputMaybe<StringNullableFilter>;
  shoppingAgencyCode?: InputMaybe<StringNullableFilter>;
  shoppingAgencyId?: InputMaybe<StringNullableFilter>;
  supervisor?: InputMaybe<StringNullableFilter>;
  underUnitCode?: InputMaybe<StringNullableFilter>;
  underUnitId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  wardCode?: InputMaybe<StringNullableFilter>;
  wardId?: InputMaybe<StringNullableFilter>;
};

export type BidPackageUpdateInput = {
  bidEstimatePrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  bidField?: InputMaybe<CatBidFieldUpdateOneWithoutBidPackagesNestedInput>;
  bidFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidForm?: InputMaybe<CatBidFormUpdateOneWithoutBidPackagesNestedInput>;
  bidFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidMode?: InputMaybe<CatBidModeUpdateOneWithoutBidPackagesNestedInput>;
  bidModeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNoImg?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutBidPackageNestedInput>;
  bidPackageLots?: InputMaybe<BidPackageLotUpdateManyWithoutPackageNestedInput>;
  bidPackageSymbol?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  bidPriceDetail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceEx?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanUpdateOneWithoutBidPackagesNestedInput>;
  bidStartMonth?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  bidStartQuarter?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartTime?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartYear?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  capitalClassify?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  capitalDetail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  capitalType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractPeriod?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  contractPeriodText?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractPeriodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractType?: InputMaybe<CatContractTypeUpdateOneWithoutBidPackagesNestedInput>;
  contractTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  district?: InputMaybe<CatAreaUpdateOneWithoutDistrictBidPackagesNestedInput>;
  districtCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  exchangeDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isConcentrateShopping?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isDomestic?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isInternet?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isMedicine?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isMultiLot?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isOnlineShopping?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPrequalification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  linkNotificationInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  location?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  petitions?: InputMaybe<BidPetitionContractorUpdateManyWithoutPackageNestedInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planCodeOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutBidPackagesNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  province?: InputMaybe<CatAreaUpdateOneWithoutProvinceBidPackagesNestedInput>;
  provinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reciprocalCapital?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reciprocalCapitalUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shoppingAgency?: InputMaybe<CatAgencyUpdateOneWithoutBidPackagesNestedInput>;
  shoppingAgencyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  supervisor?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  underUnit?: InputMaybe<CatMinistryUpdateOneWithoutBidPackagesNestedInput>;
  underUnitCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ward?: InputMaybe<CatAreaUpdateOneWithoutWardBidPackagesNestedInput>;
  wardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidPackageUpdateManyMutationInput = {
  bidEstimatePrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  bidFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidModeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNoImg?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPackageSymbol?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  bidPriceDetail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceEx?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartMonth?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  bidStartQuarter?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartTime?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartYear?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  capitalClassify?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  capitalDetail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  capitalType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractPeriod?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  contractPeriodText?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractPeriodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  districtCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  exchangeDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isConcentrateShopping?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isDomestic?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isInternet?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isMedicine?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isMultiLot?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isOnlineShopping?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPrequalification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  linkNotificationInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  location?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planCodeOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  provinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reciprocalCapital?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reciprocalCapitalUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shoppingAgencyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  supervisor?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  underUnitCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  wardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidPackageUpdateManyWithWhereWithoutBidFieldInput = {
  data: BidPackageUpdateManyMutationInput;
  where: BidPackageScalarWhereInput;
};

export type BidPackageUpdateManyWithWhereWithoutBidFormInput = {
  data: BidPackageUpdateManyMutationInput;
  where: BidPackageScalarWhereInput;
};

export type BidPackageUpdateManyWithWhereWithoutBidModeInput = {
  data: BidPackageUpdateManyMutationInput;
  where: BidPackageScalarWhereInput;
};

export type BidPackageUpdateManyWithWhereWithoutBidSelectionPlanInput = {
  data: BidPackageUpdateManyMutationInput;
  where: BidPackageScalarWhereInput;
};

export type BidPackageUpdateManyWithWhereWithoutContractTypeInput = {
  data: BidPackageUpdateManyMutationInput;
  where: BidPackageScalarWhereInput;
};

export type BidPackageUpdateManyWithWhereWithoutDistrictInput = {
  data: BidPackageUpdateManyMutationInput;
  where: BidPackageScalarWhereInput;
};

export type BidPackageUpdateManyWithWhereWithoutProcessApplyInput = {
  data: BidPackageUpdateManyMutationInput;
  where: BidPackageScalarWhereInput;
};

export type BidPackageUpdateManyWithWhereWithoutProvinceInput = {
  data: BidPackageUpdateManyMutationInput;
  where: BidPackageScalarWhereInput;
};

export type BidPackageUpdateManyWithWhereWithoutWardInput = {
  data: BidPackageUpdateManyMutationInput;
  where: BidPackageScalarWhereInput;
};

export type BidPackageUpdateManyWithoutBidFieldNestedInput = {
  connect?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidPackageCreateOrConnectWithoutBidFieldInput>>;
  create?: InputMaybe<Array<BidPackageCreateWithoutBidFieldInput>>;
  createMany?: InputMaybe<BidPackageCreateManyBidFieldInputEnvelope>;
  delete?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidPackageScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  set?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  update?: InputMaybe<Array<BidPackageUpdateWithWhereUniqueWithoutBidFieldInput>>;
  updateMany?: InputMaybe<Array<BidPackageUpdateManyWithWhereWithoutBidFieldInput>>;
  upsert?: InputMaybe<Array<BidPackageUpsertWithWhereUniqueWithoutBidFieldInput>>;
};

export type BidPackageUpdateManyWithoutBidFormNestedInput = {
  connect?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidPackageCreateOrConnectWithoutBidFormInput>>;
  create?: InputMaybe<Array<BidPackageCreateWithoutBidFormInput>>;
  createMany?: InputMaybe<BidPackageCreateManyBidFormInputEnvelope>;
  delete?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidPackageScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  set?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  update?: InputMaybe<Array<BidPackageUpdateWithWhereUniqueWithoutBidFormInput>>;
  updateMany?: InputMaybe<Array<BidPackageUpdateManyWithWhereWithoutBidFormInput>>;
  upsert?: InputMaybe<Array<BidPackageUpsertWithWhereUniqueWithoutBidFormInput>>;
};

export type BidPackageUpdateManyWithoutBidModeNestedInput = {
  connect?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidPackageCreateOrConnectWithoutBidModeInput>>;
  create?: InputMaybe<Array<BidPackageCreateWithoutBidModeInput>>;
  createMany?: InputMaybe<BidPackageCreateManyBidModeInputEnvelope>;
  delete?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidPackageScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  set?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  update?: InputMaybe<Array<BidPackageUpdateWithWhereUniqueWithoutBidModeInput>>;
  updateMany?: InputMaybe<Array<BidPackageUpdateManyWithWhereWithoutBidModeInput>>;
  upsert?: InputMaybe<Array<BidPackageUpsertWithWhereUniqueWithoutBidModeInput>>;
};

export type BidPackageUpdateManyWithoutBidSelectionPlanNestedInput = {
  connect?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidPackageCreateOrConnectWithoutBidSelectionPlanInput>>;
  create?: InputMaybe<Array<BidPackageCreateWithoutBidSelectionPlanInput>>;
  createMany?: InputMaybe<BidPackageCreateManyBidSelectionPlanInputEnvelope>;
  delete?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidPackageScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  set?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  update?: InputMaybe<Array<BidPackageUpdateWithWhereUniqueWithoutBidSelectionPlanInput>>;
  updateMany?: InputMaybe<Array<BidPackageUpdateManyWithWhereWithoutBidSelectionPlanInput>>;
  upsert?: InputMaybe<Array<BidPackageUpsertWithWhereUniqueWithoutBidSelectionPlanInput>>;
};

export type BidPackageUpdateManyWithoutContractTypeNestedInput = {
  connect?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidPackageCreateOrConnectWithoutContractTypeInput>>;
  create?: InputMaybe<Array<BidPackageCreateWithoutContractTypeInput>>;
  createMany?: InputMaybe<BidPackageCreateManyContractTypeInputEnvelope>;
  delete?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidPackageScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  set?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  update?: InputMaybe<Array<BidPackageUpdateWithWhereUniqueWithoutContractTypeInput>>;
  updateMany?: InputMaybe<Array<BidPackageUpdateManyWithWhereWithoutContractTypeInput>>;
  upsert?: InputMaybe<Array<BidPackageUpsertWithWhereUniqueWithoutContractTypeInput>>;
};

export type BidPackageUpdateManyWithoutDistrictNestedInput = {
  connect?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidPackageCreateOrConnectWithoutDistrictInput>>;
  create?: InputMaybe<Array<BidPackageCreateWithoutDistrictInput>>;
  createMany?: InputMaybe<BidPackageCreateManyDistrictInputEnvelope>;
  delete?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidPackageScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  set?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  update?: InputMaybe<Array<BidPackageUpdateWithWhereUniqueWithoutDistrictInput>>;
  updateMany?: InputMaybe<Array<BidPackageUpdateManyWithWhereWithoutDistrictInput>>;
  upsert?: InputMaybe<Array<BidPackageUpsertWithWhereUniqueWithoutDistrictInput>>;
};

export type BidPackageUpdateManyWithoutProcessApplyNestedInput = {
  connect?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidPackageCreateOrConnectWithoutProcessApplyInput>>;
  create?: InputMaybe<Array<BidPackageCreateWithoutProcessApplyInput>>;
  createMany?: InputMaybe<BidPackageCreateManyProcessApplyInputEnvelope>;
  delete?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidPackageScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  set?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  update?: InputMaybe<Array<BidPackageUpdateWithWhereUniqueWithoutProcessApplyInput>>;
  updateMany?: InputMaybe<Array<BidPackageUpdateManyWithWhereWithoutProcessApplyInput>>;
  upsert?: InputMaybe<Array<BidPackageUpsertWithWhereUniqueWithoutProcessApplyInput>>;
};

export type BidPackageUpdateManyWithoutProvinceNestedInput = {
  connect?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidPackageCreateOrConnectWithoutProvinceInput>>;
  create?: InputMaybe<Array<BidPackageCreateWithoutProvinceInput>>;
  createMany?: InputMaybe<BidPackageCreateManyProvinceInputEnvelope>;
  delete?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidPackageScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  set?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  update?: InputMaybe<Array<BidPackageUpdateWithWhereUniqueWithoutProvinceInput>>;
  updateMany?: InputMaybe<Array<BidPackageUpdateManyWithWhereWithoutProvinceInput>>;
  upsert?: InputMaybe<Array<BidPackageUpsertWithWhereUniqueWithoutProvinceInput>>;
};

export type BidPackageUpdateManyWithoutWardNestedInput = {
  connect?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidPackageCreateOrConnectWithoutWardInput>>;
  create?: InputMaybe<Array<BidPackageCreateWithoutWardInput>>;
  createMany?: InputMaybe<BidPackageCreateManyWardInputEnvelope>;
  delete?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidPackageScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  set?: InputMaybe<Array<BidPackageWhereUniqueInput>>;
  update?: InputMaybe<Array<BidPackageUpdateWithWhereUniqueWithoutWardInput>>;
  updateMany?: InputMaybe<Array<BidPackageUpdateManyWithWhereWithoutWardInput>>;
  upsert?: InputMaybe<Array<BidPackageUpsertWithWhereUniqueWithoutWardInput>>;
};

export type BidPackageUpdateOneWithoutBidNotificationsNestedInput = {
  connect?: InputMaybe<BidPackageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidPackageCreateOrConnectWithoutBidNotificationsInput>;
  create?: InputMaybe<BidPackageCreateWithoutBidNotificationsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<BidPackageUpdateWithoutBidNotificationsInput>;
  upsert?: InputMaybe<BidPackageUpsertWithoutBidNotificationsInput>;
};

export type BidPackageUpdateOneWithoutBidPackageLotsNestedInput = {
  connect?: InputMaybe<BidPackageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidPackageCreateOrConnectWithoutBidPackageLotsInput>;
  create?: InputMaybe<BidPackageCreateWithoutBidPackageLotsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<BidPackageUpdateWithoutBidPackageLotsInput>;
  upsert?: InputMaybe<BidPackageUpsertWithoutBidPackageLotsInput>;
};

export type BidPackageUpdateOneWithoutPetitionsNestedInput = {
  connect?: InputMaybe<BidPackageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidPackageCreateOrConnectWithoutPetitionsInput>;
  create?: InputMaybe<BidPackageCreateWithoutPetitionsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<BidPackageUpdateWithoutPetitionsInput>;
  upsert?: InputMaybe<BidPackageUpsertWithoutPetitionsInput>;
};

export type BidPackageUpdateWithWhereUniqueWithoutBidFieldInput = {
  data: BidPackageUpdateWithoutBidFieldInput;
  where: BidPackageWhereUniqueInput;
};

export type BidPackageUpdateWithWhereUniqueWithoutBidFormInput = {
  data: BidPackageUpdateWithoutBidFormInput;
  where: BidPackageWhereUniqueInput;
};

export type BidPackageUpdateWithWhereUniqueWithoutBidModeInput = {
  data: BidPackageUpdateWithoutBidModeInput;
  where: BidPackageWhereUniqueInput;
};

export type BidPackageUpdateWithWhereUniqueWithoutBidSelectionPlanInput = {
  data: BidPackageUpdateWithoutBidSelectionPlanInput;
  where: BidPackageWhereUniqueInput;
};

export type BidPackageUpdateWithWhereUniqueWithoutContractTypeInput = {
  data: BidPackageUpdateWithoutContractTypeInput;
  where: BidPackageWhereUniqueInput;
};

export type BidPackageUpdateWithWhereUniqueWithoutDistrictInput = {
  data: BidPackageUpdateWithoutDistrictInput;
  where: BidPackageWhereUniqueInput;
};

export type BidPackageUpdateWithWhereUniqueWithoutProcessApplyInput = {
  data: BidPackageUpdateWithoutProcessApplyInput;
  where: BidPackageWhereUniqueInput;
};

export type BidPackageUpdateWithWhereUniqueWithoutProvinceInput = {
  data: BidPackageUpdateWithoutProvinceInput;
  where: BidPackageWhereUniqueInput;
};

export type BidPackageUpdateWithWhereUniqueWithoutWardInput = {
  data: BidPackageUpdateWithoutWardInput;
  where: BidPackageWhereUniqueInput;
};

export type BidPackageUpdateWithoutBidFieldInput = {
  bidEstimatePrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  bidFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidForm?: InputMaybe<CatBidFormUpdateOneWithoutBidPackagesNestedInput>;
  bidFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidMode?: InputMaybe<CatBidModeUpdateOneWithoutBidPackagesNestedInput>;
  bidModeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNoImg?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutBidPackageNestedInput>;
  bidPackageLots?: InputMaybe<BidPackageLotUpdateManyWithoutPackageNestedInput>;
  bidPackageSymbol?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  bidPriceDetail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceEx?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanUpdateOneWithoutBidPackagesNestedInput>;
  bidStartMonth?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  bidStartQuarter?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartTime?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartYear?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  capitalClassify?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  capitalDetail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  capitalType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractPeriod?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  contractPeriodText?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractPeriodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractType?: InputMaybe<CatContractTypeUpdateOneWithoutBidPackagesNestedInput>;
  contractTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  district?: InputMaybe<CatAreaUpdateOneWithoutDistrictBidPackagesNestedInput>;
  districtCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  exchangeDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isConcentrateShopping?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isDomestic?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isInternet?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isMedicine?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isMultiLot?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isOnlineShopping?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPrequalification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  linkNotificationInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  location?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  petitions?: InputMaybe<BidPetitionContractorUpdateManyWithoutPackageNestedInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planCodeOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutBidPackagesNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  province?: InputMaybe<CatAreaUpdateOneWithoutProvinceBidPackagesNestedInput>;
  provinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reciprocalCapital?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reciprocalCapitalUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shoppingAgency?: InputMaybe<CatAgencyUpdateOneWithoutBidPackagesNestedInput>;
  shoppingAgencyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  supervisor?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  underUnit?: InputMaybe<CatMinistryUpdateOneWithoutBidPackagesNestedInput>;
  underUnitCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ward?: InputMaybe<CatAreaUpdateOneWithoutWardBidPackagesNestedInput>;
  wardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidPackageUpdateWithoutBidFormInput = {
  bidEstimatePrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  bidField?: InputMaybe<CatBidFieldUpdateOneWithoutBidPackagesNestedInput>;
  bidFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidMode?: InputMaybe<CatBidModeUpdateOneWithoutBidPackagesNestedInput>;
  bidModeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNoImg?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutBidPackageNestedInput>;
  bidPackageLots?: InputMaybe<BidPackageLotUpdateManyWithoutPackageNestedInput>;
  bidPackageSymbol?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  bidPriceDetail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceEx?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanUpdateOneWithoutBidPackagesNestedInput>;
  bidStartMonth?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  bidStartQuarter?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartTime?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartYear?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  capitalClassify?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  capitalDetail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  capitalType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractPeriod?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  contractPeriodText?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractPeriodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractType?: InputMaybe<CatContractTypeUpdateOneWithoutBidPackagesNestedInput>;
  contractTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  district?: InputMaybe<CatAreaUpdateOneWithoutDistrictBidPackagesNestedInput>;
  districtCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  exchangeDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isConcentrateShopping?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isDomestic?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isInternet?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isMedicine?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isMultiLot?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isOnlineShopping?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPrequalification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  linkNotificationInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  location?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  petitions?: InputMaybe<BidPetitionContractorUpdateManyWithoutPackageNestedInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planCodeOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutBidPackagesNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  province?: InputMaybe<CatAreaUpdateOneWithoutProvinceBidPackagesNestedInput>;
  provinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reciprocalCapital?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reciprocalCapitalUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shoppingAgency?: InputMaybe<CatAgencyUpdateOneWithoutBidPackagesNestedInput>;
  shoppingAgencyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  supervisor?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  underUnit?: InputMaybe<CatMinistryUpdateOneWithoutBidPackagesNestedInput>;
  underUnitCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ward?: InputMaybe<CatAreaUpdateOneWithoutWardBidPackagesNestedInput>;
  wardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidPackageUpdateWithoutBidModeInput = {
  bidEstimatePrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  bidField?: InputMaybe<CatBidFieldUpdateOneWithoutBidPackagesNestedInput>;
  bidFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidForm?: InputMaybe<CatBidFormUpdateOneWithoutBidPackagesNestedInput>;
  bidFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidModeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNoImg?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutBidPackageNestedInput>;
  bidPackageLots?: InputMaybe<BidPackageLotUpdateManyWithoutPackageNestedInput>;
  bidPackageSymbol?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  bidPriceDetail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceEx?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanUpdateOneWithoutBidPackagesNestedInput>;
  bidStartMonth?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  bidStartQuarter?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartTime?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartYear?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  capitalClassify?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  capitalDetail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  capitalType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractPeriod?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  contractPeriodText?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractPeriodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractType?: InputMaybe<CatContractTypeUpdateOneWithoutBidPackagesNestedInput>;
  contractTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  district?: InputMaybe<CatAreaUpdateOneWithoutDistrictBidPackagesNestedInput>;
  districtCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  exchangeDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isConcentrateShopping?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isDomestic?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isInternet?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isMedicine?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isMultiLot?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isOnlineShopping?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPrequalification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  linkNotificationInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  location?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  petitions?: InputMaybe<BidPetitionContractorUpdateManyWithoutPackageNestedInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planCodeOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutBidPackagesNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  province?: InputMaybe<CatAreaUpdateOneWithoutProvinceBidPackagesNestedInput>;
  provinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reciprocalCapital?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reciprocalCapitalUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shoppingAgency?: InputMaybe<CatAgencyUpdateOneWithoutBidPackagesNestedInput>;
  shoppingAgencyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  supervisor?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  underUnit?: InputMaybe<CatMinistryUpdateOneWithoutBidPackagesNestedInput>;
  underUnitCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ward?: InputMaybe<CatAreaUpdateOneWithoutWardBidPackagesNestedInput>;
  wardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidPackageUpdateWithoutBidNotificationsInput = {
  bidEstimatePrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  bidField?: InputMaybe<CatBidFieldUpdateOneWithoutBidPackagesNestedInput>;
  bidFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidForm?: InputMaybe<CatBidFormUpdateOneWithoutBidPackagesNestedInput>;
  bidFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidMode?: InputMaybe<CatBidModeUpdateOneWithoutBidPackagesNestedInput>;
  bidModeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNoImg?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPackageLots?: InputMaybe<BidPackageLotUpdateManyWithoutPackageNestedInput>;
  bidPackageSymbol?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  bidPriceDetail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceEx?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanUpdateOneWithoutBidPackagesNestedInput>;
  bidStartMonth?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  bidStartQuarter?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartTime?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartYear?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  capitalClassify?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  capitalDetail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  capitalType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractPeriod?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  contractPeriodText?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractPeriodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractType?: InputMaybe<CatContractTypeUpdateOneWithoutBidPackagesNestedInput>;
  contractTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  district?: InputMaybe<CatAreaUpdateOneWithoutDistrictBidPackagesNestedInput>;
  districtCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  exchangeDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isConcentrateShopping?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isDomestic?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isInternet?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isMedicine?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isMultiLot?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isOnlineShopping?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPrequalification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  linkNotificationInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  location?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  petitions?: InputMaybe<BidPetitionContractorUpdateManyWithoutPackageNestedInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planCodeOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutBidPackagesNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  province?: InputMaybe<CatAreaUpdateOneWithoutProvinceBidPackagesNestedInput>;
  provinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reciprocalCapital?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reciprocalCapitalUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shoppingAgency?: InputMaybe<CatAgencyUpdateOneWithoutBidPackagesNestedInput>;
  shoppingAgencyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  supervisor?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  underUnit?: InputMaybe<CatMinistryUpdateOneWithoutBidPackagesNestedInput>;
  underUnitCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ward?: InputMaybe<CatAreaUpdateOneWithoutWardBidPackagesNestedInput>;
  wardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidPackageUpdateWithoutBidPackageLotsInput = {
  bidEstimatePrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  bidField?: InputMaybe<CatBidFieldUpdateOneWithoutBidPackagesNestedInput>;
  bidFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidForm?: InputMaybe<CatBidFormUpdateOneWithoutBidPackagesNestedInput>;
  bidFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidMode?: InputMaybe<CatBidModeUpdateOneWithoutBidPackagesNestedInput>;
  bidModeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNoImg?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutBidPackageNestedInput>;
  bidPackageSymbol?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  bidPriceDetail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceEx?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanUpdateOneWithoutBidPackagesNestedInput>;
  bidStartMonth?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  bidStartQuarter?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartTime?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartYear?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  capitalClassify?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  capitalDetail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  capitalType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractPeriod?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  contractPeriodText?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractPeriodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractType?: InputMaybe<CatContractTypeUpdateOneWithoutBidPackagesNestedInput>;
  contractTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  district?: InputMaybe<CatAreaUpdateOneWithoutDistrictBidPackagesNestedInput>;
  districtCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  exchangeDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isConcentrateShopping?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isDomestic?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isInternet?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isMedicine?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isMultiLot?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isOnlineShopping?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPrequalification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  linkNotificationInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  location?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  petitions?: InputMaybe<BidPetitionContractorUpdateManyWithoutPackageNestedInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planCodeOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutBidPackagesNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  province?: InputMaybe<CatAreaUpdateOneWithoutProvinceBidPackagesNestedInput>;
  provinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reciprocalCapital?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reciprocalCapitalUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shoppingAgency?: InputMaybe<CatAgencyUpdateOneWithoutBidPackagesNestedInput>;
  shoppingAgencyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  supervisor?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  underUnit?: InputMaybe<CatMinistryUpdateOneWithoutBidPackagesNestedInput>;
  underUnitCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ward?: InputMaybe<CatAreaUpdateOneWithoutWardBidPackagesNestedInput>;
  wardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidPackageUpdateWithoutBidSelectionPlanInput = {
  bidEstimatePrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  bidField?: InputMaybe<CatBidFieldUpdateOneWithoutBidPackagesNestedInput>;
  bidFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidForm?: InputMaybe<CatBidFormUpdateOneWithoutBidPackagesNestedInput>;
  bidFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidMode?: InputMaybe<CatBidModeUpdateOneWithoutBidPackagesNestedInput>;
  bidModeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNoImg?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutBidPackageNestedInput>;
  bidPackageLots?: InputMaybe<BidPackageLotUpdateManyWithoutPackageNestedInput>;
  bidPackageSymbol?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  bidPriceDetail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceEx?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartMonth?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  bidStartQuarter?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartTime?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartYear?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  capitalClassify?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  capitalDetail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  capitalType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractPeriod?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  contractPeriodText?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractPeriodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractType?: InputMaybe<CatContractTypeUpdateOneWithoutBidPackagesNestedInput>;
  contractTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  district?: InputMaybe<CatAreaUpdateOneWithoutDistrictBidPackagesNestedInput>;
  districtCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  exchangeDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isConcentrateShopping?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isDomestic?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isInternet?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isMedicine?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isMultiLot?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isOnlineShopping?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPrequalification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  linkNotificationInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  location?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  petitions?: InputMaybe<BidPetitionContractorUpdateManyWithoutPackageNestedInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planCodeOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutBidPackagesNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  province?: InputMaybe<CatAreaUpdateOneWithoutProvinceBidPackagesNestedInput>;
  provinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reciprocalCapital?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reciprocalCapitalUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shoppingAgency?: InputMaybe<CatAgencyUpdateOneWithoutBidPackagesNestedInput>;
  shoppingAgencyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  supervisor?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  underUnit?: InputMaybe<CatMinistryUpdateOneWithoutBidPackagesNestedInput>;
  underUnitCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ward?: InputMaybe<CatAreaUpdateOneWithoutWardBidPackagesNestedInput>;
  wardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidPackageUpdateWithoutContractTypeInput = {
  bidEstimatePrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  bidField?: InputMaybe<CatBidFieldUpdateOneWithoutBidPackagesNestedInput>;
  bidFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidForm?: InputMaybe<CatBidFormUpdateOneWithoutBidPackagesNestedInput>;
  bidFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidMode?: InputMaybe<CatBidModeUpdateOneWithoutBidPackagesNestedInput>;
  bidModeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNoImg?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutBidPackageNestedInput>;
  bidPackageLots?: InputMaybe<BidPackageLotUpdateManyWithoutPackageNestedInput>;
  bidPackageSymbol?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  bidPriceDetail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceEx?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanUpdateOneWithoutBidPackagesNestedInput>;
  bidStartMonth?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  bidStartQuarter?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartTime?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartYear?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  capitalClassify?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  capitalDetail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  capitalType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractPeriod?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  contractPeriodText?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractPeriodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  district?: InputMaybe<CatAreaUpdateOneWithoutDistrictBidPackagesNestedInput>;
  districtCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  exchangeDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isConcentrateShopping?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isDomestic?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isInternet?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isMedicine?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isMultiLot?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isOnlineShopping?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPrequalification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  linkNotificationInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  location?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  petitions?: InputMaybe<BidPetitionContractorUpdateManyWithoutPackageNestedInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planCodeOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutBidPackagesNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  province?: InputMaybe<CatAreaUpdateOneWithoutProvinceBidPackagesNestedInput>;
  provinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reciprocalCapital?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reciprocalCapitalUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shoppingAgency?: InputMaybe<CatAgencyUpdateOneWithoutBidPackagesNestedInput>;
  shoppingAgencyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  supervisor?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  underUnit?: InputMaybe<CatMinistryUpdateOneWithoutBidPackagesNestedInput>;
  underUnitCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ward?: InputMaybe<CatAreaUpdateOneWithoutWardBidPackagesNestedInput>;
  wardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidPackageUpdateWithoutDistrictInput = {
  bidEstimatePrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  bidField?: InputMaybe<CatBidFieldUpdateOneWithoutBidPackagesNestedInput>;
  bidFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidForm?: InputMaybe<CatBidFormUpdateOneWithoutBidPackagesNestedInput>;
  bidFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidMode?: InputMaybe<CatBidModeUpdateOneWithoutBidPackagesNestedInput>;
  bidModeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNoImg?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutBidPackageNestedInput>;
  bidPackageLots?: InputMaybe<BidPackageLotUpdateManyWithoutPackageNestedInput>;
  bidPackageSymbol?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  bidPriceDetail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceEx?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanUpdateOneWithoutBidPackagesNestedInput>;
  bidStartMonth?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  bidStartQuarter?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartTime?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartYear?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  capitalClassify?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  capitalDetail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  capitalType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractPeriod?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  contractPeriodText?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractPeriodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractType?: InputMaybe<CatContractTypeUpdateOneWithoutBidPackagesNestedInput>;
  contractTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  districtCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  exchangeDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isConcentrateShopping?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isDomestic?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isInternet?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isMedicine?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isMultiLot?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isOnlineShopping?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPrequalification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  linkNotificationInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  location?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  petitions?: InputMaybe<BidPetitionContractorUpdateManyWithoutPackageNestedInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planCodeOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutBidPackagesNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  province?: InputMaybe<CatAreaUpdateOneWithoutProvinceBidPackagesNestedInput>;
  provinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reciprocalCapital?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reciprocalCapitalUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shoppingAgency?: InputMaybe<CatAgencyUpdateOneWithoutBidPackagesNestedInput>;
  shoppingAgencyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  supervisor?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  underUnit?: InputMaybe<CatMinistryUpdateOneWithoutBidPackagesNestedInput>;
  underUnitCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ward?: InputMaybe<CatAreaUpdateOneWithoutWardBidPackagesNestedInput>;
  wardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidPackageUpdateWithoutPetitionsInput = {
  bidEstimatePrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  bidField?: InputMaybe<CatBidFieldUpdateOneWithoutBidPackagesNestedInput>;
  bidFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidForm?: InputMaybe<CatBidFormUpdateOneWithoutBidPackagesNestedInput>;
  bidFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidMode?: InputMaybe<CatBidModeUpdateOneWithoutBidPackagesNestedInput>;
  bidModeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNoImg?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutBidPackageNestedInput>;
  bidPackageLots?: InputMaybe<BidPackageLotUpdateManyWithoutPackageNestedInput>;
  bidPackageSymbol?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  bidPriceDetail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceEx?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanUpdateOneWithoutBidPackagesNestedInput>;
  bidStartMonth?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  bidStartQuarter?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartTime?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartYear?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  capitalClassify?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  capitalDetail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  capitalType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractPeriod?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  contractPeriodText?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractPeriodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractType?: InputMaybe<CatContractTypeUpdateOneWithoutBidPackagesNestedInput>;
  contractTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  district?: InputMaybe<CatAreaUpdateOneWithoutDistrictBidPackagesNestedInput>;
  districtCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  exchangeDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isConcentrateShopping?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isDomestic?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isInternet?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isMedicine?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isMultiLot?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isOnlineShopping?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPrequalification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  linkNotificationInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  location?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planCodeOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutBidPackagesNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  province?: InputMaybe<CatAreaUpdateOneWithoutProvinceBidPackagesNestedInput>;
  provinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reciprocalCapital?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reciprocalCapitalUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shoppingAgency?: InputMaybe<CatAgencyUpdateOneWithoutBidPackagesNestedInput>;
  shoppingAgencyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  supervisor?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  underUnit?: InputMaybe<CatMinistryUpdateOneWithoutBidPackagesNestedInput>;
  underUnitCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ward?: InputMaybe<CatAreaUpdateOneWithoutWardBidPackagesNestedInput>;
  wardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidPackageUpdateWithoutProcessApplyInput = {
  bidEstimatePrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  bidField?: InputMaybe<CatBidFieldUpdateOneWithoutBidPackagesNestedInput>;
  bidFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidForm?: InputMaybe<CatBidFormUpdateOneWithoutBidPackagesNestedInput>;
  bidFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidMode?: InputMaybe<CatBidModeUpdateOneWithoutBidPackagesNestedInput>;
  bidModeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNoImg?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutBidPackageNestedInput>;
  bidPackageLots?: InputMaybe<BidPackageLotUpdateManyWithoutPackageNestedInput>;
  bidPackageSymbol?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  bidPriceDetail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceEx?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanUpdateOneWithoutBidPackagesNestedInput>;
  bidStartMonth?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  bidStartQuarter?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartTime?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartYear?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  capitalClassify?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  capitalDetail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  capitalType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractPeriod?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  contractPeriodText?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractPeriodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractType?: InputMaybe<CatContractTypeUpdateOneWithoutBidPackagesNestedInput>;
  contractTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  district?: InputMaybe<CatAreaUpdateOneWithoutDistrictBidPackagesNestedInput>;
  districtCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  exchangeDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isConcentrateShopping?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isDomestic?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isInternet?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isMedicine?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isMultiLot?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isOnlineShopping?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPrequalification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  linkNotificationInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  location?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  petitions?: InputMaybe<BidPetitionContractorUpdateManyWithoutPackageNestedInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planCodeOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  province?: InputMaybe<CatAreaUpdateOneWithoutProvinceBidPackagesNestedInput>;
  provinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reciprocalCapital?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reciprocalCapitalUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shoppingAgency?: InputMaybe<CatAgencyUpdateOneWithoutBidPackagesNestedInput>;
  shoppingAgencyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  supervisor?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  underUnit?: InputMaybe<CatMinistryUpdateOneWithoutBidPackagesNestedInput>;
  underUnitCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ward?: InputMaybe<CatAreaUpdateOneWithoutWardBidPackagesNestedInput>;
  wardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidPackageUpdateWithoutProvinceInput = {
  bidEstimatePrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  bidField?: InputMaybe<CatBidFieldUpdateOneWithoutBidPackagesNestedInput>;
  bidFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidForm?: InputMaybe<CatBidFormUpdateOneWithoutBidPackagesNestedInput>;
  bidFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidMode?: InputMaybe<CatBidModeUpdateOneWithoutBidPackagesNestedInput>;
  bidModeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNoImg?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutBidPackageNestedInput>;
  bidPackageLots?: InputMaybe<BidPackageLotUpdateManyWithoutPackageNestedInput>;
  bidPackageSymbol?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  bidPriceDetail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceEx?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanUpdateOneWithoutBidPackagesNestedInput>;
  bidStartMonth?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  bidStartQuarter?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartTime?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartYear?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  capitalClassify?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  capitalDetail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  capitalType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractPeriod?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  contractPeriodText?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractPeriodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractType?: InputMaybe<CatContractTypeUpdateOneWithoutBidPackagesNestedInput>;
  contractTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  district?: InputMaybe<CatAreaUpdateOneWithoutDistrictBidPackagesNestedInput>;
  districtCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  exchangeDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isConcentrateShopping?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isDomestic?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isInternet?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isMedicine?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isMultiLot?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isOnlineShopping?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPrequalification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  linkNotificationInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  location?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  petitions?: InputMaybe<BidPetitionContractorUpdateManyWithoutPackageNestedInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planCodeOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutBidPackagesNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  provinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reciprocalCapital?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reciprocalCapitalUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shoppingAgency?: InputMaybe<CatAgencyUpdateOneWithoutBidPackagesNestedInput>;
  shoppingAgencyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  supervisor?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  underUnit?: InputMaybe<CatMinistryUpdateOneWithoutBidPackagesNestedInput>;
  underUnitCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ward?: InputMaybe<CatAreaUpdateOneWithoutWardBidPackagesNestedInput>;
  wardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidPackageUpdateWithoutWardInput = {
  bidEstimatePrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  bidField?: InputMaybe<CatBidFieldUpdateOneWithoutBidPackagesNestedInput>;
  bidFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidForm?: InputMaybe<CatBidFormUpdateOneWithoutBidPackagesNestedInput>;
  bidFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidMode?: InputMaybe<CatBidModeUpdateOneWithoutBidPackagesNestedInput>;
  bidModeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNoImg?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutBidPackageNestedInput>;
  bidPackageLots?: InputMaybe<BidPackageLotUpdateManyWithoutPackageNestedInput>;
  bidPackageSymbol?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPrice?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  bidPriceDetail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceEx?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidPriceUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanUpdateOneWithoutBidPackagesNestedInput>;
  bidStartMonth?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  bidStartQuarter?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartTime?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidStartYear?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  capitalClassify?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  capitalDetail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  capitalType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractPeriod?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  contractPeriodText?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractPeriodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractType?: InputMaybe<CatContractTypeUpdateOneWithoutBidPackagesNestedInput>;
  contractTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  district?: InputMaybe<CatAreaUpdateOneWithoutDistrictBidPackagesNestedInput>;
  districtCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  exchangeDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isConcentrateShopping?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isDomestic?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isInternet?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isMedicine?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isMultiLot?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isOnlineShopping?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPrequalification?: InputMaybe<BoolFieldUpdateOperationsInput>;
  linkNotificationInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  location?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  petitions?: InputMaybe<BidPetitionContractorUpdateManyWithoutPackageNestedInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planCodeOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutBidPackagesNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  province?: InputMaybe<CatAreaUpdateOneWithoutProvinceBidPackagesNestedInput>;
  provinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reciprocalCapital?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reciprocalCapitalUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shoppingAgency?: InputMaybe<CatAgencyUpdateOneWithoutBidPackagesNestedInput>;
  shoppingAgencyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  supervisor?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  underUnit?: InputMaybe<CatMinistryUpdateOneWithoutBidPackagesNestedInput>;
  underUnitCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  wardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidPackageUpsertWithWhereUniqueWithoutBidFieldInput = {
  create: BidPackageCreateWithoutBidFieldInput;
  update: BidPackageUpdateWithoutBidFieldInput;
  where: BidPackageWhereUniqueInput;
};

export type BidPackageUpsertWithWhereUniqueWithoutBidFormInput = {
  create: BidPackageCreateWithoutBidFormInput;
  update: BidPackageUpdateWithoutBidFormInput;
  where: BidPackageWhereUniqueInput;
};

export type BidPackageUpsertWithWhereUniqueWithoutBidModeInput = {
  create: BidPackageCreateWithoutBidModeInput;
  update: BidPackageUpdateWithoutBidModeInput;
  where: BidPackageWhereUniqueInput;
};

export type BidPackageUpsertWithWhereUniqueWithoutBidSelectionPlanInput = {
  create: BidPackageCreateWithoutBidSelectionPlanInput;
  update: BidPackageUpdateWithoutBidSelectionPlanInput;
  where: BidPackageWhereUniqueInput;
};

export type BidPackageUpsertWithWhereUniqueWithoutContractTypeInput = {
  create: BidPackageCreateWithoutContractTypeInput;
  update: BidPackageUpdateWithoutContractTypeInput;
  where: BidPackageWhereUniqueInput;
};

export type BidPackageUpsertWithWhereUniqueWithoutDistrictInput = {
  create: BidPackageCreateWithoutDistrictInput;
  update: BidPackageUpdateWithoutDistrictInput;
  where: BidPackageWhereUniqueInput;
};

export type BidPackageUpsertWithWhereUniqueWithoutProcessApplyInput = {
  create: BidPackageCreateWithoutProcessApplyInput;
  update: BidPackageUpdateWithoutProcessApplyInput;
  where: BidPackageWhereUniqueInput;
};

export type BidPackageUpsertWithWhereUniqueWithoutProvinceInput = {
  create: BidPackageCreateWithoutProvinceInput;
  update: BidPackageUpdateWithoutProvinceInput;
  where: BidPackageWhereUniqueInput;
};

export type BidPackageUpsertWithWhereUniqueWithoutWardInput = {
  create: BidPackageCreateWithoutWardInput;
  update: BidPackageUpdateWithoutWardInput;
  where: BidPackageWhereUniqueInput;
};

export type BidPackageUpsertWithoutBidNotificationsInput = {
  create: BidPackageCreateWithoutBidNotificationsInput;
  update: BidPackageUpdateWithoutBidNotificationsInput;
};

export type BidPackageUpsertWithoutBidPackageLotsInput = {
  create: BidPackageCreateWithoutBidPackageLotsInput;
  update: BidPackageUpdateWithoutBidPackageLotsInput;
};

export type BidPackageUpsertWithoutPetitionsInput = {
  create: BidPackageCreateWithoutPetitionsInput;
  update: BidPackageUpdateWithoutPetitionsInput;
};

export type BidPackageWhereInput = {
  AND?: InputMaybe<Array<BidPackageWhereInput>>;
  NOT?: InputMaybe<Array<BidPackageWhereInput>>;
  OR?: InputMaybe<Array<BidPackageWhereInput>>;
  bidEstimatePrice?: InputMaybe<DecimalNullableFilter>;
  bidField?: InputMaybe<CatBidFieldWhereInput>;
  bidFieldCode?: InputMaybe<StringNullableFilter>;
  bidFieldId?: InputMaybe<StringNullableFilter>;
  bidForm?: InputMaybe<CatBidFormWhereInput>;
  bidFormCode?: InputMaybe<StringNullableFilter>;
  bidFormId?: InputMaybe<StringNullableFilter>;
  bidMode?: InputMaybe<CatBidModeWhereInput>;
  bidModeCode?: InputMaybe<StringNullableFilter>;
  bidModeId?: InputMaybe<StringNullableFilter>;
  bidNoImg?: InputMaybe<StringNullableFilter>;
  bidNotificationCode?: InputMaybe<StringNullableFilter>;
  bidNotificationVersion?: InputMaybe<StringNullableFilter>;
  bidNotifications?: InputMaybe<BidNotificationListRelationFilter>;
  bidPackageLots?: InputMaybe<BidPackageLotListRelationFilter>;
  bidPackageSymbol?: InputMaybe<StringNullableFilter>;
  bidPrice?: InputMaybe<DecimalNullableFilter>;
  bidPriceDetail?: InputMaybe<StringNullableFilter>;
  bidPriceEx?: InputMaybe<StringNullableFilter>;
  bidPriceOld?: InputMaybe<StringNullableFilter>;
  bidPriceUnit?: InputMaybe<StringNullableFilter>;
  bidSelectionPlan?: InputMaybe<BidSelectionPlanWhereInput>;
  bidStartMonth?: InputMaybe<IntNullableFilter>;
  bidStartQuarter?: InputMaybe<StringNullableFilter>;
  bidStartTime?: InputMaybe<StringNullableFilter>;
  bidStartUnit?: InputMaybe<StringNullableFilter>;
  bidStartYear?: InputMaybe<IntNullableFilter>;
  capitalClassify?: InputMaybe<StringNullableFilter>;
  capitalDetail?: InputMaybe<StringNullableFilter>;
  capitalType?: InputMaybe<StringNullableFilter>;
  code?: InputMaybe<StringNullableFilter>;
  contractPeriod?: InputMaybe<IntNullableFilter>;
  contractPeriodText?: InputMaybe<StringNullableFilter>;
  contractPeriodUnit?: InputMaybe<StringNullableFilter>;
  contractType?: InputMaybe<CatContractTypeWhereInput>;
  contractTypeCode?: InputMaybe<StringNullableFilter>;
  contractTypeId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  district?: InputMaybe<CatAreaWhereInput>;
  districtCode?: InputMaybe<StringNullableFilter>;
  districtId?: InputMaybe<StringNullableFilter>;
  exchangeDate?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isConcentrateShopping?: InputMaybe<BoolFilter>;
  isDomestic?: InputMaybe<BoolFilter>;
  isInternet?: InputMaybe<BoolFilter>;
  isMedicine?: InputMaybe<BoolNullableFilter>;
  isMultiLot?: InputMaybe<BoolFilter>;
  isOnlineShopping?: InputMaybe<BoolFilter>;
  isPrequalification?: InputMaybe<BoolFilter>;
  linkNotificationInfo?: InputMaybe<StringNullableFilter>;
  location?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  petitions?: InputMaybe<BidPetitionContractorListRelationFilter>;
  planCode?: InputMaybe<StringNullableFilter>;
  planCodeOld?: InputMaybe<StringNullableFilter>;
  planId?: InputMaybe<StringNullableFilter>;
  planVersion?: InputMaybe<StringNullableFilter>;
  processApply?: InputMaybe<CatProcessApplyWhereInput>;
  processApplyCode?: InputMaybe<StringNullableFilter>;
  processApplyId?: InputMaybe<StringNullableFilter>;
  province?: InputMaybe<CatAreaWhereInput>;
  provinceCode?: InputMaybe<StringNullableFilter>;
  provinceId?: InputMaybe<StringNullableFilter>;
  reciprocalCapital?: InputMaybe<StringNullableFilter>;
  reciprocalCapitalUnit?: InputMaybe<StringNullableFilter>;
  shoppingAgency?: InputMaybe<CatAgencyWhereInput>;
  shoppingAgencyCode?: InputMaybe<StringNullableFilter>;
  shoppingAgencyId?: InputMaybe<StringNullableFilter>;
  supervisor?: InputMaybe<StringNullableFilter>;
  underUnit?: InputMaybe<CatMinistryWhereInput>;
  underUnitCode?: InputMaybe<StringNullableFilter>;
  underUnitId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  ward?: InputMaybe<CatAreaWhereInput>;
  wardCode?: InputMaybe<StringNullableFilter>;
  wardId?: InputMaybe<StringNullableFilter>;
};

export type BidPackageWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']['input']>;
};

export type BidPetitionContractor = {
  __typename?: 'BidPetitionContractor';
  bidNotification?: Maybe<BidNotification>;
  bidNotificationCode?: Maybe<Scalars['String']['output']>;
  bidNotificationId?: Maybe<Scalars['String']['output']>;
  bidNotificationVersion?: Maybe<Scalars['String']['output']>;
  cancelFileId?: Maybe<Scalars['String']['output']>;
  cancelFileName?: Maybe<Scalars['String']['output']>;
  content?: Maybe<Scalars['String']['output']>;
  contractor?: Maybe<Organization>;
  contractorCode?: Maybe<Scalars['String']['output']>;
  contractorId?: Maybe<Scalars['String']['output']>;
  contractorName?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  createdByCode?: Maybe<Scalars['String']['output']>;
  draft?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  isDecision?: Maybe<Scalars['Boolean']['output']>;
  isInternet?: Maybe<Scalars['Boolean']['output']>;
  package?: Maybe<BidPackage>;
  packageCode?: Maybe<Scalars['String']['output']>;
  packageId?: Maybe<Scalars['String']['output']>;
  packageLotCode?: Maybe<Scalars['String']['output']>;
  packageLotName?: Maybe<Scalars['String']['output']>;
  packageName?: Maybe<Scalars['String']['output']>;
  personReceiveRequest?: Maybe<Scalars['String']['output']>;
  petitionTypeCode?: Maybe<Scalars['String']['output']>;
  plan?: Maybe<BidSelectionPlan>;
  planCode?: Maybe<Scalars['String']['output']>;
  planId?: Maybe<Scalars['String']['output']>;
  prepareUserId?: Maybe<Scalars['String']['output']>;
  prepareUserInfo?: Maybe<Scalars['String']['output']>;
  reason?: Maybe<Scalars['String']['output']>;
  requestCode?: Maybe<Scalars['String']['output']>;
  requestContent?: Maybe<Scalars['String']['output']>;
  requestDate?: Maybe<Scalars['DateTime']['output']>;
  requestFileId?: Maybe<Scalars['String']['output']>;
  requestFileName?: Maybe<Scalars['String']['output']>;
  requestName?: Maybe<Scalars['String']['output']>;
  requestVersion?: Maybe<Scalars['String']['output']>;
  responseContent?: Maybe<Scalars['String']['output']>;
  responseDate?: Maybe<Scalars['DateTime']['output']>;
  responseFileId?: Maybe<Scalars['String']['output']>;
  responseFileName?: Maybe<Scalars['String']['output']>;
  resultPublicDate?: Maybe<Scalars['DateTime']['output']>;
  senderUserId?: Maybe<Scalars['String']['output']>;
  senderUserInfo?: Maybe<Scalars['String']['output']>;
  signContent?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  updatedByCode?: Maybe<Scalars['String']['output']>;
};

export type BidPetitionContractorCreateInput = {
  bidNotification?: InputMaybe<BidNotificationCreateNestedOneWithoutBidPetitionContractorsInput>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  cancelFileId?: InputMaybe<Scalars['String']['input']>;
  cancelFileName?: InputMaybe<Scalars['String']['input']>;
  content?: InputMaybe<Scalars['String']['input']>;
  contractor?: InputMaybe<OrganizationCreateNestedOneWithoutBidPetitionContractorsInput>;
  contractorCode?: InputMaybe<Scalars['String']['input']>;
  contractorName?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdByCode?: InputMaybe<Scalars['String']['input']>;
  draft?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isDecision?: InputMaybe<Scalars['Boolean']['input']>;
  isInternet?: InputMaybe<Scalars['Boolean']['input']>;
  package?: InputMaybe<BidPackageCreateNestedOneWithoutPetitionsInput>;
  packageCode?: InputMaybe<Scalars['String']['input']>;
  packageLotCode?: InputMaybe<Scalars['String']['input']>;
  packageLotName?: InputMaybe<Scalars['String']['input']>;
  packageName?: InputMaybe<Scalars['String']['input']>;
  personReceiveRequest?: InputMaybe<Scalars['String']['input']>;
  petitionTypeCode?: InputMaybe<Scalars['String']['input']>;
  plan?: InputMaybe<BidSelectionPlanCreateNestedOneWithoutPetitionsInput>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  prepareUserId?: InputMaybe<Scalars['String']['input']>;
  prepareUserInfo?: InputMaybe<Scalars['String']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  requestCode?: InputMaybe<Scalars['String']['input']>;
  requestContent?: InputMaybe<Scalars['String']['input']>;
  requestDate?: InputMaybe<Scalars['DateTime']['input']>;
  requestFileId?: InputMaybe<Scalars['String']['input']>;
  requestFileName?: InputMaybe<Scalars['String']['input']>;
  requestName?: InputMaybe<Scalars['String']['input']>;
  requestVersion?: InputMaybe<Scalars['String']['input']>;
  responseContent?: InputMaybe<Scalars['String']['input']>;
  responseDate?: InputMaybe<Scalars['DateTime']['input']>;
  responseFileId?: InputMaybe<Scalars['String']['input']>;
  responseFileName?: InputMaybe<Scalars['String']['input']>;
  resultPublicDate?: InputMaybe<Scalars['DateTime']['input']>;
  senderUserId?: InputMaybe<Scalars['String']['input']>;
  senderUserInfo?: InputMaybe<Scalars['String']['input']>;
  signContent?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedByCode?: InputMaybe<Scalars['String']['input']>;
};

export type BidPetitionContractorCreateManyBidNotificationInput = {
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  cancelFileId?: InputMaybe<Scalars['String']['input']>;
  cancelFileName?: InputMaybe<Scalars['String']['input']>;
  content?: InputMaybe<Scalars['String']['input']>;
  contractorCode?: InputMaybe<Scalars['String']['input']>;
  contractorId?: InputMaybe<Scalars['String']['input']>;
  contractorName?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdByCode?: InputMaybe<Scalars['String']['input']>;
  draft?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isDecision?: InputMaybe<Scalars['Boolean']['input']>;
  isInternet?: InputMaybe<Scalars['Boolean']['input']>;
  packageCode?: InputMaybe<Scalars['String']['input']>;
  packageId?: InputMaybe<Scalars['String']['input']>;
  packageLotCode?: InputMaybe<Scalars['String']['input']>;
  packageLotName?: InputMaybe<Scalars['String']['input']>;
  packageName?: InputMaybe<Scalars['String']['input']>;
  personReceiveRequest?: InputMaybe<Scalars['String']['input']>;
  petitionTypeCode?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planId?: InputMaybe<Scalars['String']['input']>;
  prepareUserId?: InputMaybe<Scalars['String']['input']>;
  prepareUserInfo?: InputMaybe<Scalars['String']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  requestCode?: InputMaybe<Scalars['String']['input']>;
  requestContent?: InputMaybe<Scalars['String']['input']>;
  requestDate?: InputMaybe<Scalars['DateTime']['input']>;
  requestFileId?: InputMaybe<Scalars['String']['input']>;
  requestFileName?: InputMaybe<Scalars['String']['input']>;
  requestName?: InputMaybe<Scalars['String']['input']>;
  requestVersion?: InputMaybe<Scalars['String']['input']>;
  responseContent?: InputMaybe<Scalars['String']['input']>;
  responseDate?: InputMaybe<Scalars['DateTime']['input']>;
  responseFileId?: InputMaybe<Scalars['String']['input']>;
  responseFileName?: InputMaybe<Scalars['String']['input']>;
  resultPublicDate?: InputMaybe<Scalars['DateTime']['input']>;
  senderUserId?: InputMaybe<Scalars['String']['input']>;
  senderUserInfo?: InputMaybe<Scalars['String']['input']>;
  signContent?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedByCode?: InputMaybe<Scalars['String']['input']>;
};

export type BidPetitionContractorCreateManyBidNotificationInputEnvelope = {
  data: Array<BidPetitionContractorCreateManyBidNotificationInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidPetitionContractorCreateManyContractorInput = {
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  cancelFileId?: InputMaybe<Scalars['String']['input']>;
  cancelFileName?: InputMaybe<Scalars['String']['input']>;
  content?: InputMaybe<Scalars['String']['input']>;
  contractorCode?: InputMaybe<Scalars['String']['input']>;
  contractorName?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdByCode?: InputMaybe<Scalars['String']['input']>;
  draft?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isDecision?: InputMaybe<Scalars['Boolean']['input']>;
  isInternet?: InputMaybe<Scalars['Boolean']['input']>;
  packageCode?: InputMaybe<Scalars['String']['input']>;
  packageId?: InputMaybe<Scalars['String']['input']>;
  packageLotCode?: InputMaybe<Scalars['String']['input']>;
  packageLotName?: InputMaybe<Scalars['String']['input']>;
  packageName?: InputMaybe<Scalars['String']['input']>;
  personReceiveRequest?: InputMaybe<Scalars['String']['input']>;
  petitionTypeCode?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planId?: InputMaybe<Scalars['String']['input']>;
  prepareUserId?: InputMaybe<Scalars['String']['input']>;
  prepareUserInfo?: InputMaybe<Scalars['String']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  requestCode?: InputMaybe<Scalars['String']['input']>;
  requestContent?: InputMaybe<Scalars['String']['input']>;
  requestDate?: InputMaybe<Scalars['DateTime']['input']>;
  requestFileId?: InputMaybe<Scalars['String']['input']>;
  requestFileName?: InputMaybe<Scalars['String']['input']>;
  requestName?: InputMaybe<Scalars['String']['input']>;
  requestVersion?: InputMaybe<Scalars['String']['input']>;
  responseContent?: InputMaybe<Scalars['String']['input']>;
  responseDate?: InputMaybe<Scalars['DateTime']['input']>;
  responseFileId?: InputMaybe<Scalars['String']['input']>;
  responseFileName?: InputMaybe<Scalars['String']['input']>;
  resultPublicDate?: InputMaybe<Scalars['DateTime']['input']>;
  senderUserId?: InputMaybe<Scalars['String']['input']>;
  senderUserInfo?: InputMaybe<Scalars['String']['input']>;
  signContent?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedByCode?: InputMaybe<Scalars['String']['input']>;
};

export type BidPetitionContractorCreateManyContractorInputEnvelope = {
  data: Array<BidPetitionContractorCreateManyContractorInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidPetitionContractorCreateManyPackageInput = {
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  cancelFileId?: InputMaybe<Scalars['String']['input']>;
  cancelFileName?: InputMaybe<Scalars['String']['input']>;
  content?: InputMaybe<Scalars['String']['input']>;
  contractorCode?: InputMaybe<Scalars['String']['input']>;
  contractorId?: InputMaybe<Scalars['String']['input']>;
  contractorName?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdByCode?: InputMaybe<Scalars['String']['input']>;
  draft?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isDecision?: InputMaybe<Scalars['Boolean']['input']>;
  isInternet?: InputMaybe<Scalars['Boolean']['input']>;
  packageCode?: InputMaybe<Scalars['String']['input']>;
  packageLotCode?: InputMaybe<Scalars['String']['input']>;
  packageLotName?: InputMaybe<Scalars['String']['input']>;
  packageName?: InputMaybe<Scalars['String']['input']>;
  personReceiveRequest?: InputMaybe<Scalars['String']['input']>;
  petitionTypeCode?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  planId?: InputMaybe<Scalars['String']['input']>;
  prepareUserId?: InputMaybe<Scalars['String']['input']>;
  prepareUserInfo?: InputMaybe<Scalars['String']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  requestCode?: InputMaybe<Scalars['String']['input']>;
  requestContent?: InputMaybe<Scalars['String']['input']>;
  requestDate?: InputMaybe<Scalars['DateTime']['input']>;
  requestFileId?: InputMaybe<Scalars['String']['input']>;
  requestFileName?: InputMaybe<Scalars['String']['input']>;
  requestName?: InputMaybe<Scalars['String']['input']>;
  requestVersion?: InputMaybe<Scalars['String']['input']>;
  responseContent?: InputMaybe<Scalars['String']['input']>;
  responseDate?: InputMaybe<Scalars['DateTime']['input']>;
  responseFileId?: InputMaybe<Scalars['String']['input']>;
  responseFileName?: InputMaybe<Scalars['String']['input']>;
  resultPublicDate?: InputMaybe<Scalars['DateTime']['input']>;
  senderUserId?: InputMaybe<Scalars['String']['input']>;
  senderUserInfo?: InputMaybe<Scalars['String']['input']>;
  signContent?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedByCode?: InputMaybe<Scalars['String']['input']>;
};

export type BidPetitionContractorCreateManyPackageInputEnvelope = {
  data: Array<BidPetitionContractorCreateManyPackageInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidPetitionContractorCreateManyPlanInput = {
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationId?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  cancelFileId?: InputMaybe<Scalars['String']['input']>;
  cancelFileName?: InputMaybe<Scalars['String']['input']>;
  content?: InputMaybe<Scalars['String']['input']>;
  contractorCode?: InputMaybe<Scalars['String']['input']>;
  contractorId?: InputMaybe<Scalars['String']['input']>;
  contractorName?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdByCode?: InputMaybe<Scalars['String']['input']>;
  draft?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isDecision?: InputMaybe<Scalars['Boolean']['input']>;
  isInternet?: InputMaybe<Scalars['Boolean']['input']>;
  packageCode?: InputMaybe<Scalars['String']['input']>;
  packageId?: InputMaybe<Scalars['String']['input']>;
  packageLotCode?: InputMaybe<Scalars['String']['input']>;
  packageLotName?: InputMaybe<Scalars['String']['input']>;
  packageName?: InputMaybe<Scalars['String']['input']>;
  personReceiveRequest?: InputMaybe<Scalars['String']['input']>;
  petitionTypeCode?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  prepareUserId?: InputMaybe<Scalars['String']['input']>;
  prepareUserInfo?: InputMaybe<Scalars['String']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  requestCode?: InputMaybe<Scalars['String']['input']>;
  requestContent?: InputMaybe<Scalars['String']['input']>;
  requestDate?: InputMaybe<Scalars['DateTime']['input']>;
  requestFileId?: InputMaybe<Scalars['String']['input']>;
  requestFileName?: InputMaybe<Scalars['String']['input']>;
  requestName?: InputMaybe<Scalars['String']['input']>;
  requestVersion?: InputMaybe<Scalars['String']['input']>;
  responseContent?: InputMaybe<Scalars['String']['input']>;
  responseDate?: InputMaybe<Scalars['DateTime']['input']>;
  responseFileId?: InputMaybe<Scalars['String']['input']>;
  responseFileName?: InputMaybe<Scalars['String']['input']>;
  resultPublicDate?: InputMaybe<Scalars['DateTime']['input']>;
  senderUserId?: InputMaybe<Scalars['String']['input']>;
  senderUserInfo?: InputMaybe<Scalars['String']['input']>;
  signContent?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedByCode?: InputMaybe<Scalars['String']['input']>;
};

export type BidPetitionContractorCreateManyPlanInputEnvelope = {
  data: Array<BidPetitionContractorCreateManyPlanInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidPetitionContractorCreateNestedManyWithoutBidNotificationInput = {
  connect?: InputMaybe<Array<BidPetitionContractorWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidPetitionContractorCreateOrConnectWithoutBidNotificationInput>>;
  create?: InputMaybe<Array<BidPetitionContractorCreateWithoutBidNotificationInput>>;
  createMany?: InputMaybe<BidPetitionContractorCreateManyBidNotificationInputEnvelope>;
};

export type BidPetitionContractorCreateNestedManyWithoutContractorInput = {
  connect?: InputMaybe<Array<BidPetitionContractorWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidPetitionContractorCreateOrConnectWithoutContractorInput>>;
  create?: InputMaybe<Array<BidPetitionContractorCreateWithoutContractorInput>>;
  createMany?: InputMaybe<BidPetitionContractorCreateManyContractorInputEnvelope>;
};

export type BidPetitionContractorCreateNestedManyWithoutPackageInput = {
  connect?: InputMaybe<Array<BidPetitionContractorWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidPetitionContractorCreateOrConnectWithoutPackageInput>>;
  create?: InputMaybe<Array<BidPetitionContractorCreateWithoutPackageInput>>;
  createMany?: InputMaybe<BidPetitionContractorCreateManyPackageInputEnvelope>;
};

export type BidPetitionContractorCreateNestedManyWithoutPlanInput = {
  connect?: InputMaybe<Array<BidPetitionContractorWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidPetitionContractorCreateOrConnectWithoutPlanInput>>;
  create?: InputMaybe<Array<BidPetitionContractorCreateWithoutPlanInput>>;
  createMany?: InputMaybe<BidPetitionContractorCreateManyPlanInputEnvelope>;
};

export type BidPetitionContractorCreateOrConnectWithoutBidNotificationInput = {
  create: BidPetitionContractorCreateWithoutBidNotificationInput;
  where: BidPetitionContractorWhereUniqueInput;
};

export type BidPetitionContractorCreateOrConnectWithoutContractorInput = {
  create: BidPetitionContractorCreateWithoutContractorInput;
  where: BidPetitionContractorWhereUniqueInput;
};

export type BidPetitionContractorCreateOrConnectWithoutPackageInput = {
  create: BidPetitionContractorCreateWithoutPackageInput;
  where: BidPetitionContractorWhereUniqueInput;
};

export type BidPetitionContractorCreateOrConnectWithoutPlanInput = {
  create: BidPetitionContractorCreateWithoutPlanInput;
  where: BidPetitionContractorWhereUniqueInput;
};

export type BidPetitionContractorCreateWithoutBidNotificationInput = {
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  cancelFileId?: InputMaybe<Scalars['String']['input']>;
  cancelFileName?: InputMaybe<Scalars['String']['input']>;
  content?: InputMaybe<Scalars['String']['input']>;
  contractor?: InputMaybe<OrganizationCreateNestedOneWithoutBidPetitionContractorsInput>;
  contractorCode?: InputMaybe<Scalars['String']['input']>;
  contractorName?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdByCode?: InputMaybe<Scalars['String']['input']>;
  draft?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isDecision?: InputMaybe<Scalars['Boolean']['input']>;
  isInternet?: InputMaybe<Scalars['Boolean']['input']>;
  package?: InputMaybe<BidPackageCreateNestedOneWithoutPetitionsInput>;
  packageCode?: InputMaybe<Scalars['String']['input']>;
  packageLotCode?: InputMaybe<Scalars['String']['input']>;
  packageLotName?: InputMaybe<Scalars['String']['input']>;
  packageName?: InputMaybe<Scalars['String']['input']>;
  personReceiveRequest?: InputMaybe<Scalars['String']['input']>;
  petitionTypeCode?: InputMaybe<Scalars['String']['input']>;
  plan?: InputMaybe<BidSelectionPlanCreateNestedOneWithoutPetitionsInput>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  prepareUserId?: InputMaybe<Scalars['String']['input']>;
  prepareUserInfo?: InputMaybe<Scalars['String']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  requestCode?: InputMaybe<Scalars['String']['input']>;
  requestContent?: InputMaybe<Scalars['String']['input']>;
  requestDate?: InputMaybe<Scalars['DateTime']['input']>;
  requestFileId?: InputMaybe<Scalars['String']['input']>;
  requestFileName?: InputMaybe<Scalars['String']['input']>;
  requestName?: InputMaybe<Scalars['String']['input']>;
  requestVersion?: InputMaybe<Scalars['String']['input']>;
  responseContent?: InputMaybe<Scalars['String']['input']>;
  responseDate?: InputMaybe<Scalars['DateTime']['input']>;
  responseFileId?: InputMaybe<Scalars['String']['input']>;
  responseFileName?: InputMaybe<Scalars['String']['input']>;
  resultPublicDate?: InputMaybe<Scalars['DateTime']['input']>;
  senderUserId?: InputMaybe<Scalars['String']['input']>;
  senderUserInfo?: InputMaybe<Scalars['String']['input']>;
  signContent?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedByCode?: InputMaybe<Scalars['String']['input']>;
};

export type BidPetitionContractorCreateWithoutContractorInput = {
  bidNotification?: InputMaybe<BidNotificationCreateNestedOneWithoutBidPetitionContractorsInput>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  cancelFileId?: InputMaybe<Scalars['String']['input']>;
  cancelFileName?: InputMaybe<Scalars['String']['input']>;
  content?: InputMaybe<Scalars['String']['input']>;
  contractorCode?: InputMaybe<Scalars['String']['input']>;
  contractorName?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdByCode?: InputMaybe<Scalars['String']['input']>;
  draft?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isDecision?: InputMaybe<Scalars['Boolean']['input']>;
  isInternet?: InputMaybe<Scalars['Boolean']['input']>;
  package?: InputMaybe<BidPackageCreateNestedOneWithoutPetitionsInput>;
  packageCode?: InputMaybe<Scalars['String']['input']>;
  packageLotCode?: InputMaybe<Scalars['String']['input']>;
  packageLotName?: InputMaybe<Scalars['String']['input']>;
  packageName?: InputMaybe<Scalars['String']['input']>;
  personReceiveRequest?: InputMaybe<Scalars['String']['input']>;
  petitionTypeCode?: InputMaybe<Scalars['String']['input']>;
  plan?: InputMaybe<BidSelectionPlanCreateNestedOneWithoutPetitionsInput>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  prepareUserId?: InputMaybe<Scalars['String']['input']>;
  prepareUserInfo?: InputMaybe<Scalars['String']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  requestCode?: InputMaybe<Scalars['String']['input']>;
  requestContent?: InputMaybe<Scalars['String']['input']>;
  requestDate?: InputMaybe<Scalars['DateTime']['input']>;
  requestFileId?: InputMaybe<Scalars['String']['input']>;
  requestFileName?: InputMaybe<Scalars['String']['input']>;
  requestName?: InputMaybe<Scalars['String']['input']>;
  requestVersion?: InputMaybe<Scalars['String']['input']>;
  responseContent?: InputMaybe<Scalars['String']['input']>;
  responseDate?: InputMaybe<Scalars['DateTime']['input']>;
  responseFileId?: InputMaybe<Scalars['String']['input']>;
  responseFileName?: InputMaybe<Scalars['String']['input']>;
  resultPublicDate?: InputMaybe<Scalars['DateTime']['input']>;
  senderUserId?: InputMaybe<Scalars['String']['input']>;
  senderUserInfo?: InputMaybe<Scalars['String']['input']>;
  signContent?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedByCode?: InputMaybe<Scalars['String']['input']>;
};

export type BidPetitionContractorCreateWithoutPackageInput = {
  bidNotification?: InputMaybe<BidNotificationCreateNestedOneWithoutBidPetitionContractorsInput>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  cancelFileId?: InputMaybe<Scalars['String']['input']>;
  cancelFileName?: InputMaybe<Scalars['String']['input']>;
  content?: InputMaybe<Scalars['String']['input']>;
  contractor?: InputMaybe<OrganizationCreateNestedOneWithoutBidPetitionContractorsInput>;
  contractorCode?: InputMaybe<Scalars['String']['input']>;
  contractorName?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdByCode?: InputMaybe<Scalars['String']['input']>;
  draft?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isDecision?: InputMaybe<Scalars['Boolean']['input']>;
  isInternet?: InputMaybe<Scalars['Boolean']['input']>;
  packageCode?: InputMaybe<Scalars['String']['input']>;
  packageLotCode?: InputMaybe<Scalars['String']['input']>;
  packageLotName?: InputMaybe<Scalars['String']['input']>;
  packageName?: InputMaybe<Scalars['String']['input']>;
  personReceiveRequest?: InputMaybe<Scalars['String']['input']>;
  petitionTypeCode?: InputMaybe<Scalars['String']['input']>;
  plan?: InputMaybe<BidSelectionPlanCreateNestedOneWithoutPetitionsInput>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  prepareUserId?: InputMaybe<Scalars['String']['input']>;
  prepareUserInfo?: InputMaybe<Scalars['String']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  requestCode?: InputMaybe<Scalars['String']['input']>;
  requestContent?: InputMaybe<Scalars['String']['input']>;
  requestDate?: InputMaybe<Scalars['DateTime']['input']>;
  requestFileId?: InputMaybe<Scalars['String']['input']>;
  requestFileName?: InputMaybe<Scalars['String']['input']>;
  requestName?: InputMaybe<Scalars['String']['input']>;
  requestVersion?: InputMaybe<Scalars['String']['input']>;
  responseContent?: InputMaybe<Scalars['String']['input']>;
  responseDate?: InputMaybe<Scalars['DateTime']['input']>;
  responseFileId?: InputMaybe<Scalars['String']['input']>;
  responseFileName?: InputMaybe<Scalars['String']['input']>;
  resultPublicDate?: InputMaybe<Scalars['DateTime']['input']>;
  senderUserId?: InputMaybe<Scalars['String']['input']>;
  senderUserInfo?: InputMaybe<Scalars['String']['input']>;
  signContent?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedByCode?: InputMaybe<Scalars['String']['input']>;
};

export type BidPetitionContractorCreateWithoutPlanInput = {
  bidNotification?: InputMaybe<BidNotificationCreateNestedOneWithoutBidPetitionContractorsInput>;
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  cancelFileId?: InputMaybe<Scalars['String']['input']>;
  cancelFileName?: InputMaybe<Scalars['String']['input']>;
  content?: InputMaybe<Scalars['String']['input']>;
  contractor?: InputMaybe<OrganizationCreateNestedOneWithoutBidPetitionContractorsInput>;
  contractorCode?: InputMaybe<Scalars['String']['input']>;
  contractorName?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdByCode?: InputMaybe<Scalars['String']['input']>;
  draft?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isDecision?: InputMaybe<Scalars['Boolean']['input']>;
  isInternet?: InputMaybe<Scalars['Boolean']['input']>;
  package?: InputMaybe<BidPackageCreateNestedOneWithoutPetitionsInput>;
  packageCode?: InputMaybe<Scalars['String']['input']>;
  packageLotCode?: InputMaybe<Scalars['String']['input']>;
  packageLotName?: InputMaybe<Scalars['String']['input']>;
  packageName?: InputMaybe<Scalars['String']['input']>;
  personReceiveRequest?: InputMaybe<Scalars['String']['input']>;
  petitionTypeCode?: InputMaybe<Scalars['String']['input']>;
  planCode?: InputMaybe<Scalars['String']['input']>;
  prepareUserId?: InputMaybe<Scalars['String']['input']>;
  prepareUserInfo?: InputMaybe<Scalars['String']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  requestCode?: InputMaybe<Scalars['String']['input']>;
  requestContent?: InputMaybe<Scalars['String']['input']>;
  requestDate?: InputMaybe<Scalars['DateTime']['input']>;
  requestFileId?: InputMaybe<Scalars['String']['input']>;
  requestFileName?: InputMaybe<Scalars['String']['input']>;
  requestName?: InputMaybe<Scalars['String']['input']>;
  requestVersion?: InputMaybe<Scalars['String']['input']>;
  responseContent?: InputMaybe<Scalars['String']['input']>;
  responseDate?: InputMaybe<Scalars['DateTime']['input']>;
  responseFileId?: InputMaybe<Scalars['String']['input']>;
  responseFileName?: InputMaybe<Scalars['String']['input']>;
  resultPublicDate?: InputMaybe<Scalars['DateTime']['input']>;
  senderUserId?: InputMaybe<Scalars['String']['input']>;
  senderUserInfo?: InputMaybe<Scalars['String']['input']>;
  signContent?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedByCode?: InputMaybe<Scalars['String']['input']>;
};

export type BidPetitionContractorListRelationFilter = {
  every?: InputMaybe<BidPetitionContractorWhereInput>;
  none?: InputMaybe<BidPetitionContractorWhereInput>;
  some?: InputMaybe<BidPetitionContractorWhereInput>;
};

export type BidPetitionContractorOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type BidPetitionContractorOrderByWithRelationInput = {
  bidNotification?: InputMaybe<BidNotificationOrderByWithRelationInput>;
  bidNotificationCode?: InputMaybe<SortOrderInput>;
  bidNotificationId?: InputMaybe<SortOrderInput>;
  bidNotificationVersion?: InputMaybe<SortOrderInput>;
  cancelFileId?: InputMaybe<SortOrderInput>;
  cancelFileName?: InputMaybe<SortOrderInput>;
  content?: InputMaybe<SortOrderInput>;
  contractor?: InputMaybe<OrganizationOrderByWithRelationInput>;
  contractorCode?: InputMaybe<SortOrderInput>;
  contractorId?: InputMaybe<SortOrderInput>;
  contractorName?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  createdByCode?: InputMaybe<SortOrderInput>;
  draft?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  isDecision?: InputMaybe<SortOrderInput>;
  isInternet?: InputMaybe<SortOrderInput>;
  package?: InputMaybe<BidPackageOrderByWithRelationInput>;
  packageCode?: InputMaybe<SortOrderInput>;
  packageId?: InputMaybe<SortOrderInput>;
  packageLotCode?: InputMaybe<SortOrderInput>;
  packageLotName?: InputMaybe<SortOrderInput>;
  packageName?: InputMaybe<SortOrderInput>;
  personReceiveRequest?: InputMaybe<SortOrderInput>;
  petitionTypeCode?: InputMaybe<SortOrderInput>;
  plan?: InputMaybe<BidSelectionPlanOrderByWithRelationInput>;
  planCode?: InputMaybe<SortOrderInput>;
  planId?: InputMaybe<SortOrderInput>;
  prepareUserId?: InputMaybe<SortOrderInput>;
  prepareUserInfo?: InputMaybe<SortOrderInput>;
  reason?: InputMaybe<SortOrderInput>;
  requestCode?: InputMaybe<SortOrderInput>;
  requestContent?: InputMaybe<SortOrderInput>;
  requestDate?: InputMaybe<SortOrderInput>;
  requestFileId?: InputMaybe<SortOrderInput>;
  requestFileName?: InputMaybe<SortOrderInput>;
  requestName?: InputMaybe<SortOrderInput>;
  requestVersion?: InputMaybe<SortOrderInput>;
  responseContent?: InputMaybe<SortOrderInput>;
  responseDate?: InputMaybe<SortOrderInput>;
  responseFileId?: InputMaybe<SortOrderInput>;
  responseFileName?: InputMaybe<SortOrderInput>;
  resultPublicDate?: InputMaybe<SortOrderInput>;
  senderUserId?: InputMaybe<SortOrderInput>;
  senderUserInfo?: InputMaybe<SortOrderInput>;
  signContent?: InputMaybe<SortOrderInput>;
  status?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  updatedByCode?: InputMaybe<SortOrderInput>;
};

export enum BidPetitionContractorScalarFieldEnum {
  BidNotificationCode = 'bidNotificationCode',
  BidNotificationId = 'bidNotificationId',
  BidNotificationVersion = 'bidNotificationVersion',
  CancelFileId = 'cancelFileId',
  CancelFileName = 'cancelFileName',
  Content = 'content',
  ContractorCode = 'contractorCode',
  ContractorId = 'contractorId',
  ContractorName = 'contractorName',
  CreatedAt = 'createdAt',
  CreatedByCode = 'createdByCode',
  Draft = 'draft',
  Id = 'id',
  IsDecision = 'isDecision',
  IsInternet = 'isInternet',
  PackageCode = 'packageCode',
  PackageId = 'packageId',
  PackageLotCode = 'packageLotCode',
  PackageLotName = 'packageLotName',
  PackageName = 'packageName',
  PersonReceiveRequest = 'personReceiveRequest',
  PetitionTypeCode = 'petitionTypeCode',
  PlanCode = 'planCode',
  PlanId = 'planId',
  PrepareUserId = 'prepareUserId',
  PrepareUserInfo = 'prepareUserInfo',
  Reason = 'reason',
  RequestCode = 'requestCode',
  RequestContent = 'requestContent',
  RequestDate = 'requestDate',
  RequestFileId = 'requestFileId',
  RequestFileName = 'requestFileName',
  RequestName = 'requestName',
  RequestVersion = 'requestVersion',
  ResponseContent = 'responseContent',
  ResponseDate = 'responseDate',
  ResponseFileId = 'responseFileId',
  ResponseFileName = 'responseFileName',
  ResultPublicDate = 'resultPublicDate',
  SenderUserId = 'senderUserId',
  SenderUserInfo = 'senderUserInfo',
  SignContent = 'signContent',
  Status = 'status',
  UpdatedAt = 'updatedAt',
  UpdatedByCode = 'updatedByCode'
}

export type BidPetitionContractorScalarWhereInput = {
  AND?: InputMaybe<Array<BidPetitionContractorScalarWhereInput>>;
  NOT?: InputMaybe<Array<BidPetitionContractorScalarWhereInput>>;
  OR?: InputMaybe<Array<BidPetitionContractorScalarWhereInput>>;
  bidNotificationCode?: InputMaybe<StringNullableFilter>;
  bidNotificationId?: InputMaybe<StringNullableFilter>;
  bidNotificationVersion?: InputMaybe<StringNullableFilter>;
  cancelFileId?: InputMaybe<StringNullableFilter>;
  cancelFileName?: InputMaybe<StringNullableFilter>;
  content?: InputMaybe<StringNullableFilter>;
  contractorCode?: InputMaybe<StringNullableFilter>;
  contractorId?: InputMaybe<StringNullableFilter>;
  contractorName?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdByCode?: InputMaybe<StringNullableFilter>;
  draft?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isDecision?: InputMaybe<BoolNullableFilter>;
  isInternet?: InputMaybe<BoolNullableFilter>;
  packageCode?: InputMaybe<StringNullableFilter>;
  packageId?: InputMaybe<StringNullableFilter>;
  packageLotCode?: InputMaybe<StringNullableFilter>;
  packageLotName?: InputMaybe<StringNullableFilter>;
  packageName?: InputMaybe<StringNullableFilter>;
  personReceiveRequest?: InputMaybe<StringNullableFilter>;
  petitionTypeCode?: InputMaybe<StringNullableFilter>;
  planCode?: InputMaybe<StringNullableFilter>;
  planId?: InputMaybe<StringNullableFilter>;
  prepareUserId?: InputMaybe<StringNullableFilter>;
  prepareUserInfo?: InputMaybe<StringNullableFilter>;
  reason?: InputMaybe<StringNullableFilter>;
  requestCode?: InputMaybe<StringNullableFilter>;
  requestContent?: InputMaybe<StringNullableFilter>;
  requestDate?: InputMaybe<DateTimeNullableFilter>;
  requestFileId?: InputMaybe<StringNullableFilter>;
  requestFileName?: InputMaybe<StringNullableFilter>;
  requestName?: InputMaybe<StringNullableFilter>;
  requestVersion?: InputMaybe<StringNullableFilter>;
  responseContent?: InputMaybe<StringNullableFilter>;
  responseDate?: InputMaybe<DateTimeNullableFilter>;
  responseFileId?: InputMaybe<StringNullableFilter>;
  responseFileName?: InputMaybe<StringNullableFilter>;
  resultPublicDate?: InputMaybe<DateTimeNullableFilter>;
  senderUserId?: InputMaybe<StringNullableFilter>;
  senderUserInfo?: InputMaybe<StringNullableFilter>;
  signContent?: InputMaybe<StringNullableFilter>;
  status?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedByCode?: InputMaybe<StringNullableFilter>;
};

export type BidPetitionContractorUpdateInput = {
  bidNotification?: InputMaybe<BidNotificationUpdateOneWithoutBidPetitionContractorsNestedInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractor?: InputMaybe<OrganizationUpdateOneWithoutBidPetitionContractorsNestedInput>;
  contractorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdByCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  draft?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isDecision?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isInternet?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  package?: InputMaybe<BidPackageUpdateOneWithoutPetitionsNestedInput>;
  packageCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  packageLotCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  packageLotName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  packageName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  personReceiveRequest?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  petitionTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  plan?: InputMaybe<BidSelectionPlanUpdateOneWithoutPetitionsNestedInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  prepareUserId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  prepareUserInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestContent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  requestFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  responseContent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  responseDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  responseFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  responseFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  resultPublicDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  senderUserId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  senderUserInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  signContent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedByCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidPetitionContractorUpdateManyMutationInput = {
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdByCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  draft?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isDecision?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isInternet?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  packageCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  packageLotCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  packageLotName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  packageName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  personReceiveRequest?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  petitionTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  prepareUserId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  prepareUserInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestContent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  requestFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  responseContent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  responseDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  responseFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  responseFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  resultPublicDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  senderUserId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  senderUserInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  signContent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedByCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidPetitionContractorUpdateManyWithWhereWithoutBidNotificationInput = {
  data: BidPetitionContractorUpdateManyMutationInput;
  where: BidPetitionContractorScalarWhereInput;
};

export type BidPetitionContractorUpdateManyWithWhereWithoutContractorInput = {
  data: BidPetitionContractorUpdateManyMutationInput;
  where: BidPetitionContractorScalarWhereInput;
};

export type BidPetitionContractorUpdateManyWithWhereWithoutPackageInput = {
  data: BidPetitionContractorUpdateManyMutationInput;
  where: BidPetitionContractorScalarWhereInput;
};

export type BidPetitionContractorUpdateManyWithWhereWithoutPlanInput = {
  data: BidPetitionContractorUpdateManyMutationInput;
  where: BidPetitionContractorScalarWhereInput;
};

export type BidPetitionContractorUpdateManyWithoutBidNotificationNestedInput = {
  connect?: InputMaybe<Array<BidPetitionContractorWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidPetitionContractorCreateOrConnectWithoutBidNotificationInput>>;
  create?: InputMaybe<Array<BidPetitionContractorCreateWithoutBidNotificationInput>>;
  createMany?: InputMaybe<BidPetitionContractorCreateManyBidNotificationInputEnvelope>;
  delete?: InputMaybe<Array<BidPetitionContractorWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidPetitionContractorScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidPetitionContractorWhereUniqueInput>>;
  set?: InputMaybe<Array<BidPetitionContractorWhereUniqueInput>>;
  update?: InputMaybe<Array<BidPetitionContractorUpdateWithWhereUniqueWithoutBidNotificationInput>>;
  updateMany?: InputMaybe<Array<BidPetitionContractorUpdateManyWithWhereWithoutBidNotificationInput>>;
  upsert?: InputMaybe<Array<BidPetitionContractorUpsertWithWhereUniqueWithoutBidNotificationInput>>;
};

export type BidPetitionContractorUpdateManyWithoutContractorNestedInput = {
  connect?: InputMaybe<Array<BidPetitionContractorWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidPetitionContractorCreateOrConnectWithoutContractorInput>>;
  create?: InputMaybe<Array<BidPetitionContractorCreateWithoutContractorInput>>;
  createMany?: InputMaybe<BidPetitionContractorCreateManyContractorInputEnvelope>;
  delete?: InputMaybe<Array<BidPetitionContractorWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidPetitionContractorScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidPetitionContractorWhereUniqueInput>>;
  set?: InputMaybe<Array<BidPetitionContractorWhereUniqueInput>>;
  update?: InputMaybe<Array<BidPetitionContractorUpdateWithWhereUniqueWithoutContractorInput>>;
  updateMany?: InputMaybe<Array<BidPetitionContractorUpdateManyWithWhereWithoutContractorInput>>;
  upsert?: InputMaybe<Array<BidPetitionContractorUpsertWithWhereUniqueWithoutContractorInput>>;
};

export type BidPetitionContractorUpdateManyWithoutPackageNestedInput = {
  connect?: InputMaybe<Array<BidPetitionContractorWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidPetitionContractorCreateOrConnectWithoutPackageInput>>;
  create?: InputMaybe<Array<BidPetitionContractorCreateWithoutPackageInput>>;
  createMany?: InputMaybe<BidPetitionContractorCreateManyPackageInputEnvelope>;
  delete?: InputMaybe<Array<BidPetitionContractorWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidPetitionContractorScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidPetitionContractorWhereUniqueInput>>;
  set?: InputMaybe<Array<BidPetitionContractorWhereUniqueInput>>;
  update?: InputMaybe<Array<BidPetitionContractorUpdateWithWhereUniqueWithoutPackageInput>>;
  updateMany?: InputMaybe<Array<BidPetitionContractorUpdateManyWithWhereWithoutPackageInput>>;
  upsert?: InputMaybe<Array<BidPetitionContractorUpsertWithWhereUniqueWithoutPackageInput>>;
};

export type BidPetitionContractorUpdateManyWithoutPlanNestedInput = {
  connect?: InputMaybe<Array<BidPetitionContractorWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidPetitionContractorCreateOrConnectWithoutPlanInput>>;
  create?: InputMaybe<Array<BidPetitionContractorCreateWithoutPlanInput>>;
  createMany?: InputMaybe<BidPetitionContractorCreateManyPlanInputEnvelope>;
  delete?: InputMaybe<Array<BidPetitionContractorWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidPetitionContractorScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidPetitionContractorWhereUniqueInput>>;
  set?: InputMaybe<Array<BidPetitionContractorWhereUniqueInput>>;
  update?: InputMaybe<Array<BidPetitionContractorUpdateWithWhereUniqueWithoutPlanInput>>;
  updateMany?: InputMaybe<Array<BidPetitionContractorUpdateManyWithWhereWithoutPlanInput>>;
  upsert?: InputMaybe<Array<BidPetitionContractorUpsertWithWhereUniqueWithoutPlanInput>>;
};

export type BidPetitionContractorUpdateWithWhereUniqueWithoutBidNotificationInput = {
  data: BidPetitionContractorUpdateWithoutBidNotificationInput;
  where: BidPetitionContractorWhereUniqueInput;
};

export type BidPetitionContractorUpdateWithWhereUniqueWithoutContractorInput = {
  data: BidPetitionContractorUpdateWithoutContractorInput;
  where: BidPetitionContractorWhereUniqueInput;
};

export type BidPetitionContractorUpdateWithWhereUniqueWithoutPackageInput = {
  data: BidPetitionContractorUpdateWithoutPackageInput;
  where: BidPetitionContractorWhereUniqueInput;
};

export type BidPetitionContractorUpdateWithWhereUniqueWithoutPlanInput = {
  data: BidPetitionContractorUpdateWithoutPlanInput;
  where: BidPetitionContractorWhereUniqueInput;
};

export type BidPetitionContractorUpdateWithoutBidNotificationInput = {
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractor?: InputMaybe<OrganizationUpdateOneWithoutBidPetitionContractorsNestedInput>;
  contractorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdByCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  draft?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isDecision?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isInternet?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  package?: InputMaybe<BidPackageUpdateOneWithoutPetitionsNestedInput>;
  packageCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  packageLotCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  packageLotName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  packageName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  personReceiveRequest?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  petitionTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  plan?: InputMaybe<BidSelectionPlanUpdateOneWithoutPetitionsNestedInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  prepareUserId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  prepareUserInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestContent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  requestFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  responseContent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  responseDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  responseFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  responseFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  resultPublicDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  senderUserId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  senderUserInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  signContent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedByCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidPetitionContractorUpdateWithoutContractorInput = {
  bidNotification?: InputMaybe<BidNotificationUpdateOneWithoutBidPetitionContractorsNestedInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdByCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  draft?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isDecision?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isInternet?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  package?: InputMaybe<BidPackageUpdateOneWithoutPetitionsNestedInput>;
  packageCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  packageLotCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  packageLotName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  packageName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  personReceiveRequest?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  petitionTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  plan?: InputMaybe<BidSelectionPlanUpdateOneWithoutPetitionsNestedInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  prepareUserId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  prepareUserInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestContent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  requestFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  responseContent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  responseDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  responseFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  responseFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  resultPublicDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  senderUserId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  senderUserInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  signContent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedByCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidPetitionContractorUpdateWithoutPackageInput = {
  bidNotification?: InputMaybe<BidNotificationUpdateOneWithoutBidPetitionContractorsNestedInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractor?: InputMaybe<OrganizationUpdateOneWithoutBidPetitionContractorsNestedInput>;
  contractorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdByCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  draft?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isDecision?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isInternet?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  packageCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  packageLotCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  packageLotName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  packageName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  personReceiveRequest?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  petitionTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  plan?: InputMaybe<BidSelectionPlanUpdateOneWithoutPetitionsNestedInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  prepareUserId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  prepareUserInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestContent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  requestFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  responseContent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  responseDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  responseFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  responseFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  resultPublicDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  senderUserId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  senderUserInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  signContent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedByCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidPetitionContractorUpdateWithoutPlanInput = {
  bidNotification?: InputMaybe<BidNotificationUpdateOneWithoutBidPetitionContractorsNestedInput>;
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cancelFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractor?: InputMaybe<OrganizationUpdateOneWithoutBidPetitionContractorsNestedInput>;
  contractorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdByCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  draft?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isDecision?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isInternet?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  package?: InputMaybe<BidPackageUpdateOneWithoutPetitionsNestedInput>;
  packageCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  packageLotCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  packageLotName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  packageName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  personReceiveRequest?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  petitionTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  prepareUserId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  prepareUserInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestContent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  requestFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requestVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  responseContent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  responseDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  responseFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  responseFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  resultPublicDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  senderUserId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  senderUserInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  signContent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedByCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidPetitionContractorUpsertWithWhereUniqueWithoutBidNotificationInput = {
  create: BidPetitionContractorCreateWithoutBidNotificationInput;
  update: BidPetitionContractorUpdateWithoutBidNotificationInput;
  where: BidPetitionContractorWhereUniqueInput;
};

export type BidPetitionContractorUpsertWithWhereUniqueWithoutContractorInput = {
  create: BidPetitionContractorCreateWithoutContractorInput;
  update: BidPetitionContractorUpdateWithoutContractorInput;
  where: BidPetitionContractorWhereUniqueInput;
};

export type BidPetitionContractorUpsertWithWhereUniqueWithoutPackageInput = {
  create: BidPetitionContractorCreateWithoutPackageInput;
  update: BidPetitionContractorUpdateWithoutPackageInput;
  where: BidPetitionContractorWhereUniqueInput;
};

export type BidPetitionContractorUpsertWithWhereUniqueWithoutPlanInput = {
  create: BidPetitionContractorCreateWithoutPlanInput;
  update: BidPetitionContractorUpdateWithoutPlanInput;
  where: BidPetitionContractorWhereUniqueInput;
};

export type BidPetitionContractorWhereInput = {
  AND?: InputMaybe<Array<BidPetitionContractorWhereInput>>;
  NOT?: InputMaybe<Array<BidPetitionContractorWhereInput>>;
  OR?: InputMaybe<Array<BidPetitionContractorWhereInput>>;
  bidNotification?: InputMaybe<BidNotificationWhereInput>;
  bidNotificationCode?: InputMaybe<StringNullableFilter>;
  bidNotificationId?: InputMaybe<StringNullableFilter>;
  bidNotificationVersion?: InputMaybe<StringNullableFilter>;
  cancelFileId?: InputMaybe<StringNullableFilter>;
  cancelFileName?: InputMaybe<StringNullableFilter>;
  content?: InputMaybe<StringNullableFilter>;
  contractor?: InputMaybe<OrganizationWhereInput>;
  contractorCode?: InputMaybe<StringNullableFilter>;
  contractorId?: InputMaybe<StringNullableFilter>;
  contractorName?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdByCode?: InputMaybe<StringNullableFilter>;
  draft?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isDecision?: InputMaybe<BoolNullableFilter>;
  isInternet?: InputMaybe<BoolNullableFilter>;
  package?: InputMaybe<BidPackageWhereInput>;
  packageCode?: InputMaybe<StringNullableFilter>;
  packageId?: InputMaybe<StringNullableFilter>;
  packageLotCode?: InputMaybe<StringNullableFilter>;
  packageLotName?: InputMaybe<StringNullableFilter>;
  packageName?: InputMaybe<StringNullableFilter>;
  personReceiveRequest?: InputMaybe<StringNullableFilter>;
  petitionTypeCode?: InputMaybe<StringNullableFilter>;
  plan?: InputMaybe<BidSelectionPlanWhereInput>;
  planCode?: InputMaybe<StringNullableFilter>;
  planId?: InputMaybe<StringNullableFilter>;
  prepareUserId?: InputMaybe<StringNullableFilter>;
  prepareUserInfo?: InputMaybe<StringNullableFilter>;
  reason?: InputMaybe<StringNullableFilter>;
  requestCode?: InputMaybe<StringNullableFilter>;
  requestContent?: InputMaybe<StringNullableFilter>;
  requestDate?: InputMaybe<DateTimeNullableFilter>;
  requestFileId?: InputMaybe<StringNullableFilter>;
  requestFileName?: InputMaybe<StringNullableFilter>;
  requestName?: InputMaybe<StringNullableFilter>;
  requestVersion?: InputMaybe<StringNullableFilter>;
  responseContent?: InputMaybe<StringNullableFilter>;
  responseDate?: InputMaybe<DateTimeNullableFilter>;
  responseFileId?: InputMaybe<StringNullableFilter>;
  responseFileName?: InputMaybe<StringNullableFilter>;
  resultPublicDate?: InputMaybe<DateTimeNullableFilter>;
  senderUserId?: InputMaybe<StringNullableFilter>;
  senderUserInfo?: InputMaybe<StringNullableFilter>;
  signContent?: InputMaybe<StringNullableFilter>;
  status?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedByCode?: InputMaybe<StringNullableFilter>;
};

export type BidPetitionContractorWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']['input']>;
};

export type BidPreConference = {
  __typename?: 'BidPreConference';
  bidNotification?: Maybe<BidNotification>;
  bidNotificationCode?: Maybe<Scalars['String']['output']>;
  bidNotificationId?: Maybe<Scalars['String']['output']>;
  bidNotificationVersion?: Maybe<Scalars['String']['output']>;
  content?: Maybe<Scalars['String']['output']>;
  contentFileId?: Maybe<Scalars['String']['output']>;
  contentFileName?: Maybe<Scalars['String']['output']>;
  contentPublicDate?: Maybe<Scalars['DateTime']['output']>;
  id: Scalars['String']['output'];
  report?: Maybe<Scalars['String']['output']>;
  reportFileId?: Maybe<Scalars['String']['output']>;
  reportFileName?: Maybe<Scalars['String']['output']>;
  reportPublicDate?: Maybe<Scalars['DateTime']['output']>;
};

export type BidPreConferenceCreateManyBidNotificationInput = {
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  content?: InputMaybe<Scalars['String']['input']>;
  contentFileId?: InputMaybe<Scalars['String']['input']>;
  contentFileName?: InputMaybe<Scalars['String']['input']>;
  contentPublicDate?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  report?: InputMaybe<Scalars['String']['input']>;
  reportFileId?: InputMaybe<Scalars['String']['input']>;
  reportFileName?: InputMaybe<Scalars['String']['input']>;
  reportPublicDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type BidPreConferenceCreateManyBidNotificationInputEnvelope = {
  data: Array<BidPreConferenceCreateManyBidNotificationInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidPreConferenceCreateNestedManyWithoutBidNotificationInput = {
  connect?: InputMaybe<Array<BidPreConferenceWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidPreConferenceCreateOrConnectWithoutBidNotificationInput>>;
  create?: InputMaybe<Array<BidPreConferenceCreateWithoutBidNotificationInput>>;
  createMany?: InputMaybe<BidPreConferenceCreateManyBidNotificationInputEnvelope>;
};

export type BidPreConferenceCreateOrConnectWithoutBidNotificationInput = {
  create: BidPreConferenceCreateWithoutBidNotificationInput;
  where: BidPreConferenceWhereUniqueInput;
};

export type BidPreConferenceCreateWithoutBidNotificationInput = {
  bidNotificationCode?: InputMaybe<Scalars['String']['input']>;
  bidNotificationVersion?: InputMaybe<Scalars['String']['input']>;
  content?: InputMaybe<Scalars['String']['input']>;
  contentFileId?: InputMaybe<Scalars['String']['input']>;
  contentFileName?: InputMaybe<Scalars['String']['input']>;
  contentPublicDate?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  report?: InputMaybe<Scalars['String']['input']>;
  reportFileId?: InputMaybe<Scalars['String']['input']>;
  reportFileName?: InputMaybe<Scalars['String']['input']>;
  reportPublicDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type BidPreConferenceListRelationFilter = {
  every?: InputMaybe<BidPreConferenceWhereInput>;
  none?: InputMaybe<BidPreConferenceWhereInput>;
  some?: InputMaybe<BidPreConferenceWhereInput>;
};

export type BidPreConferenceOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type BidPreConferenceScalarWhereInput = {
  AND?: InputMaybe<Array<BidPreConferenceScalarWhereInput>>;
  NOT?: InputMaybe<Array<BidPreConferenceScalarWhereInput>>;
  OR?: InputMaybe<Array<BidPreConferenceScalarWhereInput>>;
  bidNotificationCode?: InputMaybe<StringNullableFilter>;
  bidNotificationId?: InputMaybe<StringNullableFilter>;
  bidNotificationVersion?: InputMaybe<StringNullableFilter>;
  content?: InputMaybe<StringNullableFilter>;
  contentFileId?: InputMaybe<StringNullableFilter>;
  contentFileName?: InputMaybe<StringNullableFilter>;
  contentPublicDate?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  report?: InputMaybe<StringNullableFilter>;
  reportFileId?: InputMaybe<StringNullableFilter>;
  reportFileName?: InputMaybe<StringNullableFilter>;
  reportPublicDate?: InputMaybe<DateTimeNullableFilter>;
};

export type BidPreConferenceUpdateManyMutationInput = {
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contentFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contentFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contentPublicDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  report?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reportFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reportFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reportPublicDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type BidPreConferenceUpdateManyWithWhereWithoutBidNotificationInput = {
  data: BidPreConferenceUpdateManyMutationInput;
  where: BidPreConferenceScalarWhereInput;
};

export type BidPreConferenceUpdateManyWithoutBidNotificationNestedInput = {
  connect?: InputMaybe<Array<BidPreConferenceWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidPreConferenceCreateOrConnectWithoutBidNotificationInput>>;
  create?: InputMaybe<Array<BidPreConferenceCreateWithoutBidNotificationInput>>;
  createMany?: InputMaybe<BidPreConferenceCreateManyBidNotificationInputEnvelope>;
  delete?: InputMaybe<Array<BidPreConferenceWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidPreConferenceScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidPreConferenceWhereUniqueInput>>;
  set?: InputMaybe<Array<BidPreConferenceWhereUniqueInput>>;
  update?: InputMaybe<Array<BidPreConferenceUpdateWithWhereUniqueWithoutBidNotificationInput>>;
  updateMany?: InputMaybe<Array<BidPreConferenceUpdateManyWithWhereWithoutBidNotificationInput>>;
  upsert?: InputMaybe<Array<BidPreConferenceUpsertWithWhereUniqueWithoutBidNotificationInput>>;
};

export type BidPreConferenceUpdateWithWhereUniqueWithoutBidNotificationInput = {
  data: BidPreConferenceUpdateWithoutBidNotificationInput;
  where: BidPreConferenceWhereUniqueInput;
};

export type BidPreConferenceUpdateWithoutBidNotificationInput = {
  bidNotificationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidNotificationVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contentFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contentFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contentPublicDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  report?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reportFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reportFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reportPublicDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type BidPreConferenceUpsertWithWhereUniqueWithoutBidNotificationInput = {
  create: BidPreConferenceCreateWithoutBidNotificationInput;
  update: BidPreConferenceUpdateWithoutBidNotificationInput;
  where: BidPreConferenceWhereUniqueInput;
};

export type BidPreConferenceWhereInput = {
  AND?: InputMaybe<Array<BidPreConferenceWhereInput>>;
  NOT?: InputMaybe<Array<BidPreConferenceWhereInput>>;
  OR?: InputMaybe<Array<BidPreConferenceWhereInput>>;
  bidNotification?: InputMaybe<BidNotificationWhereInput>;
  bidNotificationCode?: InputMaybe<StringNullableFilter>;
  bidNotificationId?: InputMaybe<StringNullableFilter>;
  bidNotificationVersion?: InputMaybe<StringNullableFilter>;
  content?: InputMaybe<StringNullableFilter>;
  contentFileId?: InputMaybe<StringNullableFilter>;
  contentFileName?: InputMaybe<StringNullableFilter>;
  contentPublicDate?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  report?: InputMaybe<StringNullableFilter>;
  reportFileId?: InputMaybe<StringNullableFilter>;
  reportFileName?: InputMaybe<StringNullableFilter>;
  reportPublicDate?: InputMaybe<DateTimeNullableFilter>;
};

export type BidPreConferenceWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']['input']>;
};

export type BidSelectionPlan = {
  __typename?: 'BidSelectionPlan';
  _count: BidSelectionPlanCount;
  bidLotResults?: Maybe<Array<BidLotResult>>;
  bidNotifications?: Maybe<Array<BidNotification>>;
  bidPackages?: Maybe<Array<BidPackage>>;
  code?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  decisionAgency?: Maybe<Scalars['String']['output']>;
  decisionDate?: Maybe<Scalars['DateTime']['output']>;
  decisionFileId?: Maybe<Scalars['String']['output']>;
  decisionFileName?: Maybe<Scalars['String']['output']>;
  decisionNo?: Maybe<Scalars['String']['output']>;
  deletedAt?: Maybe<Scalars['DateTime']['output']>;
  id: Scalars['String']['output'];
  investor?: Maybe<Organization>;
  investorCode?: Maybe<Scalars['String']['output']>;
  investorId?: Maybe<Scalars['String']['output']>;
  investorName?: Maybe<Scalars['String']['output']>;
  isLatest: Scalars['Boolean']['output'];
  name?: Maybe<Scalars['String']['output']>;
  numberOfBidPackage?: Maybe<Scalars['Int']['output']>;
  petitions?: Maybe<Array<BidPetitionContractor>>;
  procuringEntity?: Maybe<Organization>;
  procuringEntityCode?: Maybe<Scalars['String']['output']>;
  procuringEntityId?: Maybe<Scalars['String']['output']>;
  procuringEntityName?: Maybe<Scalars['String']['output']>;
  project?: Maybe<Project>;
  projectId?: Maybe<Scalars['String']['output']>;
  publishedAt?: Maybe<Scalars['DateTime']['output']>;
  status?: Maybe<CatBidSelectionPlanStatus>;
  statusCode?: Maybe<Scalars['String']['output']>;
  statusId?: Maybe<Scalars['String']['output']>;
  totalInvestment?: Maybe<Scalars['Decimal']['output']>;
  totalInvestmentEx?: Maybe<Scalars['Decimal']['output']>;
  totalInvestmentOld?: Maybe<Scalars['String']['output']>;
  totalInvestmentUnit?: Maybe<Scalars['String']['output']>;
  type?: Maybe<CatBidSelectionPlanType>;
  typeCode?: Maybe<Scalars['String']['output']>;
  typeId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  updatedBy?: Maybe<Scalars['String']['output']>;
  version?: Maybe<Scalars['String']['output']>;
};

export type BidSelectionPlanConnection = {
  __typename?: 'BidSelectionPlanConnection';
  nodes?: Maybe<Array<BidSelectionPlan>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type BidSelectionPlanCount = {
  __typename?: 'BidSelectionPlanCount';
  bidLotResults: Scalars['Int']['output'];
  bidNotifications: Scalars['Int']['output'];
  bidPackages: Scalars['Int']['output'];
  petitions: Scalars['Int']['output'];
};

export type BidSelectionPlanCreateInput = {
  bidLotResults?: InputMaybe<BidLotResultCreateNestedManyWithoutBidSelectionPlanInput>;
  bidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutBidSelectionPlanInput>;
  bidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutBidSelectionPlanInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investor?: InputMaybe<OrganizationCreateNestedOneWithoutInvestorBidSelectionPlansInput>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  numberOfBidPackage?: InputMaybe<Scalars['Int']['input']>;
  petitions?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutPlanInput>;
  procuringEntity?: InputMaybe<OrganizationCreateNestedOneWithoutProcuringEntityBidSelectionPlansInput>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  project?: InputMaybe<ProjectCreateNestedOneWithoutBidSelectionPlansInput>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  status?: InputMaybe<CatBidSelectionPlanStatusCreateNestedOneWithoutBidSelectionPlansInput>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  totalInvestment?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentEx?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentOld?: InputMaybe<Scalars['String']['input']>;
  totalInvestmentUnit?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<CatBidSelectionPlanTypeCreateNestedOneWithoutBidSelectionPlansInput>;
  typeCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidSelectionPlanCreateManyInvestorInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  numberOfBidPackage?: InputMaybe<Scalars['Int']['input']>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityId?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  projectId?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  statusId?: InputMaybe<Scalars['String']['input']>;
  totalInvestment?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentEx?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentOld?: InputMaybe<Scalars['String']['input']>;
  totalInvestmentUnit?: InputMaybe<Scalars['String']['input']>;
  typeCode?: InputMaybe<Scalars['String']['input']>;
  typeId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidSelectionPlanCreateManyInvestorInputEnvelope = {
  data: Array<BidSelectionPlanCreateManyInvestorInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidSelectionPlanCreateManyProcuringEntityInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorId?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  numberOfBidPackage?: InputMaybe<Scalars['Int']['input']>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  projectId?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  statusId?: InputMaybe<Scalars['String']['input']>;
  totalInvestment?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentEx?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentOld?: InputMaybe<Scalars['String']['input']>;
  totalInvestmentUnit?: InputMaybe<Scalars['String']['input']>;
  typeCode?: InputMaybe<Scalars['String']['input']>;
  typeId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidSelectionPlanCreateManyProcuringEntityInputEnvelope = {
  data: Array<BidSelectionPlanCreateManyProcuringEntityInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidSelectionPlanCreateManyProjectInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorId?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  numberOfBidPackage?: InputMaybe<Scalars['Int']['input']>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityId?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  statusId?: InputMaybe<Scalars['String']['input']>;
  totalInvestment?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentEx?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentOld?: InputMaybe<Scalars['String']['input']>;
  totalInvestmentUnit?: InputMaybe<Scalars['String']['input']>;
  typeCode?: InputMaybe<Scalars['String']['input']>;
  typeId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidSelectionPlanCreateManyProjectInputEnvelope = {
  data: Array<BidSelectionPlanCreateManyProjectInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidSelectionPlanCreateManyStatusInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorId?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  numberOfBidPackage?: InputMaybe<Scalars['Int']['input']>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityId?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  projectId?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  totalInvestment?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentEx?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentOld?: InputMaybe<Scalars['String']['input']>;
  totalInvestmentUnit?: InputMaybe<Scalars['String']['input']>;
  typeCode?: InputMaybe<Scalars['String']['input']>;
  typeId?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidSelectionPlanCreateManyStatusInputEnvelope = {
  data: Array<BidSelectionPlanCreateManyStatusInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidSelectionPlanCreateManyTypeInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorId?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  numberOfBidPackage?: InputMaybe<Scalars['Int']['input']>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityId?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  projectId?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  statusId?: InputMaybe<Scalars['String']['input']>;
  totalInvestment?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentEx?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentOld?: InputMaybe<Scalars['String']['input']>;
  totalInvestmentUnit?: InputMaybe<Scalars['String']['input']>;
  typeCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidSelectionPlanCreateManyTypeInputEnvelope = {
  data: Array<BidSelectionPlanCreateManyTypeInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BidSelectionPlanCreateNestedManyWithoutInvestorInput = {
  connect?: InputMaybe<Array<BidSelectionPlanWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidSelectionPlanCreateOrConnectWithoutInvestorInput>>;
  create?: InputMaybe<Array<BidSelectionPlanCreateWithoutInvestorInput>>;
  createMany?: InputMaybe<BidSelectionPlanCreateManyInvestorInputEnvelope>;
};

export type BidSelectionPlanCreateNestedManyWithoutProcuringEntityInput = {
  connect?: InputMaybe<Array<BidSelectionPlanWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidSelectionPlanCreateOrConnectWithoutProcuringEntityInput>>;
  create?: InputMaybe<Array<BidSelectionPlanCreateWithoutProcuringEntityInput>>;
  createMany?: InputMaybe<BidSelectionPlanCreateManyProcuringEntityInputEnvelope>;
};

export type BidSelectionPlanCreateNestedManyWithoutProjectInput = {
  connect?: InputMaybe<Array<BidSelectionPlanWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidSelectionPlanCreateOrConnectWithoutProjectInput>>;
  create?: InputMaybe<Array<BidSelectionPlanCreateWithoutProjectInput>>;
  createMany?: InputMaybe<BidSelectionPlanCreateManyProjectInputEnvelope>;
};

export type BidSelectionPlanCreateNestedManyWithoutStatusInput = {
  connect?: InputMaybe<Array<BidSelectionPlanWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidSelectionPlanCreateOrConnectWithoutStatusInput>>;
  create?: InputMaybe<Array<BidSelectionPlanCreateWithoutStatusInput>>;
  createMany?: InputMaybe<BidSelectionPlanCreateManyStatusInputEnvelope>;
};

export type BidSelectionPlanCreateNestedManyWithoutTypeInput = {
  connect?: InputMaybe<Array<BidSelectionPlanWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidSelectionPlanCreateOrConnectWithoutTypeInput>>;
  create?: InputMaybe<Array<BidSelectionPlanCreateWithoutTypeInput>>;
  createMany?: InputMaybe<BidSelectionPlanCreateManyTypeInputEnvelope>;
};

export type BidSelectionPlanCreateNestedOneWithoutBidLotResultsInput = {
  connect?: InputMaybe<BidSelectionPlanWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidSelectionPlanCreateOrConnectWithoutBidLotResultsInput>;
  create?: InputMaybe<BidSelectionPlanCreateWithoutBidLotResultsInput>;
};

export type BidSelectionPlanCreateNestedOneWithoutBidNotificationsInput = {
  connect?: InputMaybe<BidSelectionPlanWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidSelectionPlanCreateOrConnectWithoutBidNotificationsInput>;
  create?: InputMaybe<BidSelectionPlanCreateWithoutBidNotificationsInput>;
};

export type BidSelectionPlanCreateNestedOneWithoutBidPackagesInput = {
  connect?: InputMaybe<BidSelectionPlanWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidSelectionPlanCreateOrConnectWithoutBidPackagesInput>;
  create?: InputMaybe<BidSelectionPlanCreateWithoutBidPackagesInput>;
};

export type BidSelectionPlanCreateNestedOneWithoutPetitionsInput = {
  connect?: InputMaybe<BidSelectionPlanWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidSelectionPlanCreateOrConnectWithoutPetitionsInput>;
  create?: InputMaybe<BidSelectionPlanCreateWithoutPetitionsInput>;
};

export type BidSelectionPlanCreateOrConnectWithoutBidLotResultsInput = {
  create: BidSelectionPlanCreateWithoutBidLotResultsInput;
  where: BidSelectionPlanWhereUniqueInput;
};

export type BidSelectionPlanCreateOrConnectWithoutBidNotificationsInput = {
  create: BidSelectionPlanCreateWithoutBidNotificationsInput;
  where: BidSelectionPlanWhereUniqueInput;
};

export type BidSelectionPlanCreateOrConnectWithoutBidPackagesInput = {
  create: BidSelectionPlanCreateWithoutBidPackagesInput;
  where: BidSelectionPlanWhereUniqueInput;
};

export type BidSelectionPlanCreateOrConnectWithoutInvestorInput = {
  create: BidSelectionPlanCreateWithoutInvestorInput;
  where: BidSelectionPlanWhereUniqueInput;
};

export type BidSelectionPlanCreateOrConnectWithoutPetitionsInput = {
  create: BidSelectionPlanCreateWithoutPetitionsInput;
  where: BidSelectionPlanWhereUniqueInput;
};

export type BidSelectionPlanCreateOrConnectWithoutProcuringEntityInput = {
  create: BidSelectionPlanCreateWithoutProcuringEntityInput;
  where: BidSelectionPlanWhereUniqueInput;
};

export type BidSelectionPlanCreateOrConnectWithoutProjectInput = {
  create: BidSelectionPlanCreateWithoutProjectInput;
  where: BidSelectionPlanWhereUniqueInput;
};

export type BidSelectionPlanCreateOrConnectWithoutStatusInput = {
  create: BidSelectionPlanCreateWithoutStatusInput;
  where: BidSelectionPlanWhereUniqueInput;
};

export type BidSelectionPlanCreateOrConnectWithoutTypeInput = {
  create: BidSelectionPlanCreateWithoutTypeInput;
  where: BidSelectionPlanWhereUniqueInput;
};

export type BidSelectionPlanCreateWithoutBidLotResultsInput = {
  bidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutBidSelectionPlanInput>;
  bidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutBidSelectionPlanInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investor?: InputMaybe<OrganizationCreateNestedOneWithoutInvestorBidSelectionPlansInput>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  numberOfBidPackage?: InputMaybe<Scalars['Int']['input']>;
  petitions?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutPlanInput>;
  procuringEntity?: InputMaybe<OrganizationCreateNestedOneWithoutProcuringEntityBidSelectionPlansInput>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  project?: InputMaybe<ProjectCreateNestedOneWithoutBidSelectionPlansInput>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  status?: InputMaybe<CatBidSelectionPlanStatusCreateNestedOneWithoutBidSelectionPlansInput>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  totalInvestment?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentEx?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentOld?: InputMaybe<Scalars['String']['input']>;
  totalInvestmentUnit?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<CatBidSelectionPlanTypeCreateNestedOneWithoutBidSelectionPlansInput>;
  typeCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidSelectionPlanCreateWithoutBidNotificationsInput = {
  bidLotResults?: InputMaybe<BidLotResultCreateNestedManyWithoutBidSelectionPlanInput>;
  bidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutBidSelectionPlanInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investor?: InputMaybe<OrganizationCreateNestedOneWithoutInvestorBidSelectionPlansInput>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  numberOfBidPackage?: InputMaybe<Scalars['Int']['input']>;
  petitions?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutPlanInput>;
  procuringEntity?: InputMaybe<OrganizationCreateNestedOneWithoutProcuringEntityBidSelectionPlansInput>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  project?: InputMaybe<ProjectCreateNestedOneWithoutBidSelectionPlansInput>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  status?: InputMaybe<CatBidSelectionPlanStatusCreateNestedOneWithoutBidSelectionPlansInput>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  totalInvestment?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentEx?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentOld?: InputMaybe<Scalars['String']['input']>;
  totalInvestmentUnit?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<CatBidSelectionPlanTypeCreateNestedOneWithoutBidSelectionPlansInput>;
  typeCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidSelectionPlanCreateWithoutBidPackagesInput = {
  bidLotResults?: InputMaybe<BidLotResultCreateNestedManyWithoutBidSelectionPlanInput>;
  bidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutBidSelectionPlanInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investor?: InputMaybe<OrganizationCreateNestedOneWithoutInvestorBidSelectionPlansInput>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  numberOfBidPackage?: InputMaybe<Scalars['Int']['input']>;
  petitions?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutPlanInput>;
  procuringEntity?: InputMaybe<OrganizationCreateNestedOneWithoutProcuringEntityBidSelectionPlansInput>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  project?: InputMaybe<ProjectCreateNestedOneWithoutBidSelectionPlansInput>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  status?: InputMaybe<CatBidSelectionPlanStatusCreateNestedOneWithoutBidSelectionPlansInput>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  totalInvestment?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentEx?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentOld?: InputMaybe<Scalars['String']['input']>;
  totalInvestmentUnit?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<CatBidSelectionPlanTypeCreateNestedOneWithoutBidSelectionPlansInput>;
  typeCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidSelectionPlanCreateWithoutInvestorInput = {
  bidLotResults?: InputMaybe<BidLotResultCreateNestedManyWithoutBidSelectionPlanInput>;
  bidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutBidSelectionPlanInput>;
  bidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutBidSelectionPlanInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  numberOfBidPackage?: InputMaybe<Scalars['Int']['input']>;
  petitions?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutPlanInput>;
  procuringEntity?: InputMaybe<OrganizationCreateNestedOneWithoutProcuringEntityBidSelectionPlansInput>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  project?: InputMaybe<ProjectCreateNestedOneWithoutBidSelectionPlansInput>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  status?: InputMaybe<CatBidSelectionPlanStatusCreateNestedOneWithoutBidSelectionPlansInput>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  totalInvestment?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentEx?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentOld?: InputMaybe<Scalars['String']['input']>;
  totalInvestmentUnit?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<CatBidSelectionPlanTypeCreateNestedOneWithoutBidSelectionPlansInput>;
  typeCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidSelectionPlanCreateWithoutPetitionsInput = {
  bidLotResults?: InputMaybe<BidLotResultCreateNestedManyWithoutBidSelectionPlanInput>;
  bidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutBidSelectionPlanInput>;
  bidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutBidSelectionPlanInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investor?: InputMaybe<OrganizationCreateNestedOneWithoutInvestorBidSelectionPlansInput>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  numberOfBidPackage?: InputMaybe<Scalars['Int']['input']>;
  procuringEntity?: InputMaybe<OrganizationCreateNestedOneWithoutProcuringEntityBidSelectionPlansInput>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  project?: InputMaybe<ProjectCreateNestedOneWithoutBidSelectionPlansInput>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  status?: InputMaybe<CatBidSelectionPlanStatusCreateNestedOneWithoutBidSelectionPlansInput>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  totalInvestment?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentEx?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentOld?: InputMaybe<Scalars['String']['input']>;
  totalInvestmentUnit?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<CatBidSelectionPlanTypeCreateNestedOneWithoutBidSelectionPlansInput>;
  typeCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidSelectionPlanCreateWithoutProcuringEntityInput = {
  bidLotResults?: InputMaybe<BidLotResultCreateNestedManyWithoutBidSelectionPlanInput>;
  bidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutBidSelectionPlanInput>;
  bidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutBidSelectionPlanInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investor?: InputMaybe<OrganizationCreateNestedOneWithoutInvestorBidSelectionPlansInput>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  numberOfBidPackage?: InputMaybe<Scalars['Int']['input']>;
  petitions?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutPlanInput>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  project?: InputMaybe<ProjectCreateNestedOneWithoutBidSelectionPlansInput>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  status?: InputMaybe<CatBidSelectionPlanStatusCreateNestedOneWithoutBidSelectionPlansInput>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  totalInvestment?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentEx?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentOld?: InputMaybe<Scalars['String']['input']>;
  totalInvestmentUnit?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<CatBidSelectionPlanTypeCreateNestedOneWithoutBidSelectionPlansInput>;
  typeCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidSelectionPlanCreateWithoutProjectInput = {
  bidLotResults?: InputMaybe<BidLotResultCreateNestedManyWithoutBidSelectionPlanInput>;
  bidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutBidSelectionPlanInput>;
  bidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutBidSelectionPlanInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investor?: InputMaybe<OrganizationCreateNestedOneWithoutInvestorBidSelectionPlansInput>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  numberOfBidPackage?: InputMaybe<Scalars['Int']['input']>;
  petitions?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutPlanInput>;
  procuringEntity?: InputMaybe<OrganizationCreateNestedOneWithoutProcuringEntityBidSelectionPlansInput>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  status?: InputMaybe<CatBidSelectionPlanStatusCreateNestedOneWithoutBidSelectionPlansInput>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  totalInvestment?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentEx?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentOld?: InputMaybe<Scalars['String']['input']>;
  totalInvestmentUnit?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<CatBidSelectionPlanTypeCreateNestedOneWithoutBidSelectionPlansInput>;
  typeCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidSelectionPlanCreateWithoutStatusInput = {
  bidLotResults?: InputMaybe<BidLotResultCreateNestedManyWithoutBidSelectionPlanInput>;
  bidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutBidSelectionPlanInput>;
  bidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutBidSelectionPlanInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investor?: InputMaybe<OrganizationCreateNestedOneWithoutInvestorBidSelectionPlansInput>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  numberOfBidPackage?: InputMaybe<Scalars['Int']['input']>;
  petitions?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutPlanInput>;
  procuringEntity?: InputMaybe<OrganizationCreateNestedOneWithoutProcuringEntityBidSelectionPlansInput>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  project?: InputMaybe<ProjectCreateNestedOneWithoutBidSelectionPlansInput>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  totalInvestment?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentEx?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentOld?: InputMaybe<Scalars['String']['input']>;
  totalInvestmentUnit?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<CatBidSelectionPlanTypeCreateNestedOneWithoutBidSelectionPlansInput>;
  typeCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidSelectionPlanCreateWithoutTypeInput = {
  bidLotResults?: InputMaybe<BidLotResultCreateNestedManyWithoutBidSelectionPlanInput>;
  bidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutBidSelectionPlanInput>;
  bidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutBidSelectionPlanInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investor?: InputMaybe<OrganizationCreateNestedOneWithoutInvestorBidSelectionPlansInput>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  numberOfBidPackage?: InputMaybe<Scalars['Int']['input']>;
  petitions?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutPlanInput>;
  procuringEntity?: InputMaybe<OrganizationCreateNestedOneWithoutProcuringEntityBidSelectionPlansInput>;
  procuringEntityCode?: InputMaybe<Scalars['String']['input']>;
  procuringEntityName?: InputMaybe<Scalars['String']['input']>;
  project?: InputMaybe<ProjectCreateNestedOneWithoutBidSelectionPlansInput>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  status?: InputMaybe<CatBidSelectionPlanStatusCreateNestedOneWithoutBidSelectionPlansInput>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  totalInvestment?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentEx?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentOld?: InputMaybe<Scalars['String']['input']>;
  totalInvestmentUnit?: InputMaybe<Scalars['String']['input']>;
  typeCode?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BidSelectionPlanListRelationFilter = {
  every?: InputMaybe<BidSelectionPlanWhereInput>;
  none?: InputMaybe<BidSelectionPlanWhereInput>;
  some?: InputMaybe<BidSelectionPlanWhereInput>;
};

export type BidSelectionPlanOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type BidSelectionPlanOrderByWithRelationInput = {
  bidLotResults?: InputMaybe<BidLotResultOrderByRelationAggregateInput>;
  bidNotifications?: InputMaybe<BidNotificationOrderByRelationAggregateInput>;
  bidPackages?: InputMaybe<BidPackageOrderByRelationAggregateInput>;
  code?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  createdBy?: InputMaybe<SortOrderInput>;
  decisionAgency?: InputMaybe<SortOrderInput>;
  decisionDate?: InputMaybe<SortOrderInput>;
  decisionFileId?: InputMaybe<SortOrderInput>;
  decisionFileName?: InputMaybe<SortOrderInput>;
  decisionNo?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  investor?: InputMaybe<OrganizationOrderByWithRelationInput>;
  investorCode?: InputMaybe<SortOrderInput>;
  investorId?: InputMaybe<SortOrderInput>;
  investorName?: InputMaybe<SortOrderInput>;
  isLatest?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
  numberOfBidPackage?: InputMaybe<SortOrderInput>;
  petitions?: InputMaybe<BidPetitionContractorOrderByRelationAggregateInput>;
  procuringEntity?: InputMaybe<OrganizationOrderByWithRelationInput>;
  procuringEntityCode?: InputMaybe<SortOrderInput>;
  procuringEntityId?: InputMaybe<SortOrderInput>;
  procuringEntityName?: InputMaybe<SortOrderInput>;
  project?: InputMaybe<ProjectOrderByWithRelationInput>;
  projectId?: InputMaybe<SortOrderInput>;
  publishedAt?: InputMaybe<SortOrderInput>;
  status?: InputMaybe<CatBidSelectionPlanStatusOrderByWithRelationInput>;
  statusCode?: InputMaybe<SortOrderInput>;
  statusId?: InputMaybe<SortOrderInput>;
  totalInvestment?: InputMaybe<SortOrderInput>;
  totalInvestmentEx?: InputMaybe<SortOrderInput>;
  totalInvestmentOld?: InputMaybe<SortOrderInput>;
  totalInvestmentUnit?: InputMaybe<SortOrderInput>;
  type?: InputMaybe<CatBidSelectionPlanTypeOrderByWithRelationInput>;
  typeCode?: InputMaybe<SortOrderInput>;
  typeId?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  updatedBy?: InputMaybe<SortOrderInput>;
  version?: InputMaybe<SortOrderInput>;
};

export enum BidSelectionPlanScalarFieldEnum {
  Code = 'code',
  CreatedAt = 'createdAt',
  CreatedBy = 'createdBy',
  DecisionAgency = 'decisionAgency',
  DecisionDate = 'decisionDate',
  DecisionFileId = 'decisionFileId',
  DecisionFileName = 'decisionFileName',
  DecisionNo = 'decisionNo',
  DeletedAt = 'deletedAt',
  Id = 'id',
  InvestorCode = 'investorCode',
  InvestorId = 'investorId',
  InvestorName = 'investorName',
  IsLatest = 'isLatest',
  Name = 'name',
  NumberOfBidPackage = 'numberOfBidPackage',
  ProcuringEntityCode = 'procuringEntityCode',
  ProcuringEntityId = 'procuringEntityId',
  ProcuringEntityName = 'procuringEntityName',
  ProjectId = 'projectId',
  PublishedAt = 'publishedAt',
  StatusCode = 'statusCode',
  StatusId = 'statusId',
  TotalInvestment = 'totalInvestment',
  TotalInvestmentEx = 'totalInvestmentEx',
  TotalInvestmentOld = 'totalInvestmentOld',
  TotalInvestmentUnit = 'totalInvestmentUnit',
  TypeCode = 'typeCode',
  TypeId = 'typeId',
  UpdatedAt = 'updatedAt',
  UpdatedBy = 'updatedBy',
  Version = 'version'
}

export type BidSelectionPlanScalarWhereInput = {
  AND?: InputMaybe<Array<BidSelectionPlanScalarWhereInput>>;
  NOT?: InputMaybe<Array<BidSelectionPlanScalarWhereInput>>;
  OR?: InputMaybe<Array<BidSelectionPlanScalarWhereInput>>;
  code?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  decisionAgency?: InputMaybe<StringNullableFilter>;
  decisionDate?: InputMaybe<DateTimeNullableFilter>;
  decisionFileId?: InputMaybe<StringNullableFilter>;
  decisionFileName?: InputMaybe<StringNullableFilter>;
  decisionNo?: InputMaybe<StringNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  investorCode?: InputMaybe<StringNullableFilter>;
  investorId?: InputMaybe<StringNullableFilter>;
  investorName?: InputMaybe<StringNullableFilter>;
  isLatest?: InputMaybe<BoolFilter>;
  name?: InputMaybe<StringNullableFilter>;
  numberOfBidPackage?: InputMaybe<IntNullableFilter>;
  procuringEntityCode?: InputMaybe<StringNullableFilter>;
  procuringEntityId?: InputMaybe<StringNullableFilter>;
  procuringEntityName?: InputMaybe<StringNullableFilter>;
  projectId?: InputMaybe<StringNullableFilter>;
  publishedAt?: InputMaybe<DateTimeNullableFilter>;
  statusCode?: InputMaybe<StringNullableFilter>;
  statusId?: InputMaybe<StringNullableFilter>;
  totalInvestment?: InputMaybe<DecimalNullableFilter>;
  totalInvestmentEx?: InputMaybe<DecimalNullableFilter>;
  totalInvestmentOld?: InputMaybe<StringNullableFilter>;
  totalInvestmentUnit?: InputMaybe<StringNullableFilter>;
  typeCode?: InputMaybe<StringNullableFilter>;
  typeId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  version?: InputMaybe<StringNullableFilter>;
};

export type BidSelectionPlanUpdateInput = {
  bidLotResults?: InputMaybe<BidLotResultUpdateManyWithoutBidSelectionPlanNestedInput>;
  bidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutBidSelectionPlanNestedInput>;
  bidPackages?: InputMaybe<BidPackageUpdateManyWithoutBidSelectionPlanNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investor?: InputMaybe<OrganizationUpdateOneWithoutInvestorBidSelectionPlansNestedInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  numberOfBidPackage?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  petitions?: InputMaybe<BidPetitionContractorUpdateManyWithoutPlanNestedInput>;
  procuringEntity?: InputMaybe<OrganizationUpdateOneWithoutProcuringEntityBidSelectionPlansNestedInput>;
  procuringEntityCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntityName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  project?: InputMaybe<ProjectUpdateOneWithoutBidSelectionPlansNestedInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  status?: InputMaybe<CatBidSelectionPlanStatusUpdateOneWithoutBidSelectionPlansNestedInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalInvestment?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentEx?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalInvestmentUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<CatBidSelectionPlanTypeUpdateOneWithoutBidSelectionPlansNestedInput>;
  typeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidSelectionPlanUpdateManyMutationInput = {
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  numberOfBidPackage?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  procuringEntityCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntityName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalInvestment?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentEx?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalInvestmentUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  typeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidSelectionPlanUpdateManyWithWhereWithoutInvestorInput = {
  data: BidSelectionPlanUpdateManyMutationInput;
  where: BidSelectionPlanScalarWhereInput;
};

export type BidSelectionPlanUpdateManyWithWhereWithoutProcuringEntityInput = {
  data: BidSelectionPlanUpdateManyMutationInput;
  where: BidSelectionPlanScalarWhereInput;
};

export type BidSelectionPlanUpdateManyWithWhereWithoutProjectInput = {
  data: BidSelectionPlanUpdateManyMutationInput;
  where: BidSelectionPlanScalarWhereInput;
};

export type BidSelectionPlanUpdateManyWithWhereWithoutStatusInput = {
  data: BidSelectionPlanUpdateManyMutationInput;
  where: BidSelectionPlanScalarWhereInput;
};

export type BidSelectionPlanUpdateManyWithWhereWithoutTypeInput = {
  data: BidSelectionPlanUpdateManyMutationInput;
  where: BidSelectionPlanScalarWhereInput;
};

export type BidSelectionPlanUpdateManyWithoutInvestorNestedInput = {
  connect?: InputMaybe<Array<BidSelectionPlanWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidSelectionPlanCreateOrConnectWithoutInvestorInput>>;
  create?: InputMaybe<Array<BidSelectionPlanCreateWithoutInvestorInput>>;
  createMany?: InputMaybe<BidSelectionPlanCreateManyInvestorInputEnvelope>;
  delete?: InputMaybe<Array<BidSelectionPlanWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidSelectionPlanScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidSelectionPlanWhereUniqueInput>>;
  set?: InputMaybe<Array<BidSelectionPlanWhereUniqueInput>>;
  update?: InputMaybe<Array<BidSelectionPlanUpdateWithWhereUniqueWithoutInvestorInput>>;
  updateMany?: InputMaybe<Array<BidSelectionPlanUpdateManyWithWhereWithoutInvestorInput>>;
  upsert?: InputMaybe<Array<BidSelectionPlanUpsertWithWhereUniqueWithoutInvestorInput>>;
};

export type BidSelectionPlanUpdateManyWithoutProcuringEntityNestedInput = {
  connect?: InputMaybe<Array<BidSelectionPlanWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidSelectionPlanCreateOrConnectWithoutProcuringEntityInput>>;
  create?: InputMaybe<Array<BidSelectionPlanCreateWithoutProcuringEntityInput>>;
  createMany?: InputMaybe<BidSelectionPlanCreateManyProcuringEntityInputEnvelope>;
  delete?: InputMaybe<Array<BidSelectionPlanWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidSelectionPlanScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidSelectionPlanWhereUniqueInput>>;
  set?: InputMaybe<Array<BidSelectionPlanWhereUniqueInput>>;
  update?: InputMaybe<Array<BidSelectionPlanUpdateWithWhereUniqueWithoutProcuringEntityInput>>;
  updateMany?: InputMaybe<Array<BidSelectionPlanUpdateManyWithWhereWithoutProcuringEntityInput>>;
  upsert?: InputMaybe<Array<BidSelectionPlanUpsertWithWhereUniqueWithoutProcuringEntityInput>>;
};

export type BidSelectionPlanUpdateManyWithoutProjectNestedInput = {
  connect?: InputMaybe<Array<BidSelectionPlanWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidSelectionPlanCreateOrConnectWithoutProjectInput>>;
  create?: InputMaybe<Array<BidSelectionPlanCreateWithoutProjectInput>>;
  createMany?: InputMaybe<BidSelectionPlanCreateManyProjectInputEnvelope>;
  delete?: InputMaybe<Array<BidSelectionPlanWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidSelectionPlanScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidSelectionPlanWhereUniqueInput>>;
  set?: InputMaybe<Array<BidSelectionPlanWhereUniqueInput>>;
  update?: InputMaybe<Array<BidSelectionPlanUpdateWithWhereUniqueWithoutProjectInput>>;
  updateMany?: InputMaybe<Array<BidSelectionPlanUpdateManyWithWhereWithoutProjectInput>>;
  upsert?: InputMaybe<Array<BidSelectionPlanUpsertWithWhereUniqueWithoutProjectInput>>;
};

export type BidSelectionPlanUpdateManyWithoutStatusNestedInput = {
  connect?: InputMaybe<Array<BidSelectionPlanWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidSelectionPlanCreateOrConnectWithoutStatusInput>>;
  create?: InputMaybe<Array<BidSelectionPlanCreateWithoutStatusInput>>;
  createMany?: InputMaybe<BidSelectionPlanCreateManyStatusInputEnvelope>;
  delete?: InputMaybe<Array<BidSelectionPlanWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidSelectionPlanScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidSelectionPlanWhereUniqueInput>>;
  set?: InputMaybe<Array<BidSelectionPlanWhereUniqueInput>>;
  update?: InputMaybe<Array<BidSelectionPlanUpdateWithWhereUniqueWithoutStatusInput>>;
  updateMany?: InputMaybe<Array<BidSelectionPlanUpdateManyWithWhereWithoutStatusInput>>;
  upsert?: InputMaybe<Array<BidSelectionPlanUpsertWithWhereUniqueWithoutStatusInput>>;
};

export type BidSelectionPlanUpdateManyWithoutTypeNestedInput = {
  connect?: InputMaybe<Array<BidSelectionPlanWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BidSelectionPlanCreateOrConnectWithoutTypeInput>>;
  create?: InputMaybe<Array<BidSelectionPlanCreateWithoutTypeInput>>;
  createMany?: InputMaybe<BidSelectionPlanCreateManyTypeInputEnvelope>;
  delete?: InputMaybe<Array<BidSelectionPlanWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BidSelectionPlanScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BidSelectionPlanWhereUniqueInput>>;
  set?: InputMaybe<Array<BidSelectionPlanWhereUniqueInput>>;
  update?: InputMaybe<Array<BidSelectionPlanUpdateWithWhereUniqueWithoutTypeInput>>;
  updateMany?: InputMaybe<Array<BidSelectionPlanUpdateManyWithWhereWithoutTypeInput>>;
  upsert?: InputMaybe<Array<BidSelectionPlanUpsertWithWhereUniqueWithoutTypeInput>>;
};

export type BidSelectionPlanUpdateOneWithoutBidLotResultsNestedInput = {
  connect?: InputMaybe<BidSelectionPlanWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidSelectionPlanCreateOrConnectWithoutBidLotResultsInput>;
  create?: InputMaybe<BidSelectionPlanCreateWithoutBidLotResultsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<BidSelectionPlanUpdateWithoutBidLotResultsInput>;
  upsert?: InputMaybe<BidSelectionPlanUpsertWithoutBidLotResultsInput>;
};

export type BidSelectionPlanUpdateOneWithoutBidNotificationsNestedInput = {
  connect?: InputMaybe<BidSelectionPlanWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidSelectionPlanCreateOrConnectWithoutBidNotificationsInput>;
  create?: InputMaybe<BidSelectionPlanCreateWithoutBidNotificationsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<BidSelectionPlanUpdateWithoutBidNotificationsInput>;
  upsert?: InputMaybe<BidSelectionPlanUpsertWithoutBidNotificationsInput>;
};

export type BidSelectionPlanUpdateOneWithoutBidPackagesNestedInput = {
  connect?: InputMaybe<BidSelectionPlanWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidSelectionPlanCreateOrConnectWithoutBidPackagesInput>;
  create?: InputMaybe<BidSelectionPlanCreateWithoutBidPackagesInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<BidSelectionPlanUpdateWithoutBidPackagesInput>;
  upsert?: InputMaybe<BidSelectionPlanUpsertWithoutBidPackagesInput>;
};

export type BidSelectionPlanUpdateOneWithoutPetitionsNestedInput = {
  connect?: InputMaybe<BidSelectionPlanWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BidSelectionPlanCreateOrConnectWithoutPetitionsInput>;
  create?: InputMaybe<BidSelectionPlanCreateWithoutPetitionsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<BidSelectionPlanUpdateWithoutPetitionsInput>;
  upsert?: InputMaybe<BidSelectionPlanUpsertWithoutPetitionsInput>;
};

export type BidSelectionPlanUpdateWithWhereUniqueWithoutInvestorInput = {
  data: BidSelectionPlanUpdateWithoutInvestorInput;
  where: BidSelectionPlanWhereUniqueInput;
};

export type BidSelectionPlanUpdateWithWhereUniqueWithoutProcuringEntityInput = {
  data: BidSelectionPlanUpdateWithoutProcuringEntityInput;
  where: BidSelectionPlanWhereUniqueInput;
};

export type BidSelectionPlanUpdateWithWhereUniqueWithoutProjectInput = {
  data: BidSelectionPlanUpdateWithoutProjectInput;
  where: BidSelectionPlanWhereUniqueInput;
};

export type BidSelectionPlanUpdateWithWhereUniqueWithoutStatusInput = {
  data: BidSelectionPlanUpdateWithoutStatusInput;
  where: BidSelectionPlanWhereUniqueInput;
};

export type BidSelectionPlanUpdateWithWhereUniqueWithoutTypeInput = {
  data: BidSelectionPlanUpdateWithoutTypeInput;
  where: BidSelectionPlanWhereUniqueInput;
};

export type BidSelectionPlanUpdateWithoutBidLotResultsInput = {
  bidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutBidSelectionPlanNestedInput>;
  bidPackages?: InputMaybe<BidPackageUpdateManyWithoutBidSelectionPlanNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investor?: InputMaybe<OrganizationUpdateOneWithoutInvestorBidSelectionPlansNestedInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  numberOfBidPackage?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  petitions?: InputMaybe<BidPetitionContractorUpdateManyWithoutPlanNestedInput>;
  procuringEntity?: InputMaybe<OrganizationUpdateOneWithoutProcuringEntityBidSelectionPlansNestedInput>;
  procuringEntityCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntityName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  project?: InputMaybe<ProjectUpdateOneWithoutBidSelectionPlansNestedInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  status?: InputMaybe<CatBidSelectionPlanStatusUpdateOneWithoutBidSelectionPlansNestedInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalInvestment?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentEx?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalInvestmentUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<CatBidSelectionPlanTypeUpdateOneWithoutBidSelectionPlansNestedInput>;
  typeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidSelectionPlanUpdateWithoutBidNotificationsInput = {
  bidLotResults?: InputMaybe<BidLotResultUpdateManyWithoutBidSelectionPlanNestedInput>;
  bidPackages?: InputMaybe<BidPackageUpdateManyWithoutBidSelectionPlanNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investor?: InputMaybe<OrganizationUpdateOneWithoutInvestorBidSelectionPlansNestedInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  numberOfBidPackage?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  petitions?: InputMaybe<BidPetitionContractorUpdateManyWithoutPlanNestedInput>;
  procuringEntity?: InputMaybe<OrganizationUpdateOneWithoutProcuringEntityBidSelectionPlansNestedInput>;
  procuringEntityCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntityName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  project?: InputMaybe<ProjectUpdateOneWithoutBidSelectionPlansNestedInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  status?: InputMaybe<CatBidSelectionPlanStatusUpdateOneWithoutBidSelectionPlansNestedInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalInvestment?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentEx?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalInvestmentUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<CatBidSelectionPlanTypeUpdateOneWithoutBidSelectionPlansNestedInput>;
  typeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidSelectionPlanUpdateWithoutBidPackagesInput = {
  bidLotResults?: InputMaybe<BidLotResultUpdateManyWithoutBidSelectionPlanNestedInput>;
  bidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutBidSelectionPlanNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investor?: InputMaybe<OrganizationUpdateOneWithoutInvestorBidSelectionPlansNestedInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  numberOfBidPackage?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  petitions?: InputMaybe<BidPetitionContractorUpdateManyWithoutPlanNestedInput>;
  procuringEntity?: InputMaybe<OrganizationUpdateOneWithoutProcuringEntityBidSelectionPlansNestedInput>;
  procuringEntityCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntityName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  project?: InputMaybe<ProjectUpdateOneWithoutBidSelectionPlansNestedInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  status?: InputMaybe<CatBidSelectionPlanStatusUpdateOneWithoutBidSelectionPlansNestedInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalInvestment?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentEx?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalInvestmentUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<CatBidSelectionPlanTypeUpdateOneWithoutBidSelectionPlansNestedInput>;
  typeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidSelectionPlanUpdateWithoutInvestorInput = {
  bidLotResults?: InputMaybe<BidLotResultUpdateManyWithoutBidSelectionPlanNestedInput>;
  bidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutBidSelectionPlanNestedInput>;
  bidPackages?: InputMaybe<BidPackageUpdateManyWithoutBidSelectionPlanNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  numberOfBidPackage?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  petitions?: InputMaybe<BidPetitionContractorUpdateManyWithoutPlanNestedInput>;
  procuringEntity?: InputMaybe<OrganizationUpdateOneWithoutProcuringEntityBidSelectionPlansNestedInput>;
  procuringEntityCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntityName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  project?: InputMaybe<ProjectUpdateOneWithoutBidSelectionPlansNestedInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  status?: InputMaybe<CatBidSelectionPlanStatusUpdateOneWithoutBidSelectionPlansNestedInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalInvestment?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentEx?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalInvestmentUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<CatBidSelectionPlanTypeUpdateOneWithoutBidSelectionPlansNestedInput>;
  typeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidSelectionPlanUpdateWithoutPetitionsInput = {
  bidLotResults?: InputMaybe<BidLotResultUpdateManyWithoutBidSelectionPlanNestedInput>;
  bidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutBidSelectionPlanNestedInput>;
  bidPackages?: InputMaybe<BidPackageUpdateManyWithoutBidSelectionPlanNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investor?: InputMaybe<OrganizationUpdateOneWithoutInvestorBidSelectionPlansNestedInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  numberOfBidPackage?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  procuringEntity?: InputMaybe<OrganizationUpdateOneWithoutProcuringEntityBidSelectionPlansNestedInput>;
  procuringEntityCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntityName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  project?: InputMaybe<ProjectUpdateOneWithoutBidSelectionPlansNestedInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  status?: InputMaybe<CatBidSelectionPlanStatusUpdateOneWithoutBidSelectionPlansNestedInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalInvestment?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentEx?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalInvestmentUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<CatBidSelectionPlanTypeUpdateOneWithoutBidSelectionPlansNestedInput>;
  typeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidSelectionPlanUpdateWithoutProcuringEntityInput = {
  bidLotResults?: InputMaybe<BidLotResultUpdateManyWithoutBidSelectionPlanNestedInput>;
  bidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutBidSelectionPlanNestedInput>;
  bidPackages?: InputMaybe<BidPackageUpdateManyWithoutBidSelectionPlanNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investor?: InputMaybe<OrganizationUpdateOneWithoutInvestorBidSelectionPlansNestedInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  numberOfBidPackage?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  petitions?: InputMaybe<BidPetitionContractorUpdateManyWithoutPlanNestedInput>;
  procuringEntityCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntityName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  project?: InputMaybe<ProjectUpdateOneWithoutBidSelectionPlansNestedInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  status?: InputMaybe<CatBidSelectionPlanStatusUpdateOneWithoutBidSelectionPlansNestedInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalInvestment?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentEx?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalInvestmentUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<CatBidSelectionPlanTypeUpdateOneWithoutBidSelectionPlansNestedInput>;
  typeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidSelectionPlanUpdateWithoutProjectInput = {
  bidLotResults?: InputMaybe<BidLotResultUpdateManyWithoutBidSelectionPlanNestedInput>;
  bidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutBidSelectionPlanNestedInput>;
  bidPackages?: InputMaybe<BidPackageUpdateManyWithoutBidSelectionPlanNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investor?: InputMaybe<OrganizationUpdateOneWithoutInvestorBidSelectionPlansNestedInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  numberOfBidPackage?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  petitions?: InputMaybe<BidPetitionContractorUpdateManyWithoutPlanNestedInput>;
  procuringEntity?: InputMaybe<OrganizationUpdateOneWithoutProcuringEntityBidSelectionPlansNestedInput>;
  procuringEntityCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntityName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  status?: InputMaybe<CatBidSelectionPlanStatusUpdateOneWithoutBidSelectionPlansNestedInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalInvestment?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentEx?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalInvestmentUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<CatBidSelectionPlanTypeUpdateOneWithoutBidSelectionPlansNestedInput>;
  typeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidSelectionPlanUpdateWithoutStatusInput = {
  bidLotResults?: InputMaybe<BidLotResultUpdateManyWithoutBidSelectionPlanNestedInput>;
  bidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutBidSelectionPlanNestedInput>;
  bidPackages?: InputMaybe<BidPackageUpdateManyWithoutBidSelectionPlanNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investor?: InputMaybe<OrganizationUpdateOneWithoutInvestorBidSelectionPlansNestedInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  numberOfBidPackage?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  petitions?: InputMaybe<BidPetitionContractorUpdateManyWithoutPlanNestedInput>;
  procuringEntity?: InputMaybe<OrganizationUpdateOneWithoutProcuringEntityBidSelectionPlansNestedInput>;
  procuringEntityCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntityName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  project?: InputMaybe<ProjectUpdateOneWithoutBidSelectionPlansNestedInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalInvestment?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentEx?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalInvestmentUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<CatBidSelectionPlanTypeUpdateOneWithoutBidSelectionPlansNestedInput>;
  typeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidSelectionPlanUpdateWithoutTypeInput = {
  bidLotResults?: InputMaybe<BidLotResultUpdateManyWithoutBidSelectionPlanNestedInput>;
  bidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutBidSelectionPlanNestedInput>;
  bidPackages?: InputMaybe<BidPackageUpdateManyWithoutBidSelectionPlanNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investor?: InputMaybe<OrganizationUpdateOneWithoutInvestorBidSelectionPlansNestedInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  numberOfBidPackage?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  petitions?: InputMaybe<BidPetitionContractorUpdateManyWithoutPlanNestedInput>;
  procuringEntity?: InputMaybe<OrganizationUpdateOneWithoutProcuringEntityBidSelectionPlansNestedInput>;
  procuringEntityCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntityName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  project?: InputMaybe<ProjectUpdateOneWithoutBidSelectionPlansNestedInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  status?: InputMaybe<CatBidSelectionPlanStatusUpdateOneWithoutBidSelectionPlansNestedInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalInvestment?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentEx?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentOld?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalInvestmentUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  typeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BidSelectionPlanUpsertWithWhereUniqueWithoutInvestorInput = {
  create: BidSelectionPlanCreateWithoutInvestorInput;
  update: BidSelectionPlanUpdateWithoutInvestorInput;
  where: BidSelectionPlanWhereUniqueInput;
};

export type BidSelectionPlanUpsertWithWhereUniqueWithoutProcuringEntityInput = {
  create: BidSelectionPlanCreateWithoutProcuringEntityInput;
  update: BidSelectionPlanUpdateWithoutProcuringEntityInput;
  where: BidSelectionPlanWhereUniqueInput;
};

export type BidSelectionPlanUpsertWithWhereUniqueWithoutProjectInput = {
  create: BidSelectionPlanCreateWithoutProjectInput;
  update: BidSelectionPlanUpdateWithoutProjectInput;
  where: BidSelectionPlanWhereUniqueInput;
};

export type BidSelectionPlanUpsertWithWhereUniqueWithoutStatusInput = {
  create: BidSelectionPlanCreateWithoutStatusInput;
  update: BidSelectionPlanUpdateWithoutStatusInput;
  where: BidSelectionPlanWhereUniqueInput;
};

export type BidSelectionPlanUpsertWithWhereUniqueWithoutTypeInput = {
  create: BidSelectionPlanCreateWithoutTypeInput;
  update: BidSelectionPlanUpdateWithoutTypeInput;
  where: BidSelectionPlanWhereUniqueInput;
};

export type BidSelectionPlanUpsertWithoutBidLotResultsInput = {
  create: BidSelectionPlanCreateWithoutBidLotResultsInput;
  update: BidSelectionPlanUpdateWithoutBidLotResultsInput;
};

export type BidSelectionPlanUpsertWithoutBidNotificationsInput = {
  create: BidSelectionPlanCreateWithoutBidNotificationsInput;
  update: BidSelectionPlanUpdateWithoutBidNotificationsInput;
};

export type BidSelectionPlanUpsertWithoutBidPackagesInput = {
  create: BidSelectionPlanCreateWithoutBidPackagesInput;
  update: BidSelectionPlanUpdateWithoutBidPackagesInput;
};

export type BidSelectionPlanUpsertWithoutPetitionsInput = {
  create: BidSelectionPlanCreateWithoutPetitionsInput;
  update: BidSelectionPlanUpdateWithoutPetitionsInput;
};

export type BidSelectionPlanWhereInput = {
  AND?: InputMaybe<Array<BidSelectionPlanWhereInput>>;
  NOT?: InputMaybe<Array<BidSelectionPlanWhereInput>>;
  OR?: InputMaybe<Array<BidSelectionPlanWhereInput>>;
  bidLotResults?: InputMaybe<BidLotResultListRelationFilter>;
  bidNotifications?: InputMaybe<BidNotificationListRelationFilter>;
  bidPackages?: InputMaybe<BidPackageListRelationFilter>;
  code?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  decisionAgency?: InputMaybe<StringNullableFilter>;
  decisionDate?: InputMaybe<DateTimeNullableFilter>;
  decisionFileId?: InputMaybe<StringNullableFilter>;
  decisionFileName?: InputMaybe<StringNullableFilter>;
  decisionNo?: InputMaybe<StringNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  investor?: InputMaybe<OrganizationWhereInput>;
  investorCode?: InputMaybe<StringNullableFilter>;
  investorId?: InputMaybe<StringNullableFilter>;
  investorName?: InputMaybe<StringNullableFilter>;
  isLatest?: InputMaybe<BoolFilter>;
  name?: InputMaybe<StringNullableFilter>;
  numberOfBidPackage?: InputMaybe<IntNullableFilter>;
  petitions?: InputMaybe<BidPetitionContractorListRelationFilter>;
  procuringEntity?: InputMaybe<OrganizationWhereInput>;
  procuringEntityCode?: InputMaybe<StringNullableFilter>;
  procuringEntityId?: InputMaybe<StringNullableFilter>;
  procuringEntityName?: InputMaybe<StringNullableFilter>;
  project?: InputMaybe<ProjectWhereInput>;
  projectId?: InputMaybe<StringNullableFilter>;
  publishedAt?: InputMaybe<DateTimeNullableFilter>;
  status?: InputMaybe<CatBidSelectionPlanStatusWhereInput>;
  statusCode?: InputMaybe<StringNullableFilter>;
  statusId?: InputMaybe<StringNullableFilter>;
  totalInvestment?: InputMaybe<DecimalNullableFilter>;
  totalInvestmentEx?: InputMaybe<DecimalNullableFilter>;
  totalInvestmentOld?: InputMaybe<StringNullableFilter>;
  totalInvestmentUnit?: InputMaybe<StringNullableFilter>;
  type?: InputMaybe<CatBidSelectionPlanTypeWhereInput>;
  typeCode?: InputMaybe<StringNullableFilter>;
  typeId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  version?: InputMaybe<StringNullableFilter>;
};

export type BidSelectionPlanWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']['input']>;
};

export type BigIntNullableFilter = {
  equals?: InputMaybe<Scalars['String']['input']>;
  gt?: InputMaybe<Scalars['String']['input']>;
  gte?: InputMaybe<Scalars['String']['input']>;
  in?: InputMaybe<Array<Scalars['String']['input']>>;
  lt?: InputMaybe<Scalars['String']['input']>;
  lte?: InputMaybe<Scalars['String']['input']>;
  not?: InputMaybe<NestedBigIntNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type BoolFieldUpdateOperationsInput = {
  set?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BoolFilter = {
  equals?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<NestedBoolFilter>;
};

export type BoolNullableFilter = {
  equals?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<NestedBoolNullableFilter>;
};

export type Business = {
  __typename?: 'Business';
  _count: BusinessCount;
  code: Scalars['String']['output'];
  id: Scalars['String']['output'];
  name: Scalars['String']['output'];
  organizationBusiness?: Maybe<Array<OrganizationBusiness>>;
};

export type BusinessConnection = {
  __typename?: 'BusinessConnection';
  nodes?: Maybe<Array<Business>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type BusinessCount = {
  __typename?: 'BusinessCount';
  organizationBusiness: Scalars['Int']['output'];
};

export type BusinessCreateInput = {
  code: Scalars['String']['input'];
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  organizationBusiness?: InputMaybe<OrganizationBusinessCreateNestedManyWithoutBusinessInput>;
};

export type BusinessCreateNestedOneWithoutOrganizationBusinessInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutOrganizationBusinessInput>;
  create?: InputMaybe<BusinessCreateWithoutOrganizationBusinessInput>;
};

export type BusinessCreateOrConnectWithoutOrganizationBusinessInput = {
  create: BusinessCreateWithoutOrganizationBusinessInput;
  where: BusinessWhereUniqueInput;
};

export type BusinessCreateWithoutOrganizationBusinessInput = {
  code: Scalars['String']['input'];
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
};

export type BusinessOrderByWithRelationInput = {
  code?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  organizationBusiness?: InputMaybe<OrganizationBusinessOrderByRelationAggregateInput>;
};

export enum BusinessScalarFieldEnum {
  Code = 'code',
  Id = 'id',
  Name = 'name'
}

export type BusinessUpdateInput = {
  code?: InputMaybe<StringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  organizationBusiness?: InputMaybe<OrganizationBusinessUpdateManyWithoutBusinessNestedInput>;
};

export type BusinessUpdateOneWithoutOrganizationBusinessNestedInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutOrganizationBusinessInput>;
  create?: InputMaybe<BusinessCreateWithoutOrganizationBusinessInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<BusinessUpdateWithoutOrganizationBusinessInput>;
  upsert?: InputMaybe<BusinessUpsertWithoutOrganizationBusinessInput>;
};

export type BusinessUpdateWithoutOrganizationBusinessInput = {
  code?: InputMaybe<StringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type BusinessUpsertWithoutOrganizationBusinessInput = {
  create: BusinessCreateWithoutOrganizationBusinessInput;
  update: BusinessUpdateWithoutOrganizationBusinessInput;
};

export type BusinessWhereInput = {
  AND?: InputMaybe<Array<BusinessWhereInput>>;
  NOT?: InputMaybe<Array<BusinessWhereInput>>;
  OR?: InputMaybe<Array<BusinessWhereInput>>;
  code?: InputMaybe<StringFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  organizationBusiness?: InputMaybe<OrganizationBusinessListRelationFilter>;
};

export type BusinessWhereUniqueInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
};

export type CatAgency = {
  __typename?: 'CatAgency';
  _count: CatAgencyCount;
  bidPackages?: Maybe<Array<BidPackage>>;
  code?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  name?: Maybe<Scalars['String']['output']>;
};

export type CatAgencyCount = {
  __typename?: 'CatAgencyCount';
  bidPackages: Scalars['Int']['output'];
};

export type CatAgencyCreateNestedOneWithoutBidPackagesInput = {
  connect?: InputMaybe<CatAgencyWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatAgencyCreateOrConnectWithoutBidPackagesInput>;
  create?: InputMaybe<CatAgencyCreateWithoutBidPackagesInput>;
};

export type CatAgencyCreateOrConnectWithoutBidPackagesInput = {
  create: CatAgencyCreateWithoutBidPackagesInput;
  where: CatAgencyWhereUniqueInput;
};

export type CatAgencyCreateWithoutBidPackagesInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type CatAgencyOrderByWithRelationInput = {
  bidPackages?: InputMaybe<BidPackageOrderByRelationAggregateInput>;
  code?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
};

export type CatAgencyUpdateOneWithoutBidPackagesNestedInput = {
  connect?: InputMaybe<CatAgencyWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatAgencyCreateOrConnectWithoutBidPackagesInput>;
  create?: InputMaybe<CatAgencyCreateWithoutBidPackagesInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatAgencyUpdateWithoutBidPackagesInput>;
  upsert?: InputMaybe<CatAgencyUpsertWithoutBidPackagesInput>;
};

export type CatAgencyUpdateWithoutBidPackagesInput = {
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CatAgencyUpsertWithoutBidPackagesInput = {
  create: CatAgencyCreateWithoutBidPackagesInput;
  update: CatAgencyUpdateWithoutBidPackagesInput;
};

export type CatAgencyWhereInput = {
  AND?: InputMaybe<Array<CatAgencyWhereInput>>;
  NOT?: InputMaybe<Array<CatAgencyWhereInput>>;
  OR?: InputMaybe<Array<CatAgencyWhereInput>>;
  bidPackages?: InputMaybe<BidPackageListRelationFilter>;
  code?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
};

export type CatAgencyWhereUniqueInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
};

export type CatArea = {
  __typename?: 'CatArea';
  _count: CatAreaCount;
  areaType: Scalars['Int']['output'];
  code: Scalars['String']['output'];
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  districtBidPackages?: Maybe<Array<BidPackage>>;
  districtProjects?: Maybe<Array<Project>>;
  id: Scalars['String']['output'];
  name: Scalars['String']['output'];
  officeDistrictOrganizations?: Maybe<Array<Organization>>;
  officeProvinceOrganizations?: Maybe<Array<Organization>>;
  officeWardOrganizations?: Maybe<Array<Organization>>;
  orderIndex?: Maybe<Scalars['Int']['output']>;
  parentCode?: Maybe<Scalars['String']['output']>;
  provinceBidPackages?: Maybe<Array<BidPackage>>;
  provinceProjects?: Maybe<Array<Project>>;
  receiverDistrictOrganizations?: Maybe<Array<Organization>>;
  receiverProvinceOrganizations?: Maybe<Array<Organization>>;
  receiverWardOrganizations?: Maybe<Array<Organization>>;
  status?: Maybe<Scalars['Int']['output']>;
  wardBidPackages?: Maybe<Array<BidPackage>>;
};

export type CatAreaConnection = {
  __typename?: 'CatAreaConnection';
  nodes?: Maybe<Array<CatArea>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CatAreaCount = {
  __typename?: 'CatAreaCount';
  districtBidPackages: Scalars['Int']['output'];
  districtProjects: Scalars['Int']['output'];
  officeDistrictOrganizations: Scalars['Int']['output'];
  officeProvinceOrganizations: Scalars['Int']['output'];
  officeWardOrganizations: Scalars['Int']['output'];
  provinceBidPackages: Scalars['Int']['output'];
  provinceProjects: Scalars['Int']['output'];
  receiverDistrictOrganizations: Scalars['Int']['output'];
  receiverProvinceOrganizations: Scalars['Int']['output'];
  receiverWardOrganizations: Scalars['Int']['output'];
  wardBidPackages: Scalars['Int']['output'];
};

export type CatAreaCreateInput = {
  areaType: Scalars['Int']['input'];
  code: Scalars['String']['input'];
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  districtBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutDistrictInput>;
  districtProjects?: InputMaybe<ProjectCreateNestedManyWithoutDistrictInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  officeDistrictOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeDistrictInput>;
  officeProvinceOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeProvinceInput>;
  officeWardOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeWardInput>;
  orderIndex?: InputMaybe<Scalars['Int']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  provinceBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutProvinceInput>;
  provinceProjects?: InputMaybe<ProjectCreateNestedManyWithoutProvinceInput>;
  receiverDistrictOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverDistrictInput>;
  receiverProvinceOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverProvinceInput>;
  receiverWardOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverWardInput>;
  status?: InputMaybe<Scalars['Int']['input']>;
  wardBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutWardInput>;
};

export type CatAreaCreateNestedOneWithoutDistrictBidPackagesInput = {
  connect?: InputMaybe<CatAreaWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatAreaCreateOrConnectWithoutDistrictBidPackagesInput>;
  create?: InputMaybe<CatAreaCreateWithoutDistrictBidPackagesInput>;
};

export type CatAreaCreateNestedOneWithoutDistrictProjectsInput = {
  connect?: InputMaybe<CatAreaWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatAreaCreateOrConnectWithoutDistrictProjectsInput>;
  create?: InputMaybe<CatAreaCreateWithoutDistrictProjectsInput>;
};

export type CatAreaCreateNestedOneWithoutOfficeDistrictOrganizationsInput = {
  connect?: InputMaybe<CatAreaWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatAreaCreateOrConnectWithoutOfficeDistrictOrganizationsInput>;
  create?: InputMaybe<CatAreaCreateWithoutOfficeDistrictOrganizationsInput>;
};

export type CatAreaCreateNestedOneWithoutOfficeProvinceOrganizationsInput = {
  connect?: InputMaybe<CatAreaWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatAreaCreateOrConnectWithoutOfficeProvinceOrganizationsInput>;
  create?: InputMaybe<CatAreaCreateWithoutOfficeProvinceOrganizationsInput>;
};

export type CatAreaCreateNestedOneWithoutOfficeWardOrganizationsInput = {
  connect?: InputMaybe<CatAreaWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatAreaCreateOrConnectWithoutOfficeWardOrganizationsInput>;
  create?: InputMaybe<CatAreaCreateWithoutOfficeWardOrganizationsInput>;
};

export type CatAreaCreateNestedOneWithoutProvinceBidPackagesInput = {
  connect?: InputMaybe<CatAreaWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatAreaCreateOrConnectWithoutProvinceBidPackagesInput>;
  create?: InputMaybe<CatAreaCreateWithoutProvinceBidPackagesInput>;
};

export type CatAreaCreateNestedOneWithoutProvinceProjectsInput = {
  connect?: InputMaybe<CatAreaWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatAreaCreateOrConnectWithoutProvinceProjectsInput>;
  create?: InputMaybe<CatAreaCreateWithoutProvinceProjectsInput>;
};

export type CatAreaCreateNestedOneWithoutReceiverDistrictOrganizationsInput = {
  connect?: InputMaybe<CatAreaWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatAreaCreateOrConnectWithoutReceiverDistrictOrganizationsInput>;
  create?: InputMaybe<CatAreaCreateWithoutReceiverDistrictOrganizationsInput>;
};

export type CatAreaCreateNestedOneWithoutReceiverProvinceOrganizationsInput = {
  connect?: InputMaybe<CatAreaWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatAreaCreateOrConnectWithoutReceiverProvinceOrganizationsInput>;
  create?: InputMaybe<CatAreaCreateWithoutReceiverProvinceOrganizationsInput>;
};

export type CatAreaCreateNestedOneWithoutReceiverWardOrganizationsInput = {
  connect?: InputMaybe<CatAreaWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatAreaCreateOrConnectWithoutReceiverWardOrganizationsInput>;
  create?: InputMaybe<CatAreaCreateWithoutReceiverWardOrganizationsInput>;
};

export type CatAreaCreateNestedOneWithoutWardBidPackagesInput = {
  connect?: InputMaybe<CatAreaWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatAreaCreateOrConnectWithoutWardBidPackagesInput>;
  create?: InputMaybe<CatAreaCreateWithoutWardBidPackagesInput>;
};

export type CatAreaCreateOrConnectWithoutDistrictBidPackagesInput = {
  create: CatAreaCreateWithoutDistrictBidPackagesInput;
  where: CatAreaWhereUniqueInput;
};

export type CatAreaCreateOrConnectWithoutDistrictProjectsInput = {
  create: CatAreaCreateWithoutDistrictProjectsInput;
  where: CatAreaWhereUniqueInput;
};

export type CatAreaCreateOrConnectWithoutOfficeDistrictOrganizationsInput = {
  create: CatAreaCreateWithoutOfficeDistrictOrganizationsInput;
  where: CatAreaWhereUniqueInput;
};

export type CatAreaCreateOrConnectWithoutOfficeProvinceOrganizationsInput = {
  create: CatAreaCreateWithoutOfficeProvinceOrganizationsInput;
  where: CatAreaWhereUniqueInput;
};

export type CatAreaCreateOrConnectWithoutOfficeWardOrganizationsInput = {
  create: CatAreaCreateWithoutOfficeWardOrganizationsInput;
  where: CatAreaWhereUniqueInput;
};

export type CatAreaCreateOrConnectWithoutProvinceBidPackagesInput = {
  create: CatAreaCreateWithoutProvinceBidPackagesInput;
  where: CatAreaWhereUniqueInput;
};

export type CatAreaCreateOrConnectWithoutProvinceProjectsInput = {
  create: CatAreaCreateWithoutProvinceProjectsInput;
  where: CatAreaWhereUniqueInput;
};

export type CatAreaCreateOrConnectWithoutReceiverDistrictOrganizationsInput = {
  create: CatAreaCreateWithoutReceiverDistrictOrganizationsInput;
  where: CatAreaWhereUniqueInput;
};

export type CatAreaCreateOrConnectWithoutReceiverProvinceOrganizationsInput = {
  create: CatAreaCreateWithoutReceiverProvinceOrganizationsInput;
  where: CatAreaWhereUniqueInput;
};

export type CatAreaCreateOrConnectWithoutReceiverWardOrganizationsInput = {
  create: CatAreaCreateWithoutReceiverWardOrganizationsInput;
  where: CatAreaWhereUniqueInput;
};

export type CatAreaCreateOrConnectWithoutWardBidPackagesInput = {
  create: CatAreaCreateWithoutWardBidPackagesInput;
  where: CatAreaWhereUniqueInput;
};

export type CatAreaCreateWithoutDistrictBidPackagesInput = {
  areaType: Scalars['Int']['input'];
  code: Scalars['String']['input'];
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  districtProjects?: InputMaybe<ProjectCreateNestedManyWithoutDistrictInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  officeDistrictOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeDistrictInput>;
  officeProvinceOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeProvinceInput>;
  officeWardOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeWardInput>;
  orderIndex?: InputMaybe<Scalars['Int']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  provinceBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutProvinceInput>;
  provinceProjects?: InputMaybe<ProjectCreateNestedManyWithoutProvinceInput>;
  receiverDistrictOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverDistrictInput>;
  receiverProvinceOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverProvinceInput>;
  receiverWardOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverWardInput>;
  status?: InputMaybe<Scalars['Int']['input']>;
  wardBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutWardInput>;
};

export type CatAreaCreateWithoutDistrictProjectsInput = {
  areaType: Scalars['Int']['input'];
  code: Scalars['String']['input'];
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  districtBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutDistrictInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  officeDistrictOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeDistrictInput>;
  officeProvinceOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeProvinceInput>;
  officeWardOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeWardInput>;
  orderIndex?: InputMaybe<Scalars['Int']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  provinceBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutProvinceInput>;
  provinceProjects?: InputMaybe<ProjectCreateNestedManyWithoutProvinceInput>;
  receiverDistrictOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverDistrictInput>;
  receiverProvinceOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverProvinceInput>;
  receiverWardOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverWardInput>;
  status?: InputMaybe<Scalars['Int']['input']>;
  wardBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutWardInput>;
};

export type CatAreaCreateWithoutOfficeDistrictOrganizationsInput = {
  areaType: Scalars['Int']['input'];
  code: Scalars['String']['input'];
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  districtBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutDistrictInput>;
  districtProjects?: InputMaybe<ProjectCreateNestedManyWithoutDistrictInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  officeProvinceOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeProvinceInput>;
  officeWardOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeWardInput>;
  orderIndex?: InputMaybe<Scalars['Int']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  provinceBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutProvinceInput>;
  provinceProjects?: InputMaybe<ProjectCreateNestedManyWithoutProvinceInput>;
  receiverDistrictOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverDistrictInput>;
  receiverProvinceOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverProvinceInput>;
  receiverWardOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverWardInput>;
  status?: InputMaybe<Scalars['Int']['input']>;
  wardBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutWardInput>;
};

export type CatAreaCreateWithoutOfficeProvinceOrganizationsInput = {
  areaType: Scalars['Int']['input'];
  code: Scalars['String']['input'];
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  districtBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutDistrictInput>;
  districtProjects?: InputMaybe<ProjectCreateNestedManyWithoutDistrictInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  officeDistrictOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeDistrictInput>;
  officeWardOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeWardInput>;
  orderIndex?: InputMaybe<Scalars['Int']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  provinceBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutProvinceInput>;
  provinceProjects?: InputMaybe<ProjectCreateNestedManyWithoutProvinceInput>;
  receiverDistrictOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverDistrictInput>;
  receiverProvinceOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverProvinceInput>;
  receiverWardOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverWardInput>;
  status?: InputMaybe<Scalars['Int']['input']>;
  wardBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutWardInput>;
};

export type CatAreaCreateWithoutOfficeWardOrganizationsInput = {
  areaType: Scalars['Int']['input'];
  code: Scalars['String']['input'];
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  districtBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutDistrictInput>;
  districtProjects?: InputMaybe<ProjectCreateNestedManyWithoutDistrictInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  officeDistrictOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeDistrictInput>;
  officeProvinceOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeProvinceInput>;
  orderIndex?: InputMaybe<Scalars['Int']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  provinceBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutProvinceInput>;
  provinceProjects?: InputMaybe<ProjectCreateNestedManyWithoutProvinceInput>;
  receiverDistrictOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverDistrictInput>;
  receiverProvinceOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverProvinceInput>;
  receiverWardOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverWardInput>;
  status?: InputMaybe<Scalars['Int']['input']>;
  wardBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutWardInput>;
};

export type CatAreaCreateWithoutProvinceBidPackagesInput = {
  areaType: Scalars['Int']['input'];
  code: Scalars['String']['input'];
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  districtBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutDistrictInput>;
  districtProjects?: InputMaybe<ProjectCreateNestedManyWithoutDistrictInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  officeDistrictOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeDistrictInput>;
  officeProvinceOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeProvinceInput>;
  officeWardOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeWardInput>;
  orderIndex?: InputMaybe<Scalars['Int']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  provinceProjects?: InputMaybe<ProjectCreateNestedManyWithoutProvinceInput>;
  receiverDistrictOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverDistrictInput>;
  receiverProvinceOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverProvinceInput>;
  receiverWardOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverWardInput>;
  status?: InputMaybe<Scalars['Int']['input']>;
  wardBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutWardInput>;
};

export type CatAreaCreateWithoutProvinceProjectsInput = {
  areaType: Scalars['Int']['input'];
  code: Scalars['String']['input'];
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  districtBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutDistrictInput>;
  districtProjects?: InputMaybe<ProjectCreateNestedManyWithoutDistrictInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  officeDistrictOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeDistrictInput>;
  officeProvinceOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeProvinceInput>;
  officeWardOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeWardInput>;
  orderIndex?: InputMaybe<Scalars['Int']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  provinceBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutProvinceInput>;
  receiverDistrictOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverDistrictInput>;
  receiverProvinceOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverProvinceInput>;
  receiverWardOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverWardInput>;
  status?: InputMaybe<Scalars['Int']['input']>;
  wardBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutWardInput>;
};

export type CatAreaCreateWithoutReceiverDistrictOrganizationsInput = {
  areaType: Scalars['Int']['input'];
  code: Scalars['String']['input'];
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  districtBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutDistrictInput>;
  districtProjects?: InputMaybe<ProjectCreateNestedManyWithoutDistrictInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  officeDistrictOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeDistrictInput>;
  officeProvinceOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeProvinceInput>;
  officeWardOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeWardInput>;
  orderIndex?: InputMaybe<Scalars['Int']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  provinceBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutProvinceInput>;
  provinceProjects?: InputMaybe<ProjectCreateNestedManyWithoutProvinceInput>;
  receiverProvinceOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverProvinceInput>;
  receiverWardOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverWardInput>;
  status?: InputMaybe<Scalars['Int']['input']>;
  wardBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutWardInput>;
};

export type CatAreaCreateWithoutReceiverProvinceOrganizationsInput = {
  areaType: Scalars['Int']['input'];
  code: Scalars['String']['input'];
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  districtBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutDistrictInput>;
  districtProjects?: InputMaybe<ProjectCreateNestedManyWithoutDistrictInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  officeDistrictOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeDistrictInput>;
  officeProvinceOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeProvinceInput>;
  officeWardOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeWardInput>;
  orderIndex?: InputMaybe<Scalars['Int']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  provinceBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutProvinceInput>;
  provinceProjects?: InputMaybe<ProjectCreateNestedManyWithoutProvinceInput>;
  receiverDistrictOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverDistrictInput>;
  receiverWardOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverWardInput>;
  status?: InputMaybe<Scalars['Int']['input']>;
  wardBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutWardInput>;
};

export type CatAreaCreateWithoutReceiverWardOrganizationsInput = {
  areaType: Scalars['Int']['input'];
  code: Scalars['String']['input'];
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  districtBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutDistrictInput>;
  districtProjects?: InputMaybe<ProjectCreateNestedManyWithoutDistrictInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  officeDistrictOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeDistrictInput>;
  officeProvinceOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeProvinceInput>;
  officeWardOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeWardInput>;
  orderIndex?: InputMaybe<Scalars['Int']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  provinceBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutProvinceInput>;
  provinceProjects?: InputMaybe<ProjectCreateNestedManyWithoutProvinceInput>;
  receiverDistrictOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverDistrictInput>;
  receiverProvinceOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverProvinceInput>;
  status?: InputMaybe<Scalars['Int']['input']>;
  wardBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutWardInput>;
};

export type CatAreaCreateWithoutWardBidPackagesInput = {
  areaType: Scalars['Int']['input'];
  code: Scalars['String']['input'];
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  districtBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutDistrictInput>;
  districtProjects?: InputMaybe<ProjectCreateNestedManyWithoutDistrictInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  officeDistrictOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeDistrictInput>;
  officeProvinceOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeProvinceInput>;
  officeWardOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutOfficeWardInput>;
  orderIndex?: InputMaybe<Scalars['Int']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  provinceBidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutProvinceInput>;
  provinceProjects?: InputMaybe<ProjectCreateNestedManyWithoutProvinceInput>;
  receiverDistrictOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverDistrictInput>;
  receiverProvinceOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverProvinceInput>;
  receiverWardOrganizations?: InputMaybe<OrganizationCreateNestedManyWithoutReceiverWardInput>;
  status?: InputMaybe<Scalars['Int']['input']>;
};

export type CatAreaOrderByWithRelationInput = {
  areaType?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrderInput>;
  createdBy?: InputMaybe<SortOrderInput>;
  districtBidPackages?: InputMaybe<BidPackageOrderByRelationAggregateInput>;
  districtProjects?: InputMaybe<ProjectOrderByRelationAggregateInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  officeDistrictOrganizations?: InputMaybe<OrganizationOrderByRelationAggregateInput>;
  officeProvinceOrganizations?: InputMaybe<OrganizationOrderByRelationAggregateInput>;
  officeWardOrganizations?: InputMaybe<OrganizationOrderByRelationAggregateInput>;
  orderIndex?: InputMaybe<SortOrderInput>;
  parentCode?: InputMaybe<SortOrderInput>;
  provinceBidPackages?: InputMaybe<BidPackageOrderByRelationAggregateInput>;
  provinceProjects?: InputMaybe<ProjectOrderByRelationAggregateInput>;
  receiverDistrictOrganizations?: InputMaybe<OrganizationOrderByRelationAggregateInput>;
  receiverProvinceOrganizations?: InputMaybe<OrganizationOrderByRelationAggregateInput>;
  receiverWardOrganizations?: InputMaybe<OrganizationOrderByRelationAggregateInput>;
  status?: InputMaybe<SortOrderInput>;
  wardBidPackages?: InputMaybe<BidPackageOrderByRelationAggregateInput>;
};

export enum CatAreaScalarFieldEnum {
  AreaType = 'areaType',
  Code = 'code',
  CreatedAt = 'createdAt',
  CreatedBy = 'createdBy',
  Id = 'id',
  Name = 'name',
  OrderIndex = 'orderIndex',
  ParentCode = 'parentCode',
  Status = 'status'
}

export type CatAreaUpdateInput = {
  areaType?: InputMaybe<IntFieldUpdateOperationsInput>;
  code?: InputMaybe<StringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  districtBidPackages?: InputMaybe<BidPackageUpdateManyWithoutDistrictNestedInput>;
  districtProjects?: InputMaybe<ProjectUpdateManyWithoutDistrictNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  officeDistrictOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeDistrictNestedInput>;
  officeProvinceOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeProvinceNestedInput>;
  officeWardOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeWardNestedInput>;
  orderIndex?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  parentCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  provinceBidPackages?: InputMaybe<BidPackageUpdateManyWithoutProvinceNestedInput>;
  provinceProjects?: InputMaybe<ProjectUpdateManyWithoutProvinceNestedInput>;
  receiverDistrictOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverDistrictNestedInput>;
  receiverProvinceOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverProvinceNestedInput>;
  receiverWardOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverWardNestedInput>;
  status?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  wardBidPackages?: InputMaybe<BidPackageUpdateManyWithoutWardNestedInput>;
};

export type CatAreaUpdateOneWithoutDistrictBidPackagesNestedInput = {
  connect?: InputMaybe<CatAreaWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatAreaCreateOrConnectWithoutDistrictBidPackagesInput>;
  create?: InputMaybe<CatAreaCreateWithoutDistrictBidPackagesInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatAreaUpdateWithoutDistrictBidPackagesInput>;
  upsert?: InputMaybe<CatAreaUpsertWithoutDistrictBidPackagesInput>;
};

export type CatAreaUpdateOneWithoutDistrictProjectsNestedInput = {
  connect?: InputMaybe<CatAreaWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatAreaCreateOrConnectWithoutDistrictProjectsInput>;
  create?: InputMaybe<CatAreaCreateWithoutDistrictProjectsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatAreaUpdateWithoutDistrictProjectsInput>;
  upsert?: InputMaybe<CatAreaUpsertWithoutDistrictProjectsInput>;
};

export type CatAreaUpdateOneWithoutOfficeDistrictOrganizationsNestedInput = {
  connect?: InputMaybe<CatAreaWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatAreaCreateOrConnectWithoutOfficeDistrictOrganizationsInput>;
  create?: InputMaybe<CatAreaCreateWithoutOfficeDistrictOrganizationsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatAreaUpdateWithoutOfficeDistrictOrganizationsInput>;
  upsert?: InputMaybe<CatAreaUpsertWithoutOfficeDistrictOrganizationsInput>;
};

export type CatAreaUpdateOneWithoutOfficeProvinceOrganizationsNestedInput = {
  connect?: InputMaybe<CatAreaWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatAreaCreateOrConnectWithoutOfficeProvinceOrganizationsInput>;
  create?: InputMaybe<CatAreaCreateWithoutOfficeProvinceOrganizationsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatAreaUpdateWithoutOfficeProvinceOrganizationsInput>;
  upsert?: InputMaybe<CatAreaUpsertWithoutOfficeProvinceOrganizationsInput>;
};

export type CatAreaUpdateOneWithoutOfficeWardOrganizationsNestedInput = {
  connect?: InputMaybe<CatAreaWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatAreaCreateOrConnectWithoutOfficeWardOrganizationsInput>;
  create?: InputMaybe<CatAreaCreateWithoutOfficeWardOrganizationsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatAreaUpdateWithoutOfficeWardOrganizationsInput>;
  upsert?: InputMaybe<CatAreaUpsertWithoutOfficeWardOrganizationsInput>;
};

export type CatAreaUpdateOneWithoutProvinceBidPackagesNestedInput = {
  connect?: InputMaybe<CatAreaWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatAreaCreateOrConnectWithoutProvinceBidPackagesInput>;
  create?: InputMaybe<CatAreaCreateWithoutProvinceBidPackagesInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatAreaUpdateWithoutProvinceBidPackagesInput>;
  upsert?: InputMaybe<CatAreaUpsertWithoutProvinceBidPackagesInput>;
};

export type CatAreaUpdateOneWithoutProvinceProjectsNestedInput = {
  connect?: InputMaybe<CatAreaWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatAreaCreateOrConnectWithoutProvinceProjectsInput>;
  create?: InputMaybe<CatAreaCreateWithoutProvinceProjectsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatAreaUpdateWithoutProvinceProjectsInput>;
  upsert?: InputMaybe<CatAreaUpsertWithoutProvinceProjectsInput>;
};

export type CatAreaUpdateOneWithoutReceiverDistrictOrganizationsNestedInput = {
  connect?: InputMaybe<CatAreaWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatAreaCreateOrConnectWithoutReceiverDistrictOrganizationsInput>;
  create?: InputMaybe<CatAreaCreateWithoutReceiverDistrictOrganizationsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatAreaUpdateWithoutReceiverDistrictOrganizationsInput>;
  upsert?: InputMaybe<CatAreaUpsertWithoutReceiverDistrictOrganizationsInput>;
};

export type CatAreaUpdateOneWithoutReceiverProvinceOrganizationsNestedInput = {
  connect?: InputMaybe<CatAreaWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatAreaCreateOrConnectWithoutReceiverProvinceOrganizationsInput>;
  create?: InputMaybe<CatAreaCreateWithoutReceiverProvinceOrganizationsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatAreaUpdateWithoutReceiverProvinceOrganizationsInput>;
  upsert?: InputMaybe<CatAreaUpsertWithoutReceiverProvinceOrganizationsInput>;
};

export type CatAreaUpdateOneWithoutReceiverWardOrganizationsNestedInput = {
  connect?: InputMaybe<CatAreaWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatAreaCreateOrConnectWithoutReceiverWardOrganizationsInput>;
  create?: InputMaybe<CatAreaCreateWithoutReceiverWardOrganizationsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatAreaUpdateWithoutReceiverWardOrganizationsInput>;
  upsert?: InputMaybe<CatAreaUpsertWithoutReceiverWardOrganizationsInput>;
};

export type CatAreaUpdateOneWithoutWardBidPackagesNestedInput = {
  connect?: InputMaybe<CatAreaWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatAreaCreateOrConnectWithoutWardBidPackagesInput>;
  create?: InputMaybe<CatAreaCreateWithoutWardBidPackagesInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatAreaUpdateWithoutWardBidPackagesInput>;
  upsert?: InputMaybe<CatAreaUpsertWithoutWardBidPackagesInput>;
};

export type CatAreaUpdateWithoutDistrictBidPackagesInput = {
  areaType?: InputMaybe<IntFieldUpdateOperationsInput>;
  code?: InputMaybe<StringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  districtProjects?: InputMaybe<ProjectUpdateManyWithoutDistrictNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  officeDistrictOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeDistrictNestedInput>;
  officeProvinceOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeProvinceNestedInput>;
  officeWardOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeWardNestedInput>;
  orderIndex?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  parentCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  provinceBidPackages?: InputMaybe<BidPackageUpdateManyWithoutProvinceNestedInput>;
  provinceProjects?: InputMaybe<ProjectUpdateManyWithoutProvinceNestedInput>;
  receiverDistrictOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverDistrictNestedInput>;
  receiverProvinceOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverProvinceNestedInput>;
  receiverWardOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverWardNestedInput>;
  status?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  wardBidPackages?: InputMaybe<BidPackageUpdateManyWithoutWardNestedInput>;
};

export type CatAreaUpdateWithoutDistrictProjectsInput = {
  areaType?: InputMaybe<IntFieldUpdateOperationsInput>;
  code?: InputMaybe<StringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  districtBidPackages?: InputMaybe<BidPackageUpdateManyWithoutDistrictNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  officeDistrictOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeDistrictNestedInput>;
  officeProvinceOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeProvinceNestedInput>;
  officeWardOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeWardNestedInput>;
  orderIndex?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  parentCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  provinceBidPackages?: InputMaybe<BidPackageUpdateManyWithoutProvinceNestedInput>;
  provinceProjects?: InputMaybe<ProjectUpdateManyWithoutProvinceNestedInput>;
  receiverDistrictOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverDistrictNestedInput>;
  receiverProvinceOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverProvinceNestedInput>;
  receiverWardOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverWardNestedInput>;
  status?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  wardBidPackages?: InputMaybe<BidPackageUpdateManyWithoutWardNestedInput>;
};

export type CatAreaUpdateWithoutOfficeDistrictOrganizationsInput = {
  areaType?: InputMaybe<IntFieldUpdateOperationsInput>;
  code?: InputMaybe<StringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  districtBidPackages?: InputMaybe<BidPackageUpdateManyWithoutDistrictNestedInput>;
  districtProjects?: InputMaybe<ProjectUpdateManyWithoutDistrictNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  officeProvinceOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeProvinceNestedInput>;
  officeWardOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeWardNestedInput>;
  orderIndex?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  parentCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  provinceBidPackages?: InputMaybe<BidPackageUpdateManyWithoutProvinceNestedInput>;
  provinceProjects?: InputMaybe<ProjectUpdateManyWithoutProvinceNestedInput>;
  receiverDistrictOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverDistrictNestedInput>;
  receiverProvinceOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverProvinceNestedInput>;
  receiverWardOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverWardNestedInput>;
  status?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  wardBidPackages?: InputMaybe<BidPackageUpdateManyWithoutWardNestedInput>;
};

export type CatAreaUpdateWithoutOfficeProvinceOrganizationsInput = {
  areaType?: InputMaybe<IntFieldUpdateOperationsInput>;
  code?: InputMaybe<StringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  districtBidPackages?: InputMaybe<BidPackageUpdateManyWithoutDistrictNestedInput>;
  districtProjects?: InputMaybe<ProjectUpdateManyWithoutDistrictNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  officeDistrictOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeDistrictNestedInput>;
  officeWardOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeWardNestedInput>;
  orderIndex?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  parentCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  provinceBidPackages?: InputMaybe<BidPackageUpdateManyWithoutProvinceNestedInput>;
  provinceProjects?: InputMaybe<ProjectUpdateManyWithoutProvinceNestedInput>;
  receiverDistrictOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverDistrictNestedInput>;
  receiverProvinceOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverProvinceNestedInput>;
  receiverWardOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverWardNestedInput>;
  status?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  wardBidPackages?: InputMaybe<BidPackageUpdateManyWithoutWardNestedInput>;
};

export type CatAreaUpdateWithoutOfficeWardOrganizationsInput = {
  areaType?: InputMaybe<IntFieldUpdateOperationsInput>;
  code?: InputMaybe<StringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  districtBidPackages?: InputMaybe<BidPackageUpdateManyWithoutDistrictNestedInput>;
  districtProjects?: InputMaybe<ProjectUpdateManyWithoutDistrictNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  officeDistrictOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeDistrictNestedInput>;
  officeProvinceOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeProvinceNestedInput>;
  orderIndex?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  parentCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  provinceBidPackages?: InputMaybe<BidPackageUpdateManyWithoutProvinceNestedInput>;
  provinceProjects?: InputMaybe<ProjectUpdateManyWithoutProvinceNestedInput>;
  receiverDistrictOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverDistrictNestedInput>;
  receiverProvinceOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverProvinceNestedInput>;
  receiverWardOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverWardNestedInput>;
  status?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  wardBidPackages?: InputMaybe<BidPackageUpdateManyWithoutWardNestedInput>;
};

export type CatAreaUpdateWithoutProvinceBidPackagesInput = {
  areaType?: InputMaybe<IntFieldUpdateOperationsInput>;
  code?: InputMaybe<StringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  districtBidPackages?: InputMaybe<BidPackageUpdateManyWithoutDistrictNestedInput>;
  districtProjects?: InputMaybe<ProjectUpdateManyWithoutDistrictNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  officeDistrictOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeDistrictNestedInput>;
  officeProvinceOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeProvinceNestedInput>;
  officeWardOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeWardNestedInput>;
  orderIndex?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  parentCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  provinceProjects?: InputMaybe<ProjectUpdateManyWithoutProvinceNestedInput>;
  receiverDistrictOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverDistrictNestedInput>;
  receiverProvinceOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverProvinceNestedInput>;
  receiverWardOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverWardNestedInput>;
  status?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  wardBidPackages?: InputMaybe<BidPackageUpdateManyWithoutWardNestedInput>;
};

export type CatAreaUpdateWithoutProvinceProjectsInput = {
  areaType?: InputMaybe<IntFieldUpdateOperationsInput>;
  code?: InputMaybe<StringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  districtBidPackages?: InputMaybe<BidPackageUpdateManyWithoutDistrictNestedInput>;
  districtProjects?: InputMaybe<ProjectUpdateManyWithoutDistrictNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  officeDistrictOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeDistrictNestedInput>;
  officeProvinceOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeProvinceNestedInput>;
  officeWardOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeWardNestedInput>;
  orderIndex?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  parentCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  provinceBidPackages?: InputMaybe<BidPackageUpdateManyWithoutProvinceNestedInput>;
  receiverDistrictOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverDistrictNestedInput>;
  receiverProvinceOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverProvinceNestedInput>;
  receiverWardOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverWardNestedInput>;
  status?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  wardBidPackages?: InputMaybe<BidPackageUpdateManyWithoutWardNestedInput>;
};

export type CatAreaUpdateWithoutReceiverDistrictOrganizationsInput = {
  areaType?: InputMaybe<IntFieldUpdateOperationsInput>;
  code?: InputMaybe<StringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  districtBidPackages?: InputMaybe<BidPackageUpdateManyWithoutDistrictNestedInput>;
  districtProjects?: InputMaybe<ProjectUpdateManyWithoutDistrictNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  officeDistrictOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeDistrictNestedInput>;
  officeProvinceOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeProvinceNestedInput>;
  officeWardOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeWardNestedInput>;
  orderIndex?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  parentCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  provinceBidPackages?: InputMaybe<BidPackageUpdateManyWithoutProvinceNestedInput>;
  provinceProjects?: InputMaybe<ProjectUpdateManyWithoutProvinceNestedInput>;
  receiverProvinceOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverProvinceNestedInput>;
  receiverWardOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverWardNestedInput>;
  status?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  wardBidPackages?: InputMaybe<BidPackageUpdateManyWithoutWardNestedInput>;
};

export type CatAreaUpdateWithoutReceiverProvinceOrganizationsInput = {
  areaType?: InputMaybe<IntFieldUpdateOperationsInput>;
  code?: InputMaybe<StringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  districtBidPackages?: InputMaybe<BidPackageUpdateManyWithoutDistrictNestedInput>;
  districtProjects?: InputMaybe<ProjectUpdateManyWithoutDistrictNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  officeDistrictOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeDistrictNestedInput>;
  officeProvinceOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeProvinceNestedInput>;
  officeWardOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeWardNestedInput>;
  orderIndex?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  parentCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  provinceBidPackages?: InputMaybe<BidPackageUpdateManyWithoutProvinceNestedInput>;
  provinceProjects?: InputMaybe<ProjectUpdateManyWithoutProvinceNestedInput>;
  receiverDistrictOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverDistrictNestedInput>;
  receiverWardOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverWardNestedInput>;
  status?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  wardBidPackages?: InputMaybe<BidPackageUpdateManyWithoutWardNestedInput>;
};

export type CatAreaUpdateWithoutReceiverWardOrganizationsInput = {
  areaType?: InputMaybe<IntFieldUpdateOperationsInput>;
  code?: InputMaybe<StringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  districtBidPackages?: InputMaybe<BidPackageUpdateManyWithoutDistrictNestedInput>;
  districtProjects?: InputMaybe<ProjectUpdateManyWithoutDistrictNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  officeDistrictOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeDistrictNestedInput>;
  officeProvinceOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeProvinceNestedInput>;
  officeWardOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeWardNestedInput>;
  orderIndex?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  parentCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  provinceBidPackages?: InputMaybe<BidPackageUpdateManyWithoutProvinceNestedInput>;
  provinceProjects?: InputMaybe<ProjectUpdateManyWithoutProvinceNestedInput>;
  receiverDistrictOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverDistrictNestedInput>;
  receiverProvinceOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverProvinceNestedInput>;
  status?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  wardBidPackages?: InputMaybe<BidPackageUpdateManyWithoutWardNestedInput>;
};

export type CatAreaUpdateWithoutWardBidPackagesInput = {
  areaType?: InputMaybe<IntFieldUpdateOperationsInput>;
  code?: InputMaybe<StringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  districtBidPackages?: InputMaybe<BidPackageUpdateManyWithoutDistrictNestedInput>;
  districtProjects?: InputMaybe<ProjectUpdateManyWithoutDistrictNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  officeDistrictOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeDistrictNestedInput>;
  officeProvinceOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeProvinceNestedInput>;
  officeWardOrganizations?: InputMaybe<OrganizationUpdateManyWithoutOfficeWardNestedInput>;
  orderIndex?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  parentCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  provinceBidPackages?: InputMaybe<BidPackageUpdateManyWithoutProvinceNestedInput>;
  provinceProjects?: InputMaybe<ProjectUpdateManyWithoutProvinceNestedInput>;
  receiverDistrictOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverDistrictNestedInput>;
  receiverProvinceOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverProvinceNestedInput>;
  receiverWardOrganizations?: InputMaybe<OrganizationUpdateManyWithoutReceiverWardNestedInput>;
  status?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
};

export type CatAreaUpsertWithoutDistrictBidPackagesInput = {
  create: CatAreaCreateWithoutDistrictBidPackagesInput;
  update: CatAreaUpdateWithoutDistrictBidPackagesInput;
};

export type CatAreaUpsertWithoutDistrictProjectsInput = {
  create: CatAreaCreateWithoutDistrictProjectsInput;
  update: CatAreaUpdateWithoutDistrictProjectsInput;
};

export type CatAreaUpsertWithoutOfficeDistrictOrganizationsInput = {
  create: CatAreaCreateWithoutOfficeDistrictOrganizationsInput;
  update: CatAreaUpdateWithoutOfficeDistrictOrganizationsInput;
};

export type CatAreaUpsertWithoutOfficeProvinceOrganizationsInput = {
  create: CatAreaCreateWithoutOfficeProvinceOrganizationsInput;
  update: CatAreaUpdateWithoutOfficeProvinceOrganizationsInput;
};

export type CatAreaUpsertWithoutOfficeWardOrganizationsInput = {
  create: CatAreaCreateWithoutOfficeWardOrganizationsInput;
  update: CatAreaUpdateWithoutOfficeWardOrganizationsInput;
};

export type CatAreaUpsertWithoutProvinceBidPackagesInput = {
  create: CatAreaCreateWithoutProvinceBidPackagesInput;
  update: CatAreaUpdateWithoutProvinceBidPackagesInput;
};

export type CatAreaUpsertWithoutProvinceProjectsInput = {
  create: CatAreaCreateWithoutProvinceProjectsInput;
  update: CatAreaUpdateWithoutProvinceProjectsInput;
};

export type CatAreaUpsertWithoutReceiverDistrictOrganizationsInput = {
  create: CatAreaCreateWithoutReceiverDistrictOrganizationsInput;
  update: CatAreaUpdateWithoutReceiverDistrictOrganizationsInput;
};

export type CatAreaUpsertWithoutReceiverProvinceOrganizationsInput = {
  create: CatAreaCreateWithoutReceiverProvinceOrganizationsInput;
  update: CatAreaUpdateWithoutReceiverProvinceOrganizationsInput;
};

export type CatAreaUpsertWithoutReceiverWardOrganizationsInput = {
  create: CatAreaCreateWithoutReceiverWardOrganizationsInput;
  update: CatAreaUpdateWithoutReceiverWardOrganizationsInput;
};

export type CatAreaUpsertWithoutWardBidPackagesInput = {
  create: CatAreaCreateWithoutWardBidPackagesInput;
  update: CatAreaUpdateWithoutWardBidPackagesInput;
};

export type CatAreaWhereInput = {
  AND?: InputMaybe<Array<CatAreaWhereInput>>;
  NOT?: InputMaybe<Array<CatAreaWhereInput>>;
  OR?: InputMaybe<Array<CatAreaWhereInput>>;
  areaType?: InputMaybe<IntFilter>;
  code?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  districtBidPackages?: InputMaybe<BidPackageListRelationFilter>;
  districtProjects?: InputMaybe<ProjectListRelationFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  officeDistrictOrganizations?: InputMaybe<OrganizationListRelationFilter>;
  officeProvinceOrganizations?: InputMaybe<OrganizationListRelationFilter>;
  officeWardOrganizations?: InputMaybe<OrganizationListRelationFilter>;
  orderIndex?: InputMaybe<IntNullableFilter>;
  parentCode?: InputMaybe<StringNullableFilter>;
  provinceBidPackages?: InputMaybe<BidPackageListRelationFilter>;
  provinceProjects?: InputMaybe<ProjectListRelationFilter>;
  receiverDistrictOrganizations?: InputMaybe<OrganizationListRelationFilter>;
  receiverProvinceOrganizations?: InputMaybe<OrganizationListRelationFilter>;
  receiverWardOrganizations?: InputMaybe<OrganizationListRelationFilter>;
  status?: InputMaybe<IntNullableFilter>;
  wardBidPackages?: InputMaybe<BidPackageListRelationFilter>;
};

export type CatAreaWhereUniqueInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
};

export type CatBidField = {
  __typename?: 'CatBidField';
  _count: CatBidFieldCount;
  bidPackages?: Maybe<Array<BidPackage>>;
  code?: Maybe<Scalars['String']['output']>;
  documentTemplates?: Maybe<Array<DocumentTemplate>>;
  id: Scalars['String']['output'];
  investBidNotifications?: Maybe<Array<BidNotification>>;
  name?: Maybe<Scalars['String']['output']>;
  notificationChapters?: Maybe<Array<BidNotificationChapter>>;
};

export type CatBidFieldConnection = {
  __typename?: 'CatBidFieldConnection';
  nodes?: Maybe<Array<CatBidField>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CatBidFieldCount = {
  __typename?: 'CatBidFieldCount';
  bidPackages: Scalars['Int']['output'];
  documentTemplates: Scalars['Int']['output'];
  investBidNotifications: Scalars['Int']['output'];
  notificationChapters: Scalars['Int']['output'];
};

export type CatBidFieldCreateInput = {
  bidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutBidFieldInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  documentTemplates?: InputMaybe<DocumentTemplateCreateNestedManyWithoutBidFieldInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  investBidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutInvestFieldInput>;
  name?: InputMaybe<Scalars['String']['input']>;
  notificationChapters?: InputMaybe<BidNotificationChapterCreateNestedManyWithoutBidFieldInput>;
};

export type CatBidFieldCreateNestedOneWithoutBidPackagesInput = {
  connect?: InputMaybe<CatBidFieldWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatBidFieldCreateOrConnectWithoutBidPackagesInput>;
  create?: InputMaybe<CatBidFieldCreateWithoutBidPackagesInput>;
};

export type CatBidFieldCreateNestedOneWithoutDocumentTemplatesInput = {
  connect?: InputMaybe<CatBidFieldWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatBidFieldCreateOrConnectWithoutDocumentTemplatesInput>;
  create?: InputMaybe<CatBidFieldCreateWithoutDocumentTemplatesInput>;
};

export type CatBidFieldCreateNestedOneWithoutInvestBidNotificationsInput = {
  connect?: InputMaybe<CatBidFieldWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatBidFieldCreateOrConnectWithoutInvestBidNotificationsInput>;
  create?: InputMaybe<CatBidFieldCreateWithoutInvestBidNotificationsInput>;
};

export type CatBidFieldCreateNestedOneWithoutNotificationChaptersInput = {
  connect?: InputMaybe<CatBidFieldWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatBidFieldCreateOrConnectWithoutNotificationChaptersInput>;
  create?: InputMaybe<CatBidFieldCreateWithoutNotificationChaptersInput>;
};

export type CatBidFieldCreateOrConnectWithoutBidPackagesInput = {
  create: CatBidFieldCreateWithoutBidPackagesInput;
  where: CatBidFieldWhereUniqueInput;
};

export type CatBidFieldCreateOrConnectWithoutDocumentTemplatesInput = {
  create: CatBidFieldCreateWithoutDocumentTemplatesInput;
  where: CatBidFieldWhereUniqueInput;
};

export type CatBidFieldCreateOrConnectWithoutInvestBidNotificationsInput = {
  create: CatBidFieldCreateWithoutInvestBidNotificationsInput;
  where: CatBidFieldWhereUniqueInput;
};

export type CatBidFieldCreateOrConnectWithoutNotificationChaptersInput = {
  create: CatBidFieldCreateWithoutNotificationChaptersInput;
  where: CatBidFieldWhereUniqueInput;
};

export type CatBidFieldCreateWithoutBidPackagesInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  documentTemplates?: InputMaybe<DocumentTemplateCreateNestedManyWithoutBidFieldInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  investBidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutInvestFieldInput>;
  name?: InputMaybe<Scalars['String']['input']>;
  notificationChapters?: InputMaybe<BidNotificationChapterCreateNestedManyWithoutBidFieldInput>;
};

export type CatBidFieldCreateWithoutDocumentTemplatesInput = {
  bidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutBidFieldInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investBidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutInvestFieldInput>;
  name?: InputMaybe<Scalars['String']['input']>;
  notificationChapters?: InputMaybe<BidNotificationChapterCreateNestedManyWithoutBidFieldInput>;
};

export type CatBidFieldCreateWithoutInvestBidNotificationsInput = {
  bidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutBidFieldInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  documentTemplates?: InputMaybe<DocumentTemplateCreateNestedManyWithoutBidFieldInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  notificationChapters?: InputMaybe<BidNotificationChapterCreateNestedManyWithoutBidFieldInput>;
};

export type CatBidFieldCreateWithoutNotificationChaptersInput = {
  bidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutBidFieldInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  documentTemplates?: InputMaybe<DocumentTemplateCreateNestedManyWithoutBidFieldInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  investBidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutInvestFieldInput>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type CatBidFieldOrderByWithRelationInput = {
  bidPackages?: InputMaybe<BidPackageOrderByRelationAggregateInput>;
  code?: InputMaybe<SortOrderInput>;
  documentTemplates?: InputMaybe<DocumentTemplateOrderByRelationAggregateInput>;
  id?: InputMaybe<SortOrder>;
  investBidNotifications?: InputMaybe<BidNotificationOrderByRelationAggregateInput>;
  name?: InputMaybe<SortOrderInput>;
  notificationChapters?: InputMaybe<BidNotificationChapterOrderByRelationAggregateInput>;
};

export enum CatBidFieldScalarFieldEnum {
  Code = 'code',
  Id = 'id',
  Name = 'name'
}

export type CatBidFieldUpdateInput = {
  bidPackages?: InputMaybe<BidPackageUpdateManyWithoutBidFieldNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentTemplates?: InputMaybe<DocumentTemplateUpdateManyWithoutBidFieldNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investBidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutInvestFieldNestedInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notificationChapters?: InputMaybe<BidNotificationChapterUpdateManyWithoutBidFieldNestedInput>;
};

export type CatBidFieldUpdateOneWithoutBidPackagesNestedInput = {
  connect?: InputMaybe<CatBidFieldWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatBidFieldCreateOrConnectWithoutBidPackagesInput>;
  create?: InputMaybe<CatBidFieldCreateWithoutBidPackagesInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatBidFieldUpdateWithoutBidPackagesInput>;
  upsert?: InputMaybe<CatBidFieldUpsertWithoutBidPackagesInput>;
};

export type CatBidFieldUpdateOneWithoutDocumentTemplatesNestedInput = {
  connect?: InputMaybe<CatBidFieldWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatBidFieldCreateOrConnectWithoutDocumentTemplatesInput>;
  create?: InputMaybe<CatBidFieldCreateWithoutDocumentTemplatesInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatBidFieldUpdateWithoutDocumentTemplatesInput>;
  upsert?: InputMaybe<CatBidFieldUpsertWithoutDocumentTemplatesInput>;
};

export type CatBidFieldUpdateOneWithoutInvestBidNotificationsNestedInput = {
  connect?: InputMaybe<CatBidFieldWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatBidFieldCreateOrConnectWithoutInvestBidNotificationsInput>;
  create?: InputMaybe<CatBidFieldCreateWithoutInvestBidNotificationsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatBidFieldUpdateWithoutInvestBidNotificationsInput>;
  upsert?: InputMaybe<CatBidFieldUpsertWithoutInvestBidNotificationsInput>;
};

export type CatBidFieldUpdateOneWithoutNotificationChaptersNestedInput = {
  connect?: InputMaybe<CatBidFieldWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatBidFieldCreateOrConnectWithoutNotificationChaptersInput>;
  create?: InputMaybe<CatBidFieldCreateWithoutNotificationChaptersInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatBidFieldUpdateWithoutNotificationChaptersInput>;
  upsert?: InputMaybe<CatBidFieldUpsertWithoutNotificationChaptersInput>;
};

export type CatBidFieldUpdateWithoutBidPackagesInput = {
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentTemplates?: InputMaybe<DocumentTemplateUpdateManyWithoutBidFieldNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investBidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutInvestFieldNestedInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notificationChapters?: InputMaybe<BidNotificationChapterUpdateManyWithoutBidFieldNestedInput>;
};

export type CatBidFieldUpdateWithoutDocumentTemplatesInput = {
  bidPackages?: InputMaybe<BidPackageUpdateManyWithoutBidFieldNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investBidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutInvestFieldNestedInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notificationChapters?: InputMaybe<BidNotificationChapterUpdateManyWithoutBidFieldNestedInput>;
};

export type CatBidFieldUpdateWithoutInvestBidNotificationsInput = {
  bidPackages?: InputMaybe<BidPackageUpdateManyWithoutBidFieldNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentTemplates?: InputMaybe<DocumentTemplateUpdateManyWithoutBidFieldNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notificationChapters?: InputMaybe<BidNotificationChapterUpdateManyWithoutBidFieldNestedInput>;
};

export type CatBidFieldUpdateWithoutNotificationChaptersInput = {
  bidPackages?: InputMaybe<BidPackageUpdateManyWithoutBidFieldNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentTemplates?: InputMaybe<DocumentTemplateUpdateManyWithoutBidFieldNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investBidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutInvestFieldNestedInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CatBidFieldUpsertWithoutBidPackagesInput = {
  create: CatBidFieldCreateWithoutBidPackagesInput;
  update: CatBidFieldUpdateWithoutBidPackagesInput;
};

export type CatBidFieldUpsertWithoutDocumentTemplatesInput = {
  create: CatBidFieldCreateWithoutDocumentTemplatesInput;
  update: CatBidFieldUpdateWithoutDocumentTemplatesInput;
};

export type CatBidFieldUpsertWithoutInvestBidNotificationsInput = {
  create: CatBidFieldCreateWithoutInvestBidNotificationsInput;
  update: CatBidFieldUpdateWithoutInvestBidNotificationsInput;
};

export type CatBidFieldUpsertWithoutNotificationChaptersInput = {
  create: CatBidFieldCreateWithoutNotificationChaptersInput;
  update: CatBidFieldUpdateWithoutNotificationChaptersInput;
};

export type CatBidFieldWhereInput = {
  AND?: InputMaybe<Array<CatBidFieldWhereInput>>;
  NOT?: InputMaybe<Array<CatBidFieldWhereInput>>;
  OR?: InputMaybe<Array<CatBidFieldWhereInput>>;
  bidPackages?: InputMaybe<BidPackageListRelationFilter>;
  code?: InputMaybe<StringNullableFilter>;
  documentTemplates?: InputMaybe<DocumentTemplateListRelationFilter>;
  id?: InputMaybe<StringFilter>;
  investBidNotifications?: InputMaybe<BidNotificationListRelationFilter>;
  name?: InputMaybe<StringNullableFilter>;
  notificationChapters?: InputMaybe<BidNotificationChapterListRelationFilter>;
};

export type CatBidFieldWhereUniqueInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
};

export type CatBidForm = {
  __typename?: 'CatBidForm';
  _count: CatBidFormCount;
  bidPackages?: Maybe<Array<BidPackage>>;
  code?: Maybe<Scalars['String']['output']>;
  documentTemplates?: Maybe<Array<DocumentTemplate>>;
  id: Scalars['String']['output'];
  name?: Maybe<Scalars['String']['output']>;
  notificationChapters?: Maybe<Array<BidNotificationChapter>>;
};

export type CatBidFormConnection = {
  __typename?: 'CatBidFormConnection';
  nodes?: Maybe<Array<CatBidForm>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CatBidFormCount = {
  __typename?: 'CatBidFormCount';
  bidPackages: Scalars['Int']['output'];
  documentTemplates: Scalars['Int']['output'];
  notificationChapters: Scalars['Int']['output'];
};

export type CatBidFormCreateInput = {
  bidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutBidFormInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  documentTemplates?: InputMaybe<DocumentTemplateCreateNestedManyWithoutBidFormInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  notificationChapters?: InputMaybe<BidNotificationChapterCreateNestedManyWithoutBidFormInput>;
};

export type CatBidFormCreateNestedOneWithoutBidPackagesInput = {
  connect?: InputMaybe<CatBidFormWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatBidFormCreateOrConnectWithoutBidPackagesInput>;
  create?: InputMaybe<CatBidFormCreateWithoutBidPackagesInput>;
};

export type CatBidFormCreateNestedOneWithoutDocumentTemplatesInput = {
  connect?: InputMaybe<CatBidFormWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatBidFormCreateOrConnectWithoutDocumentTemplatesInput>;
  create?: InputMaybe<CatBidFormCreateWithoutDocumentTemplatesInput>;
};

export type CatBidFormCreateNestedOneWithoutNotificationChaptersInput = {
  connect?: InputMaybe<CatBidFormWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatBidFormCreateOrConnectWithoutNotificationChaptersInput>;
  create?: InputMaybe<CatBidFormCreateWithoutNotificationChaptersInput>;
};

export type CatBidFormCreateOrConnectWithoutBidPackagesInput = {
  create: CatBidFormCreateWithoutBidPackagesInput;
  where: CatBidFormWhereUniqueInput;
};

export type CatBidFormCreateOrConnectWithoutDocumentTemplatesInput = {
  create: CatBidFormCreateWithoutDocumentTemplatesInput;
  where: CatBidFormWhereUniqueInput;
};

export type CatBidFormCreateOrConnectWithoutNotificationChaptersInput = {
  create: CatBidFormCreateWithoutNotificationChaptersInput;
  where: CatBidFormWhereUniqueInput;
};

export type CatBidFormCreateWithoutBidPackagesInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  documentTemplates?: InputMaybe<DocumentTemplateCreateNestedManyWithoutBidFormInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  notificationChapters?: InputMaybe<BidNotificationChapterCreateNestedManyWithoutBidFormInput>;
};

export type CatBidFormCreateWithoutDocumentTemplatesInput = {
  bidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutBidFormInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  notificationChapters?: InputMaybe<BidNotificationChapterCreateNestedManyWithoutBidFormInput>;
};

export type CatBidFormCreateWithoutNotificationChaptersInput = {
  bidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutBidFormInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  documentTemplates?: InputMaybe<DocumentTemplateCreateNestedManyWithoutBidFormInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type CatBidFormOrderByWithRelationInput = {
  bidPackages?: InputMaybe<BidPackageOrderByRelationAggregateInput>;
  code?: InputMaybe<SortOrderInput>;
  documentTemplates?: InputMaybe<DocumentTemplateOrderByRelationAggregateInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
  notificationChapters?: InputMaybe<BidNotificationChapterOrderByRelationAggregateInput>;
};

export enum CatBidFormScalarFieldEnum {
  Code = 'code',
  Id = 'id',
  Name = 'name'
}

export type CatBidFormUpdateInput = {
  bidPackages?: InputMaybe<BidPackageUpdateManyWithoutBidFormNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentTemplates?: InputMaybe<DocumentTemplateUpdateManyWithoutBidFormNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notificationChapters?: InputMaybe<BidNotificationChapterUpdateManyWithoutBidFormNestedInput>;
};

export type CatBidFormUpdateOneWithoutBidPackagesNestedInput = {
  connect?: InputMaybe<CatBidFormWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatBidFormCreateOrConnectWithoutBidPackagesInput>;
  create?: InputMaybe<CatBidFormCreateWithoutBidPackagesInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatBidFormUpdateWithoutBidPackagesInput>;
  upsert?: InputMaybe<CatBidFormUpsertWithoutBidPackagesInput>;
};

export type CatBidFormUpdateOneWithoutDocumentTemplatesNestedInput = {
  connect?: InputMaybe<CatBidFormWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatBidFormCreateOrConnectWithoutDocumentTemplatesInput>;
  create?: InputMaybe<CatBidFormCreateWithoutDocumentTemplatesInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatBidFormUpdateWithoutDocumentTemplatesInput>;
  upsert?: InputMaybe<CatBidFormUpsertWithoutDocumentTemplatesInput>;
};

export type CatBidFormUpdateOneWithoutNotificationChaptersNestedInput = {
  connect?: InputMaybe<CatBidFormWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatBidFormCreateOrConnectWithoutNotificationChaptersInput>;
  create?: InputMaybe<CatBidFormCreateWithoutNotificationChaptersInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatBidFormUpdateWithoutNotificationChaptersInput>;
  upsert?: InputMaybe<CatBidFormUpsertWithoutNotificationChaptersInput>;
};

export type CatBidFormUpdateWithoutBidPackagesInput = {
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentTemplates?: InputMaybe<DocumentTemplateUpdateManyWithoutBidFormNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notificationChapters?: InputMaybe<BidNotificationChapterUpdateManyWithoutBidFormNestedInput>;
};

export type CatBidFormUpdateWithoutDocumentTemplatesInput = {
  bidPackages?: InputMaybe<BidPackageUpdateManyWithoutBidFormNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notificationChapters?: InputMaybe<BidNotificationChapterUpdateManyWithoutBidFormNestedInput>;
};

export type CatBidFormUpdateWithoutNotificationChaptersInput = {
  bidPackages?: InputMaybe<BidPackageUpdateManyWithoutBidFormNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentTemplates?: InputMaybe<DocumentTemplateUpdateManyWithoutBidFormNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CatBidFormUpsertWithoutBidPackagesInput = {
  create: CatBidFormCreateWithoutBidPackagesInput;
  update: CatBidFormUpdateWithoutBidPackagesInput;
};

export type CatBidFormUpsertWithoutDocumentTemplatesInput = {
  create: CatBidFormCreateWithoutDocumentTemplatesInput;
  update: CatBidFormUpdateWithoutDocumentTemplatesInput;
};

export type CatBidFormUpsertWithoutNotificationChaptersInput = {
  create: CatBidFormCreateWithoutNotificationChaptersInput;
  update: CatBidFormUpdateWithoutNotificationChaptersInput;
};

export type CatBidFormWhereInput = {
  AND?: InputMaybe<Array<CatBidFormWhereInput>>;
  NOT?: InputMaybe<Array<CatBidFormWhereInput>>;
  OR?: InputMaybe<Array<CatBidFormWhereInput>>;
  bidPackages?: InputMaybe<BidPackageListRelationFilter>;
  code?: InputMaybe<StringNullableFilter>;
  documentTemplates?: InputMaybe<DocumentTemplateListRelationFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  notificationChapters?: InputMaybe<BidNotificationChapterListRelationFilter>;
};

export type CatBidFormWhereUniqueInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
};

export type CatBidMode = {
  __typename?: 'CatBidMode';
  _count: CatBidModeCount;
  bidPackages?: Maybe<Array<BidPackage>>;
  code?: Maybe<Scalars['String']['output']>;
  documentTemplates?: Maybe<Array<DocumentTemplate>>;
  id: Scalars['String']['output'];
  name?: Maybe<Scalars['String']['output']>;
  notificationChapters?: Maybe<Array<BidNotificationChapter>>;
};

export type CatBidModeConnection = {
  __typename?: 'CatBidModeConnection';
  nodes?: Maybe<Array<CatBidMode>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CatBidModeCount = {
  __typename?: 'CatBidModeCount';
  bidPackages: Scalars['Int']['output'];
  documentTemplates: Scalars['Int']['output'];
  notificationChapters: Scalars['Int']['output'];
};

export type CatBidModeCreateInput = {
  bidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutBidModeInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  documentTemplates?: InputMaybe<DocumentTemplateCreateNestedManyWithoutBidModeInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  notificationChapters?: InputMaybe<BidNotificationChapterCreateNestedManyWithoutBidModeInput>;
};

export type CatBidModeCreateNestedOneWithoutBidPackagesInput = {
  connect?: InputMaybe<CatBidModeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatBidModeCreateOrConnectWithoutBidPackagesInput>;
  create?: InputMaybe<CatBidModeCreateWithoutBidPackagesInput>;
};

export type CatBidModeCreateNestedOneWithoutDocumentTemplatesInput = {
  connect?: InputMaybe<CatBidModeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatBidModeCreateOrConnectWithoutDocumentTemplatesInput>;
  create?: InputMaybe<CatBidModeCreateWithoutDocumentTemplatesInput>;
};

export type CatBidModeCreateNestedOneWithoutNotificationChaptersInput = {
  connect?: InputMaybe<CatBidModeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatBidModeCreateOrConnectWithoutNotificationChaptersInput>;
  create?: InputMaybe<CatBidModeCreateWithoutNotificationChaptersInput>;
};

export type CatBidModeCreateOrConnectWithoutBidPackagesInput = {
  create: CatBidModeCreateWithoutBidPackagesInput;
  where: CatBidModeWhereUniqueInput;
};

export type CatBidModeCreateOrConnectWithoutDocumentTemplatesInput = {
  create: CatBidModeCreateWithoutDocumentTemplatesInput;
  where: CatBidModeWhereUniqueInput;
};

export type CatBidModeCreateOrConnectWithoutNotificationChaptersInput = {
  create: CatBidModeCreateWithoutNotificationChaptersInput;
  where: CatBidModeWhereUniqueInput;
};

export type CatBidModeCreateWithoutBidPackagesInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  documentTemplates?: InputMaybe<DocumentTemplateCreateNestedManyWithoutBidModeInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  notificationChapters?: InputMaybe<BidNotificationChapterCreateNestedManyWithoutBidModeInput>;
};

export type CatBidModeCreateWithoutDocumentTemplatesInput = {
  bidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutBidModeInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  notificationChapters?: InputMaybe<BidNotificationChapterCreateNestedManyWithoutBidModeInput>;
};

export type CatBidModeCreateWithoutNotificationChaptersInput = {
  bidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutBidModeInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  documentTemplates?: InputMaybe<DocumentTemplateCreateNestedManyWithoutBidModeInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type CatBidModeOrderByWithRelationInput = {
  bidPackages?: InputMaybe<BidPackageOrderByRelationAggregateInput>;
  code?: InputMaybe<SortOrderInput>;
  documentTemplates?: InputMaybe<DocumentTemplateOrderByRelationAggregateInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
  notificationChapters?: InputMaybe<BidNotificationChapterOrderByRelationAggregateInput>;
};

export enum CatBidModeScalarFieldEnum {
  Code = 'code',
  Id = 'id',
  Name = 'name'
}

export type CatBidModeUpdateInput = {
  bidPackages?: InputMaybe<BidPackageUpdateManyWithoutBidModeNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentTemplates?: InputMaybe<DocumentTemplateUpdateManyWithoutBidModeNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notificationChapters?: InputMaybe<BidNotificationChapterUpdateManyWithoutBidModeNestedInput>;
};

export type CatBidModeUpdateOneWithoutBidPackagesNestedInput = {
  connect?: InputMaybe<CatBidModeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatBidModeCreateOrConnectWithoutBidPackagesInput>;
  create?: InputMaybe<CatBidModeCreateWithoutBidPackagesInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatBidModeUpdateWithoutBidPackagesInput>;
  upsert?: InputMaybe<CatBidModeUpsertWithoutBidPackagesInput>;
};

export type CatBidModeUpdateOneWithoutDocumentTemplatesNestedInput = {
  connect?: InputMaybe<CatBidModeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatBidModeCreateOrConnectWithoutDocumentTemplatesInput>;
  create?: InputMaybe<CatBidModeCreateWithoutDocumentTemplatesInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatBidModeUpdateWithoutDocumentTemplatesInput>;
  upsert?: InputMaybe<CatBidModeUpsertWithoutDocumentTemplatesInput>;
};

export type CatBidModeUpdateOneWithoutNotificationChaptersNestedInput = {
  connect?: InputMaybe<CatBidModeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatBidModeCreateOrConnectWithoutNotificationChaptersInput>;
  create?: InputMaybe<CatBidModeCreateWithoutNotificationChaptersInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatBidModeUpdateWithoutNotificationChaptersInput>;
  upsert?: InputMaybe<CatBidModeUpsertWithoutNotificationChaptersInput>;
};

export type CatBidModeUpdateWithoutBidPackagesInput = {
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentTemplates?: InputMaybe<DocumentTemplateUpdateManyWithoutBidModeNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notificationChapters?: InputMaybe<BidNotificationChapterUpdateManyWithoutBidModeNestedInput>;
};

export type CatBidModeUpdateWithoutDocumentTemplatesInput = {
  bidPackages?: InputMaybe<BidPackageUpdateManyWithoutBidModeNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notificationChapters?: InputMaybe<BidNotificationChapterUpdateManyWithoutBidModeNestedInput>;
};

export type CatBidModeUpdateWithoutNotificationChaptersInput = {
  bidPackages?: InputMaybe<BidPackageUpdateManyWithoutBidModeNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentTemplates?: InputMaybe<DocumentTemplateUpdateManyWithoutBidModeNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CatBidModeUpsertWithoutBidPackagesInput = {
  create: CatBidModeCreateWithoutBidPackagesInput;
  update: CatBidModeUpdateWithoutBidPackagesInput;
};

export type CatBidModeUpsertWithoutDocumentTemplatesInput = {
  create: CatBidModeCreateWithoutDocumentTemplatesInput;
  update: CatBidModeUpdateWithoutDocumentTemplatesInput;
};

export type CatBidModeUpsertWithoutNotificationChaptersInput = {
  create: CatBidModeCreateWithoutNotificationChaptersInput;
  update: CatBidModeUpdateWithoutNotificationChaptersInput;
};

export type CatBidModeWhereInput = {
  AND?: InputMaybe<Array<CatBidModeWhereInput>>;
  NOT?: InputMaybe<Array<CatBidModeWhereInput>>;
  OR?: InputMaybe<Array<CatBidModeWhereInput>>;
  bidPackages?: InputMaybe<BidPackageListRelationFilter>;
  code?: InputMaybe<StringNullableFilter>;
  documentTemplates?: InputMaybe<DocumentTemplateListRelationFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  notificationChapters?: InputMaybe<BidNotificationChapterListRelationFilter>;
};

export type CatBidModeWhereUniqueInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
};

export type CatBidNotificationStatus = {
  __typename?: 'CatBidNotificationStatus';
  _count: CatBidNotificationStatusCount;
  bidNotifications?: Maybe<Array<BidNotification>>;
  code?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  name?: Maybe<Scalars['String']['output']>;
};

export type CatBidNotificationStatusCount = {
  __typename?: 'CatBidNotificationStatusCount';
  bidNotifications: Scalars['Int']['output'];
};

export type CatBidNotificationStatusCreateNestedOneWithoutBidNotificationsInput = {
  connect?: InputMaybe<CatBidNotificationStatusWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatBidNotificationStatusCreateOrConnectWithoutBidNotificationsInput>;
  create?: InputMaybe<CatBidNotificationStatusCreateWithoutBidNotificationsInput>;
};

export type CatBidNotificationStatusCreateOrConnectWithoutBidNotificationsInput = {
  create: CatBidNotificationStatusCreateWithoutBidNotificationsInput;
  where: CatBidNotificationStatusWhereUniqueInput;
};

export type CatBidNotificationStatusCreateWithoutBidNotificationsInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type CatBidNotificationStatusOrderByWithRelationInput = {
  bidNotifications?: InputMaybe<BidNotificationOrderByRelationAggregateInput>;
  code?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
};

export type CatBidNotificationStatusUpdateOneWithoutBidNotificationsNestedInput = {
  connect?: InputMaybe<CatBidNotificationStatusWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatBidNotificationStatusCreateOrConnectWithoutBidNotificationsInput>;
  create?: InputMaybe<CatBidNotificationStatusCreateWithoutBidNotificationsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatBidNotificationStatusUpdateWithoutBidNotificationsInput>;
  upsert?: InputMaybe<CatBidNotificationStatusUpsertWithoutBidNotificationsInput>;
};

export type CatBidNotificationStatusUpdateWithoutBidNotificationsInput = {
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CatBidNotificationStatusUpsertWithoutBidNotificationsInput = {
  create: CatBidNotificationStatusCreateWithoutBidNotificationsInput;
  update: CatBidNotificationStatusUpdateWithoutBidNotificationsInput;
};

export type CatBidNotificationStatusWhereInput = {
  AND?: InputMaybe<Array<CatBidNotificationStatusWhereInput>>;
  NOT?: InputMaybe<Array<CatBidNotificationStatusWhereInput>>;
  OR?: InputMaybe<Array<CatBidNotificationStatusWhereInput>>;
  bidNotifications?: InputMaybe<BidNotificationListRelationFilter>;
  code?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
};

export type CatBidNotificationStatusWhereUniqueInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
};

export type CatBidSelectionPlanStatus = {
  __typename?: 'CatBidSelectionPlanStatus';
  _count: CatBidSelectionPlanStatusCount;
  bidSelectionPlans?: Maybe<Array<BidSelectionPlan>>;
  code?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  name?: Maybe<Scalars['String']['output']>;
};

export type CatBidSelectionPlanStatusConnection = {
  __typename?: 'CatBidSelectionPlanStatusConnection';
  nodes?: Maybe<Array<CatBidSelectionPlanStatus>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CatBidSelectionPlanStatusCount = {
  __typename?: 'CatBidSelectionPlanStatusCount';
  bidSelectionPlans: Scalars['Int']['output'];
};

export type CatBidSelectionPlanStatusCreateInput = {
  bidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutStatusInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type CatBidSelectionPlanStatusCreateNestedOneWithoutBidSelectionPlansInput = {
  connect?: InputMaybe<CatBidSelectionPlanStatusWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatBidSelectionPlanStatusCreateOrConnectWithoutBidSelectionPlansInput>;
  create?: InputMaybe<CatBidSelectionPlanStatusCreateWithoutBidSelectionPlansInput>;
};

export type CatBidSelectionPlanStatusCreateOrConnectWithoutBidSelectionPlansInput = {
  create: CatBidSelectionPlanStatusCreateWithoutBidSelectionPlansInput;
  where: CatBidSelectionPlanStatusWhereUniqueInput;
};

export type CatBidSelectionPlanStatusCreateWithoutBidSelectionPlansInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type CatBidSelectionPlanStatusOrderByWithRelationInput = {
  bidSelectionPlans?: InputMaybe<BidSelectionPlanOrderByRelationAggregateInput>;
  code?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
};

export enum CatBidSelectionPlanStatusScalarFieldEnum {
  Code = 'code',
  Id = 'id',
  Name = 'name'
}

export type CatBidSelectionPlanStatusUpdateInput = {
  bidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutStatusNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CatBidSelectionPlanStatusUpdateOneWithoutBidSelectionPlansNestedInput = {
  connect?: InputMaybe<CatBidSelectionPlanStatusWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatBidSelectionPlanStatusCreateOrConnectWithoutBidSelectionPlansInput>;
  create?: InputMaybe<CatBidSelectionPlanStatusCreateWithoutBidSelectionPlansInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatBidSelectionPlanStatusUpdateWithoutBidSelectionPlansInput>;
  upsert?: InputMaybe<CatBidSelectionPlanStatusUpsertWithoutBidSelectionPlansInput>;
};

export type CatBidSelectionPlanStatusUpdateWithoutBidSelectionPlansInput = {
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CatBidSelectionPlanStatusUpsertWithoutBidSelectionPlansInput = {
  create: CatBidSelectionPlanStatusCreateWithoutBidSelectionPlansInput;
  update: CatBidSelectionPlanStatusUpdateWithoutBidSelectionPlansInput;
};

export type CatBidSelectionPlanStatusWhereInput = {
  AND?: InputMaybe<Array<CatBidSelectionPlanStatusWhereInput>>;
  NOT?: InputMaybe<Array<CatBidSelectionPlanStatusWhereInput>>;
  OR?: InputMaybe<Array<CatBidSelectionPlanStatusWhereInput>>;
  bidSelectionPlans?: InputMaybe<BidSelectionPlanListRelationFilter>;
  code?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
};

export type CatBidSelectionPlanStatusWhereUniqueInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
};

export type CatBidSelectionPlanType = {
  __typename?: 'CatBidSelectionPlanType';
  _count: CatBidSelectionPlanTypeCount;
  bidSelectionPlans?: Maybe<Array<BidSelectionPlan>>;
  code?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  name?: Maybe<Scalars['String']['output']>;
};

export type CatBidSelectionPlanTypeConnection = {
  __typename?: 'CatBidSelectionPlanTypeConnection';
  nodes?: Maybe<Array<CatBidSelectionPlanType>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CatBidSelectionPlanTypeCount = {
  __typename?: 'CatBidSelectionPlanTypeCount';
  bidSelectionPlans: Scalars['Int']['output'];
};

export type CatBidSelectionPlanTypeCreateInput = {
  bidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutTypeInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type CatBidSelectionPlanTypeCreateNestedOneWithoutBidSelectionPlansInput = {
  connect?: InputMaybe<CatBidSelectionPlanTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatBidSelectionPlanTypeCreateOrConnectWithoutBidSelectionPlansInput>;
  create?: InputMaybe<CatBidSelectionPlanTypeCreateWithoutBidSelectionPlansInput>;
};

export type CatBidSelectionPlanTypeCreateOrConnectWithoutBidSelectionPlansInput = {
  create: CatBidSelectionPlanTypeCreateWithoutBidSelectionPlansInput;
  where: CatBidSelectionPlanTypeWhereUniqueInput;
};

export type CatBidSelectionPlanTypeCreateWithoutBidSelectionPlansInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type CatBidSelectionPlanTypeOrderByWithRelationInput = {
  bidSelectionPlans?: InputMaybe<BidSelectionPlanOrderByRelationAggregateInput>;
  code?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
};

export enum CatBidSelectionPlanTypeScalarFieldEnum {
  Code = 'code',
  Id = 'id',
  Name = 'name'
}

export type CatBidSelectionPlanTypeUpdateInput = {
  bidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutTypeNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CatBidSelectionPlanTypeUpdateOneWithoutBidSelectionPlansNestedInput = {
  connect?: InputMaybe<CatBidSelectionPlanTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatBidSelectionPlanTypeCreateOrConnectWithoutBidSelectionPlansInput>;
  create?: InputMaybe<CatBidSelectionPlanTypeCreateWithoutBidSelectionPlansInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatBidSelectionPlanTypeUpdateWithoutBidSelectionPlansInput>;
  upsert?: InputMaybe<CatBidSelectionPlanTypeUpsertWithoutBidSelectionPlansInput>;
};

export type CatBidSelectionPlanTypeUpdateWithoutBidSelectionPlansInput = {
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CatBidSelectionPlanTypeUpsertWithoutBidSelectionPlansInput = {
  create: CatBidSelectionPlanTypeCreateWithoutBidSelectionPlansInput;
  update: CatBidSelectionPlanTypeUpdateWithoutBidSelectionPlansInput;
};

export type CatBidSelectionPlanTypeWhereInput = {
  AND?: InputMaybe<Array<CatBidSelectionPlanTypeWhereInput>>;
  NOT?: InputMaybe<Array<CatBidSelectionPlanTypeWhereInput>>;
  OR?: InputMaybe<Array<CatBidSelectionPlanTypeWhereInput>>;
  bidSelectionPlans?: InputMaybe<BidSelectionPlanListRelationFilter>;
  code?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
};

export type CatBidSelectionPlanTypeWhereUniqueInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
};

export type CatBusinessType = {
  __typename?: 'CatBusinessType';
  _count: CatBusinessTypeCount;
  code?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  name?: Maybe<Scalars['String']['output']>;
  organizations?: Maybe<Array<Organization>>;
};

export type CatBusinessTypeCount = {
  __typename?: 'CatBusinessTypeCount';
  organizations: Scalars['Int']['output'];
};

export type CatBusinessTypeCreateNestedOneWithoutOrganizationsInput = {
  connect?: InputMaybe<CatBusinessTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatBusinessTypeCreateOrConnectWithoutOrganizationsInput>;
  create?: InputMaybe<CatBusinessTypeCreateWithoutOrganizationsInput>;
};

export type CatBusinessTypeCreateOrConnectWithoutOrganizationsInput = {
  create: CatBusinessTypeCreateWithoutOrganizationsInput;
  where: CatBusinessTypeWhereUniqueInput;
};

export type CatBusinessTypeCreateWithoutOrganizationsInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type CatBusinessTypeOrderByWithRelationInput = {
  code?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
  organizations?: InputMaybe<OrganizationOrderByRelationAggregateInput>;
};

export type CatBusinessTypeUpdateOneWithoutOrganizationsNestedInput = {
  connect?: InputMaybe<CatBusinessTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatBusinessTypeCreateOrConnectWithoutOrganizationsInput>;
  create?: InputMaybe<CatBusinessTypeCreateWithoutOrganizationsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatBusinessTypeUpdateWithoutOrganizationsInput>;
  upsert?: InputMaybe<CatBusinessTypeUpsertWithoutOrganizationsInput>;
};

export type CatBusinessTypeUpdateWithoutOrganizationsInput = {
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CatBusinessTypeUpsertWithoutOrganizationsInput = {
  create: CatBusinessTypeCreateWithoutOrganizationsInput;
  update: CatBusinessTypeUpdateWithoutOrganizationsInput;
};

export type CatBusinessTypeWhereInput = {
  AND?: InputMaybe<Array<CatBusinessTypeWhereInput>>;
  NOT?: InputMaybe<Array<CatBusinessTypeWhereInput>>;
  OR?: InputMaybe<Array<CatBusinessTypeWhereInput>>;
  code?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  organizations?: InputMaybe<OrganizationListRelationFilter>;
};

export type CatBusinessTypeWhereUniqueInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
};

export type CatConstructionType = {
  __typename?: 'CatConstructionType';
  _count: CatConstructionTypeCount;
  bidNotifications?: Maybe<Array<BidNotification>>;
  code?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  name?: Maybe<Scalars['String']['output']>;
};

export type CatConstructionTypeConnection = {
  __typename?: 'CatConstructionTypeConnection';
  nodes?: Maybe<Array<CatConstructionType>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CatConstructionTypeCount = {
  __typename?: 'CatConstructionTypeCount';
  bidNotifications: Scalars['Int']['output'];
};

export type CatConstructionTypeCreateInput = {
  bidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutConstructionTypeInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type CatConstructionTypeCreateNestedOneWithoutBidNotificationsInput = {
  connect?: InputMaybe<CatConstructionTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatConstructionTypeCreateOrConnectWithoutBidNotificationsInput>;
  create?: InputMaybe<CatConstructionTypeCreateWithoutBidNotificationsInput>;
};

export type CatConstructionTypeCreateOrConnectWithoutBidNotificationsInput = {
  create: CatConstructionTypeCreateWithoutBidNotificationsInput;
  where: CatConstructionTypeWhereUniqueInput;
};

export type CatConstructionTypeCreateWithoutBidNotificationsInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type CatConstructionTypeOrderByWithRelationInput = {
  bidNotifications?: InputMaybe<BidNotificationOrderByRelationAggregateInput>;
  code?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
};

export enum CatConstructionTypeScalarFieldEnum {
  Code = 'code',
  Id = 'id',
  Name = 'name'
}

export type CatConstructionTypeUpdateInput = {
  bidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutConstructionTypeNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CatConstructionTypeUpdateOneWithoutBidNotificationsNestedInput = {
  connect?: InputMaybe<CatConstructionTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatConstructionTypeCreateOrConnectWithoutBidNotificationsInput>;
  create?: InputMaybe<CatConstructionTypeCreateWithoutBidNotificationsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatConstructionTypeUpdateWithoutBidNotificationsInput>;
  upsert?: InputMaybe<CatConstructionTypeUpsertWithoutBidNotificationsInput>;
};

export type CatConstructionTypeUpdateWithoutBidNotificationsInput = {
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CatConstructionTypeUpsertWithoutBidNotificationsInput = {
  create: CatConstructionTypeCreateWithoutBidNotificationsInput;
  update: CatConstructionTypeUpdateWithoutBidNotificationsInput;
};

export type CatConstructionTypeWhereInput = {
  AND?: InputMaybe<Array<CatConstructionTypeWhereInput>>;
  NOT?: InputMaybe<Array<CatConstructionTypeWhereInput>>;
  OR?: InputMaybe<Array<CatConstructionTypeWhereInput>>;
  bidNotifications?: InputMaybe<BidNotificationListRelationFilter>;
  code?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
};

export type CatConstructionTypeWhereUniqueInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
};

export type CatContractStatus = {
  __typename?: 'CatContractStatus';
  code?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  name?: Maybe<Scalars['String']['output']>;
};

export type CatContractStatusConnection = {
  __typename?: 'CatContractStatusConnection';
  nodes?: Maybe<Array<CatContractStatus>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CatContractStatusCreateInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type CatContractStatusOrderByWithRelationInput = {
  code?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
};

export enum CatContractStatusScalarFieldEnum {
  Code = 'code',
  Id = 'id',
  Name = 'name'
}

export type CatContractStatusUpdateInput = {
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CatContractStatusWhereInput = {
  AND?: InputMaybe<Array<CatContractStatusWhereInput>>;
  NOT?: InputMaybe<Array<CatContractStatusWhereInput>>;
  OR?: InputMaybe<Array<CatContractStatusWhereInput>>;
  code?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
};

export type CatContractStatusWhereUniqueInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
};

export type CatContractType = {
  __typename?: 'CatContractType';
  _count: CatContractTypeCount;
  bidPackages?: Maybe<Array<BidPackage>>;
  chapterFiles?: Maybe<Array<BidNotificationChapterFile>>;
  code?: Maybe<Scalars['String']['output']>;
  documentTemplate?: Maybe<Array<DocumentTemplate>>;
  id: Scalars['String']['output'];
  name?: Maybe<Scalars['String']['output']>;
};

export type CatContractTypeConnection = {
  __typename?: 'CatContractTypeConnection';
  nodes?: Maybe<Array<CatContractType>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CatContractTypeCount = {
  __typename?: 'CatContractTypeCount';
  bidPackages: Scalars['Int']['output'];
  chapterFiles: Scalars['Int']['output'];
  documentTemplate: Scalars['Int']['output'];
};

export type CatContractTypeCreateInput = {
  bidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutContractTypeInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutContractTypeInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  documentTemplate?: InputMaybe<DocumentTemplateCreateNestedManyWithoutContractTypeInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type CatContractTypeCreateNestedOneWithoutBidPackagesInput = {
  connect?: InputMaybe<CatContractTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatContractTypeCreateOrConnectWithoutBidPackagesInput>;
  create?: InputMaybe<CatContractTypeCreateWithoutBidPackagesInput>;
};

export type CatContractTypeCreateNestedOneWithoutChapterFilesInput = {
  connect?: InputMaybe<CatContractTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatContractTypeCreateOrConnectWithoutChapterFilesInput>;
  create?: InputMaybe<CatContractTypeCreateWithoutChapterFilesInput>;
};

export type CatContractTypeCreateNestedOneWithoutDocumentTemplateInput = {
  connect?: InputMaybe<CatContractTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatContractTypeCreateOrConnectWithoutDocumentTemplateInput>;
  create?: InputMaybe<CatContractTypeCreateWithoutDocumentTemplateInput>;
};

export type CatContractTypeCreateOrConnectWithoutBidPackagesInput = {
  create: CatContractTypeCreateWithoutBidPackagesInput;
  where: CatContractTypeWhereUniqueInput;
};

export type CatContractTypeCreateOrConnectWithoutChapterFilesInput = {
  create: CatContractTypeCreateWithoutChapterFilesInput;
  where: CatContractTypeWhereUniqueInput;
};

export type CatContractTypeCreateOrConnectWithoutDocumentTemplateInput = {
  create: CatContractTypeCreateWithoutDocumentTemplateInput;
  where: CatContractTypeWhereUniqueInput;
};

export type CatContractTypeCreateWithoutBidPackagesInput = {
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutContractTypeInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  documentTemplate?: InputMaybe<DocumentTemplateCreateNestedManyWithoutContractTypeInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type CatContractTypeCreateWithoutChapterFilesInput = {
  bidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutContractTypeInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  documentTemplate?: InputMaybe<DocumentTemplateCreateNestedManyWithoutContractTypeInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type CatContractTypeCreateWithoutDocumentTemplateInput = {
  bidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutContractTypeInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutContractTypeInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type CatContractTypeOrderByWithRelationInput = {
  bidPackages?: InputMaybe<BidPackageOrderByRelationAggregateInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileOrderByRelationAggregateInput>;
  code?: InputMaybe<SortOrderInput>;
  documentTemplate?: InputMaybe<DocumentTemplateOrderByRelationAggregateInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
};

export enum CatContractTypeScalarFieldEnum {
  Code = 'code',
  Id = 'id',
  Name = 'name'
}

export type CatContractTypeUpdateInput = {
  bidPackages?: InputMaybe<BidPackageUpdateManyWithoutContractTypeNestedInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutContractTypeNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentTemplate?: InputMaybe<DocumentTemplateUpdateManyWithoutContractTypeNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CatContractTypeUpdateOneWithoutBidPackagesNestedInput = {
  connect?: InputMaybe<CatContractTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatContractTypeCreateOrConnectWithoutBidPackagesInput>;
  create?: InputMaybe<CatContractTypeCreateWithoutBidPackagesInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatContractTypeUpdateWithoutBidPackagesInput>;
  upsert?: InputMaybe<CatContractTypeUpsertWithoutBidPackagesInput>;
};

export type CatContractTypeUpdateOneWithoutChapterFilesNestedInput = {
  connect?: InputMaybe<CatContractTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatContractTypeCreateOrConnectWithoutChapterFilesInput>;
  create?: InputMaybe<CatContractTypeCreateWithoutChapterFilesInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatContractTypeUpdateWithoutChapterFilesInput>;
  upsert?: InputMaybe<CatContractTypeUpsertWithoutChapterFilesInput>;
};

export type CatContractTypeUpdateOneWithoutDocumentTemplateNestedInput = {
  connect?: InputMaybe<CatContractTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatContractTypeCreateOrConnectWithoutDocumentTemplateInput>;
  create?: InputMaybe<CatContractTypeCreateWithoutDocumentTemplateInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatContractTypeUpdateWithoutDocumentTemplateInput>;
  upsert?: InputMaybe<CatContractTypeUpsertWithoutDocumentTemplateInput>;
};

export type CatContractTypeUpdateWithoutBidPackagesInput = {
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutContractTypeNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentTemplate?: InputMaybe<DocumentTemplateUpdateManyWithoutContractTypeNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CatContractTypeUpdateWithoutChapterFilesInput = {
  bidPackages?: InputMaybe<BidPackageUpdateManyWithoutContractTypeNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentTemplate?: InputMaybe<DocumentTemplateUpdateManyWithoutContractTypeNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CatContractTypeUpdateWithoutDocumentTemplateInput = {
  bidPackages?: InputMaybe<BidPackageUpdateManyWithoutContractTypeNestedInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutContractTypeNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CatContractTypeUpsertWithoutBidPackagesInput = {
  create: CatContractTypeCreateWithoutBidPackagesInput;
  update: CatContractTypeUpdateWithoutBidPackagesInput;
};

export type CatContractTypeUpsertWithoutChapterFilesInput = {
  create: CatContractTypeCreateWithoutChapterFilesInput;
  update: CatContractTypeUpdateWithoutChapterFilesInput;
};

export type CatContractTypeUpsertWithoutDocumentTemplateInput = {
  create: CatContractTypeCreateWithoutDocumentTemplateInput;
  update: CatContractTypeUpdateWithoutDocumentTemplateInput;
};

export type CatContractTypeWhereInput = {
  AND?: InputMaybe<Array<CatContractTypeWhereInput>>;
  NOT?: InputMaybe<Array<CatContractTypeWhereInput>>;
  OR?: InputMaybe<Array<CatContractTypeWhereInput>>;
  bidPackages?: InputMaybe<BidPackageListRelationFilter>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileListRelationFilter>;
  code?: InputMaybe<StringNullableFilter>;
  documentTemplate?: InputMaybe<DocumentTemplateListRelationFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
};

export type CatContractTypeWhereUniqueInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
};

export type CatContractorType = {
  __typename?: 'CatContractorType';
  code?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  name?: Maybe<Scalars['String']['output']>;
};

export type CatContractorTypeConnection = {
  __typename?: 'CatContractorTypeConnection';
  nodes?: Maybe<Array<CatContractorType>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CatContractorTypeCreateInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type CatContractorTypeOrderByWithRelationInput = {
  code?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
};

export enum CatContractorTypeScalarFieldEnum {
  Code = 'code',
  Id = 'id',
  Name = 'name'
}

export type CatContractorTypeUpdateInput = {
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CatContractorTypeWhereInput = {
  AND?: InputMaybe<Array<CatContractorTypeWhereInput>>;
  NOT?: InputMaybe<Array<CatContractorTypeWhereInput>>;
  OR?: InputMaybe<Array<CatContractorTypeWhereInput>>;
  code?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
};

export type CatContractorTypeWhereUniqueInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
};

export type CatInvestmentForm = {
  __typename?: 'CatInvestmentForm';
  _count: CatInvestmentFormCount;
  code?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  name?: Maybe<Scalars['String']['output']>;
  projects?: Maybe<Array<Project>>;
};

export type CatInvestmentFormConnection = {
  __typename?: 'CatInvestmentFormConnection';
  nodes?: Maybe<Array<CatInvestmentForm>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CatInvestmentFormCount = {
  __typename?: 'CatInvestmentFormCount';
  projects: Scalars['Int']['output'];
};

export type CatInvestmentFormCreateInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  projects?: InputMaybe<ProjectCreateNestedManyWithoutInvestmentFormInput>;
};

export type CatInvestmentFormCreateNestedOneWithoutProjectsInput = {
  connect?: InputMaybe<CatInvestmentFormWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatInvestmentFormCreateOrConnectWithoutProjectsInput>;
  create?: InputMaybe<CatInvestmentFormCreateWithoutProjectsInput>;
};

export type CatInvestmentFormCreateOrConnectWithoutProjectsInput = {
  create: CatInvestmentFormCreateWithoutProjectsInput;
  where: CatInvestmentFormWhereUniqueInput;
};

export type CatInvestmentFormCreateWithoutProjectsInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type CatInvestmentFormOrderByWithRelationInput = {
  code?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
  projects?: InputMaybe<ProjectOrderByRelationAggregateInput>;
};

export enum CatInvestmentFormScalarFieldEnum {
  Code = 'code',
  Id = 'id',
  Name = 'name'
}

export type CatInvestmentFormUpdateInput = {
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  projects?: InputMaybe<ProjectUpdateManyWithoutInvestmentFormNestedInput>;
};

export type CatInvestmentFormUpdateOneWithoutProjectsNestedInput = {
  connect?: InputMaybe<CatInvestmentFormWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatInvestmentFormCreateOrConnectWithoutProjectsInput>;
  create?: InputMaybe<CatInvestmentFormCreateWithoutProjectsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatInvestmentFormUpdateWithoutProjectsInput>;
  upsert?: InputMaybe<CatInvestmentFormUpsertWithoutProjectsInput>;
};

export type CatInvestmentFormUpdateWithoutProjectsInput = {
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CatInvestmentFormUpsertWithoutProjectsInput = {
  create: CatInvestmentFormCreateWithoutProjectsInput;
  update: CatInvestmentFormUpdateWithoutProjectsInput;
};

export type CatInvestmentFormWhereInput = {
  AND?: InputMaybe<Array<CatInvestmentFormWhereInput>>;
  NOT?: InputMaybe<Array<CatInvestmentFormWhereInput>>;
  OR?: InputMaybe<Array<CatInvestmentFormWhereInput>>;
  code?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  projects?: InputMaybe<ProjectListRelationFilter>;
};

export type CatInvestmentFormWhereUniqueInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
};

export type CatMedicalType = {
  __typename?: 'CatMedicalType';
  _count: CatMedicalTypeCount;
  code?: Maybe<Scalars['Int']['output']>;
  id: Scalars['String']['output'];
  name?: Maybe<Scalars['String']['output']>;
  notificationChapters?: Maybe<Array<BidNotificationChapter>>;
};

export type CatMedicalTypeCount = {
  __typename?: 'CatMedicalTypeCount';
  notificationChapters: Scalars['Int']['output'];
};

export type CatMedicalTypeCreateNestedOneWithoutNotificationChaptersInput = {
  connect?: InputMaybe<CatMedicalTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatMedicalTypeCreateOrConnectWithoutNotificationChaptersInput>;
  create?: InputMaybe<CatMedicalTypeCreateWithoutNotificationChaptersInput>;
};

export type CatMedicalTypeCreateOrConnectWithoutNotificationChaptersInput = {
  create: CatMedicalTypeCreateWithoutNotificationChaptersInput;
  where: CatMedicalTypeWhereUniqueInput;
};

export type CatMedicalTypeCreateWithoutNotificationChaptersInput = {
  code?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type CatMedicalTypeUpdateOneWithoutNotificationChaptersNestedInput = {
  connect?: InputMaybe<CatMedicalTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatMedicalTypeCreateOrConnectWithoutNotificationChaptersInput>;
  create?: InputMaybe<CatMedicalTypeCreateWithoutNotificationChaptersInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatMedicalTypeUpdateWithoutNotificationChaptersInput>;
  upsert?: InputMaybe<CatMedicalTypeUpsertWithoutNotificationChaptersInput>;
};

export type CatMedicalTypeUpdateWithoutNotificationChaptersInput = {
  code?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CatMedicalTypeUpsertWithoutNotificationChaptersInput = {
  create: CatMedicalTypeCreateWithoutNotificationChaptersInput;
  update: CatMedicalTypeUpdateWithoutNotificationChaptersInput;
};

export type CatMedicalTypeWhereInput = {
  AND?: InputMaybe<Array<CatMedicalTypeWhereInput>>;
  NOT?: InputMaybe<Array<CatMedicalTypeWhereInput>>;
  OR?: InputMaybe<Array<CatMedicalTypeWhereInput>>;
  code?: InputMaybe<IntNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  notificationChapters?: InputMaybe<BidNotificationChapterListRelationFilter>;
};

export type CatMedicalTypeWhereUniqueInput = {
  code?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
};

export type CatMinistry = {
  __typename?: 'CatMinistry';
  _count: CatMinistryCount;
  bidPackages?: Maybe<Array<BidPackage>>;
  code?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  name?: Maybe<Scalars['String']['output']>;
};

export type CatMinistryCount = {
  __typename?: 'CatMinistryCount';
  bidPackages: Scalars['Int']['output'];
};

export type CatMinistryCreateNestedOneWithoutBidPackagesInput = {
  connect?: InputMaybe<CatMinistryWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatMinistryCreateOrConnectWithoutBidPackagesInput>;
  create?: InputMaybe<CatMinistryCreateWithoutBidPackagesInput>;
};

export type CatMinistryCreateOrConnectWithoutBidPackagesInput = {
  create: CatMinistryCreateWithoutBidPackagesInput;
  where: CatMinistryWhereUniqueInput;
};

export type CatMinistryCreateWithoutBidPackagesInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type CatMinistryOrderByWithRelationInput = {
  bidPackages?: InputMaybe<BidPackageOrderByRelationAggregateInput>;
  code?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
};

export type CatMinistryUpdateOneWithoutBidPackagesNestedInput = {
  connect?: InputMaybe<CatMinistryWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatMinistryCreateOrConnectWithoutBidPackagesInput>;
  create?: InputMaybe<CatMinistryCreateWithoutBidPackagesInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatMinistryUpdateWithoutBidPackagesInput>;
  upsert?: InputMaybe<CatMinistryUpsertWithoutBidPackagesInput>;
};

export type CatMinistryUpdateWithoutBidPackagesInput = {
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CatMinistryUpsertWithoutBidPackagesInput = {
  create: CatMinistryCreateWithoutBidPackagesInput;
  update: CatMinistryUpdateWithoutBidPackagesInput;
};

export type CatMinistryWhereInput = {
  AND?: InputMaybe<Array<CatMinistryWhereInput>>;
  NOT?: InputMaybe<Array<CatMinistryWhereInput>>;
  OR?: InputMaybe<Array<CatMinistryWhereInput>>;
  bidPackages?: InputMaybe<BidPackageListRelationFilter>;
  code?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
};

export type CatMinistryWhereUniqueInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
};

export type CatOrganizationSize = {
  __typename?: 'CatOrganizationSize';
  code?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  name?: Maybe<Scalars['String']['output']>;
};

export type CatOrganizationSizeConnection = {
  __typename?: 'CatOrganizationSizeConnection';
  nodes?: Maybe<Array<CatOrganizationSize>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CatOrganizationSizeCreateInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type CatOrganizationSizeOrderByWithRelationInput = {
  code?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
};

export enum CatOrganizationSizeScalarFieldEnum {
  Code = 'code',
  Id = 'id',
  Name = 'name'
}

export type CatOrganizationSizeUpdateInput = {
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CatOrganizationSizeWhereInput = {
  AND?: InputMaybe<Array<CatOrganizationSizeWhereInput>>;
  NOT?: InputMaybe<Array<CatOrganizationSizeWhereInput>>;
  OR?: InputMaybe<Array<CatOrganizationSizeWhereInput>>;
  code?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
};

export type CatOrganizationSizeWhereUniqueInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
};

export type CatProcessApply = {
  __typename?: 'CatProcessApply';
  _count: CatProcessApplyCount;
  bidNotifications?: Maybe<Array<BidNotification>>;
  bidPackages?: Maybe<Array<BidPackage>>;
  code?: Maybe<Scalars['String']['output']>;
  documentTemplates?: Maybe<Array<DocumentTemplate>>;
  id: Scalars['String']['output'];
  name?: Maybe<Scalars['String']['output']>;
  notificationChapters?: Maybe<Array<BidNotificationChapter>>;
};

export type CatProcessApplyConnection = {
  __typename?: 'CatProcessApplyConnection';
  nodes?: Maybe<Array<CatProcessApply>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CatProcessApplyCount = {
  __typename?: 'CatProcessApplyCount';
  bidNotifications: Scalars['Int']['output'];
  bidPackages: Scalars['Int']['output'];
  documentTemplates: Scalars['Int']['output'];
  notificationChapters: Scalars['Int']['output'];
};

export type CatProcessApplyCreateInput = {
  bidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutProcessApplyInput>;
  bidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutProcessApplyInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  documentTemplates?: InputMaybe<DocumentTemplateCreateNestedManyWithoutProcessApplyInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  notificationChapters?: InputMaybe<BidNotificationChapterCreateNestedManyWithoutProcessApplyInput>;
};

export type CatProcessApplyCreateNestedOneWithoutBidNotificationsInput = {
  connect?: InputMaybe<CatProcessApplyWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatProcessApplyCreateOrConnectWithoutBidNotificationsInput>;
  create?: InputMaybe<CatProcessApplyCreateWithoutBidNotificationsInput>;
};

export type CatProcessApplyCreateNestedOneWithoutBidPackagesInput = {
  connect?: InputMaybe<CatProcessApplyWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatProcessApplyCreateOrConnectWithoutBidPackagesInput>;
  create?: InputMaybe<CatProcessApplyCreateWithoutBidPackagesInput>;
};

export type CatProcessApplyCreateNestedOneWithoutDocumentTemplatesInput = {
  connect?: InputMaybe<CatProcessApplyWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatProcessApplyCreateOrConnectWithoutDocumentTemplatesInput>;
  create?: InputMaybe<CatProcessApplyCreateWithoutDocumentTemplatesInput>;
};

export type CatProcessApplyCreateNestedOneWithoutNotificationChaptersInput = {
  connect?: InputMaybe<CatProcessApplyWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatProcessApplyCreateOrConnectWithoutNotificationChaptersInput>;
  create?: InputMaybe<CatProcessApplyCreateWithoutNotificationChaptersInput>;
};

export type CatProcessApplyCreateOrConnectWithoutBidNotificationsInput = {
  create: CatProcessApplyCreateWithoutBidNotificationsInput;
  where: CatProcessApplyWhereUniqueInput;
};

export type CatProcessApplyCreateOrConnectWithoutBidPackagesInput = {
  create: CatProcessApplyCreateWithoutBidPackagesInput;
  where: CatProcessApplyWhereUniqueInput;
};

export type CatProcessApplyCreateOrConnectWithoutDocumentTemplatesInput = {
  create: CatProcessApplyCreateWithoutDocumentTemplatesInput;
  where: CatProcessApplyWhereUniqueInput;
};

export type CatProcessApplyCreateOrConnectWithoutNotificationChaptersInput = {
  create: CatProcessApplyCreateWithoutNotificationChaptersInput;
  where: CatProcessApplyWhereUniqueInput;
};

export type CatProcessApplyCreateWithoutBidNotificationsInput = {
  bidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutProcessApplyInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  documentTemplates?: InputMaybe<DocumentTemplateCreateNestedManyWithoutProcessApplyInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  notificationChapters?: InputMaybe<BidNotificationChapterCreateNestedManyWithoutProcessApplyInput>;
};

export type CatProcessApplyCreateWithoutBidPackagesInput = {
  bidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutProcessApplyInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  documentTemplates?: InputMaybe<DocumentTemplateCreateNestedManyWithoutProcessApplyInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  notificationChapters?: InputMaybe<BidNotificationChapterCreateNestedManyWithoutProcessApplyInput>;
};

export type CatProcessApplyCreateWithoutDocumentTemplatesInput = {
  bidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutProcessApplyInput>;
  bidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutProcessApplyInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  notificationChapters?: InputMaybe<BidNotificationChapterCreateNestedManyWithoutProcessApplyInput>;
};

export type CatProcessApplyCreateWithoutNotificationChaptersInput = {
  bidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutProcessApplyInput>;
  bidPackages?: InputMaybe<BidPackageCreateNestedManyWithoutProcessApplyInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  documentTemplates?: InputMaybe<DocumentTemplateCreateNestedManyWithoutProcessApplyInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type CatProcessApplyOrderByWithRelationInput = {
  bidNotifications?: InputMaybe<BidNotificationOrderByRelationAggregateInput>;
  bidPackages?: InputMaybe<BidPackageOrderByRelationAggregateInput>;
  code?: InputMaybe<SortOrderInput>;
  documentTemplates?: InputMaybe<DocumentTemplateOrderByRelationAggregateInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
  notificationChapters?: InputMaybe<BidNotificationChapterOrderByRelationAggregateInput>;
};

export enum CatProcessApplyScalarFieldEnum {
  Code = 'code',
  Id = 'id',
  Name = 'name'
}

export type CatProcessApplyUpdateInput = {
  bidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutProcessApplyNestedInput>;
  bidPackages?: InputMaybe<BidPackageUpdateManyWithoutProcessApplyNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentTemplates?: InputMaybe<DocumentTemplateUpdateManyWithoutProcessApplyNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notificationChapters?: InputMaybe<BidNotificationChapterUpdateManyWithoutProcessApplyNestedInput>;
};

export type CatProcessApplyUpdateOneWithoutBidNotificationsNestedInput = {
  connect?: InputMaybe<CatProcessApplyWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatProcessApplyCreateOrConnectWithoutBidNotificationsInput>;
  create?: InputMaybe<CatProcessApplyCreateWithoutBidNotificationsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatProcessApplyUpdateWithoutBidNotificationsInput>;
  upsert?: InputMaybe<CatProcessApplyUpsertWithoutBidNotificationsInput>;
};

export type CatProcessApplyUpdateOneWithoutBidPackagesNestedInput = {
  connect?: InputMaybe<CatProcessApplyWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatProcessApplyCreateOrConnectWithoutBidPackagesInput>;
  create?: InputMaybe<CatProcessApplyCreateWithoutBidPackagesInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatProcessApplyUpdateWithoutBidPackagesInput>;
  upsert?: InputMaybe<CatProcessApplyUpsertWithoutBidPackagesInput>;
};

export type CatProcessApplyUpdateOneWithoutDocumentTemplatesNestedInput = {
  connect?: InputMaybe<CatProcessApplyWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatProcessApplyCreateOrConnectWithoutDocumentTemplatesInput>;
  create?: InputMaybe<CatProcessApplyCreateWithoutDocumentTemplatesInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatProcessApplyUpdateWithoutDocumentTemplatesInput>;
  upsert?: InputMaybe<CatProcessApplyUpsertWithoutDocumentTemplatesInput>;
};

export type CatProcessApplyUpdateOneWithoutNotificationChaptersNestedInput = {
  connect?: InputMaybe<CatProcessApplyWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatProcessApplyCreateOrConnectWithoutNotificationChaptersInput>;
  create?: InputMaybe<CatProcessApplyCreateWithoutNotificationChaptersInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatProcessApplyUpdateWithoutNotificationChaptersInput>;
  upsert?: InputMaybe<CatProcessApplyUpsertWithoutNotificationChaptersInput>;
};

export type CatProcessApplyUpdateWithoutBidNotificationsInput = {
  bidPackages?: InputMaybe<BidPackageUpdateManyWithoutProcessApplyNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentTemplates?: InputMaybe<DocumentTemplateUpdateManyWithoutProcessApplyNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notificationChapters?: InputMaybe<BidNotificationChapterUpdateManyWithoutProcessApplyNestedInput>;
};

export type CatProcessApplyUpdateWithoutBidPackagesInput = {
  bidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutProcessApplyNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentTemplates?: InputMaybe<DocumentTemplateUpdateManyWithoutProcessApplyNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notificationChapters?: InputMaybe<BidNotificationChapterUpdateManyWithoutProcessApplyNestedInput>;
};

export type CatProcessApplyUpdateWithoutDocumentTemplatesInput = {
  bidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutProcessApplyNestedInput>;
  bidPackages?: InputMaybe<BidPackageUpdateManyWithoutProcessApplyNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notificationChapters?: InputMaybe<BidNotificationChapterUpdateManyWithoutProcessApplyNestedInput>;
};

export type CatProcessApplyUpdateWithoutNotificationChaptersInput = {
  bidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutProcessApplyNestedInput>;
  bidPackages?: InputMaybe<BidPackageUpdateManyWithoutProcessApplyNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentTemplates?: InputMaybe<DocumentTemplateUpdateManyWithoutProcessApplyNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CatProcessApplyUpsertWithoutBidNotificationsInput = {
  create: CatProcessApplyCreateWithoutBidNotificationsInput;
  update: CatProcessApplyUpdateWithoutBidNotificationsInput;
};

export type CatProcessApplyUpsertWithoutBidPackagesInput = {
  create: CatProcessApplyCreateWithoutBidPackagesInput;
  update: CatProcessApplyUpdateWithoutBidPackagesInput;
};

export type CatProcessApplyUpsertWithoutDocumentTemplatesInput = {
  create: CatProcessApplyCreateWithoutDocumentTemplatesInput;
  update: CatProcessApplyUpdateWithoutDocumentTemplatesInput;
};

export type CatProcessApplyUpsertWithoutNotificationChaptersInput = {
  create: CatProcessApplyCreateWithoutNotificationChaptersInput;
  update: CatProcessApplyUpdateWithoutNotificationChaptersInput;
};

export type CatProcessApplyWhereInput = {
  AND?: InputMaybe<Array<CatProcessApplyWhereInput>>;
  NOT?: InputMaybe<Array<CatProcessApplyWhereInput>>;
  OR?: InputMaybe<Array<CatProcessApplyWhereInput>>;
  bidNotifications?: InputMaybe<BidNotificationListRelationFilter>;
  bidPackages?: InputMaybe<BidPackageListRelationFilter>;
  code?: InputMaybe<StringNullableFilter>;
  documentTemplates?: InputMaybe<DocumentTemplateListRelationFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  notificationChapters?: InputMaybe<BidNotificationChapterListRelationFilter>;
};

export type CatProcessApplyWhereUniqueInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
};

export type CatProjectApprovalStatus = {
  __typename?: 'CatProjectApprovalStatus';
  code?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  name?: Maybe<Scalars['String']['output']>;
};

export type CatProjectApprovalStatusConnection = {
  __typename?: 'CatProjectApprovalStatusConnection';
  nodes?: Maybe<Array<CatProjectApprovalStatus>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CatProjectApprovalStatusCreateInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type CatProjectApprovalStatusOrderByWithRelationInput = {
  code?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
};

export enum CatProjectApprovalStatusScalarFieldEnum {
  Code = 'code',
  Id = 'id',
  Name = 'name'
}

export type CatProjectApprovalStatusUpdateInput = {
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CatProjectApprovalStatusWhereInput = {
  AND?: InputMaybe<Array<CatProjectApprovalStatusWhereInput>>;
  NOT?: InputMaybe<Array<CatProjectApprovalStatusWhereInput>>;
  OR?: InputMaybe<Array<CatProjectApprovalStatusWhereInput>>;
  code?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
};

export type CatProjectApprovalStatusWhereUniqueInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
};

export type CatProjectGroup = {
  __typename?: 'CatProjectGroup';
  _count: CatProjectGroupCount;
  code?: Maybe<Scalars['String']['output']>;
  groupProjects?: Maybe<Array<Project>>;
  id: Scalars['String']['output'];
  name?: Maybe<Scalars['String']['output']>;
};

export type CatProjectGroupConnection = {
  __typename?: 'CatProjectGroupConnection';
  nodes?: Maybe<Array<CatProjectGroup>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CatProjectGroupCount = {
  __typename?: 'CatProjectGroupCount';
  groupProjects: Scalars['Int']['output'];
};

export type CatProjectGroupCreateInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  groupProjects?: InputMaybe<ProjectCreateNestedManyWithoutGroupInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type CatProjectGroupCreateNestedOneWithoutGroupProjectsInput = {
  connect?: InputMaybe<CatProjectGroupWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatProjectGroupCreateOrConnectWithoutGroupProjectsInput>;
  create?: InputMaybe<CatProjectGroupCreateWithoutGroupProjectsInput>;
};

export type CatProjectGroupCreateOrConnectWithoutGroupProjectsInput = {
  create: CatProjectGroupCreateWithoutGroupProjectsInput;
  where: CatProjectGroupWhereUniqueInput;
};

export type CatProjectGroupCreateWithoutGroupProjectsInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type CatProjectGroupOrderByWithRelationInput = {
  code?: InputMaybe<SortOrderInput>;
  groupProjects?: InputMaybe<ProjectOrderByRelationAggregateInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
};

export enum CatProjectGroupScalarFieldEnum {
  Code = 'code',
  Id = 'id',
  Name = 'name'
}

export type CatProjectGroupUpdateInput = {
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  groupProjects?: InputMaybe<ProjectUpdateManyWithoutGroupNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CatProjectGroupUpdateOneWithoutGroupProjectsNestedInput = {
  connect?: InputMaybe<CatProjectGroupWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatProjectGroupCreateOrConnectWithoutGroupProjectsInput>;
  create?: InputMaybe<CatProjectGroupCreateWithoutGroupProjectsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatProjectGroupUpdateWithoutGroupProjectsInput>;
  upsert?: InputMaybe<CatProjectGroupUpsertWithoutGroupProjectsInput>;
};

export type CatProjectGroupUpdateWithoutGroupProjectsInput = {
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CatProjectGroupUpsertWithoutGroupProjectsInput = {
  create: CatProjectGroupCreateWithoutGroupProjectsInput;
  update: CatProjectGroupUpdateWithoutGroupProjectsInput;
};

export type CatProjectGroupWhereInput = {
  AND?: InputMaybe<Array<CatProjectGroupWhereInput>>;
  NOT?: InputMaybe<Array<CatProjectGroupWhereInput>>;
  OR?: InputMaybe<Array<CatProjectGroupWhereInput>>;
  code?: InputMaybe<StringNullableFilter>;
  groupProjects?: InputMaybe<ProjectListRelationFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
};

export type CatProjectGroupWhereUniqueInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
};

export type CatProjectManagementForm = {
  __typename?: 'CatProjectManagementForm';
  _count: CatProjectManagementFormCount;
  code?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  name?: Maybe<Scalars['String']['output']>;
  projects?: Maybe<Array<Project>>;
};

export type CatProjectManagementFormConnection = {
  __typename?: 'CatProjectManagementFormConnection';
  nodes?: Maybe<Array<CatProjectManagementForm>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type CatProjectManagementFormCount = {
  __typename?: 'CatProjectManagementFormCount';
  projects: Scalars['Int']['output'];
};

export type CatProjectManagementFormCreateInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  projects?: InputMaybe<ProjectCreateNestedManyWithoutManagementFormInput>;
};

export type CatProjectManagementFormCreateNestedOneWithoutProjectsInput = {
  connect?: InputMaybe<CatProjectManagementFormWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatProjectManagementFormCreateOrConnectWithoutProjectsInput>;
  create?: InputMaybe<CatProjectManagementFormCreateWithoutProjectsInput>;
};

export type CatProjectManagementFormCreateOrConnectWithoutProjectsInput = {
  create: CatProjectManagementFormCreateWithoutProjectsInput;
  where: CatProjectManagementFormWhereUniqueInput;
};

export type CatProjectManagementFormCreateWithoutProjectsInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type CatProjectManagementFormOrderByWithRelationInput = {
  code?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
  projects?: InputMaybe<ProjectOrderByRelationAggregateInput>;
};

export enum CatProjectManagementFormScalarFieldEnum {
  Code = 'code',
  Id = 'id',
  Name = 'name'
}

export type CatProjectManagementFormUpdateInput = {
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  projects?: InputMaybe<ProjectUpdateManyWithoutManagementFormNestedInput>;
};

export type CatProjectManagementFormUpdateOneWithoutProjectsNestedInput = {
  connect?: InputMaybe<CatProjectManagementFormWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatProjectManagementFormCreateOrConnectWithoutProjectsInput>;
  create?: InputMaybe<CatProjectManagementFormCreateWithoutProjectsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatProjectManagementFormUpdateWithoutProjectsInput>;
  upsert?: InputMaybe<CatProjectManagementFormUpsertWithoutProjectsInput>;
};

export type CatProjectManagementFormUpdateWithoutProjectsInput = {
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CatProjectManagementFormUpsertWithoutProjectsInput = {
  create: CatProjectManagementFormCreateWithoutProjectsInput;
  update: CatProjectManagementFormUpdateWithoutProjectsInput;
};

export type CatProjectManagementFormWhereInput = {
  AND?: InputMaybe<Array<CatProjectManagementFormWhereInput>>;
  NOT?: InputMaybe<Array<CatProjectManagementFormWhereInput>>;
  OR?: InputMaybe<Array<CatProjectManagementFormWhereInput>>;
  code?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  projects?: InputMaybe<ProjectListRelationFilter>;
};

export type CatProjectManagementFormWhereUniqueInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
};

export type CatProjectStatus = {
  __typename?: 'CatProjectStatus';
  _count: CatProjectStatusCount;
  code?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  name?: Maybe<Scalars['String']['output']>;
  projects?: Maybe<Array<Project>>;
};

export type CatProjectStatusCount = {
  __typename?: 'CatProjectStatusCount';
  projects: Scalars['Int']['output'];
};

export type CatProjectStatusCreateNestedOneWithoutProjectsInput = {
  connect?: InputMaybe<CatProjectStatusWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatProjectStatusCreateOrConnectWithoutProjectsInput>;
  create?: InputMaybe<CatProjectStatusCreateWithoutProjectsInput>;
};

export type CatProjectStatusCreateOrConnectWithoutProjectsInput = {
  create: CatProjectStatusCreateWithoutProjectsInput;
  where: CatProjectStatusWhereUniqueInput;
};

export type CatProjectStatusCreateWithoutProjectsInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type CatProjectStatusOrderByWithRelationInput = {
  code?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrderInput>;
  projects?: InputMaybe<ProjectOrderByRelationAggregateInput>;
};

export type CatProjectStatusUpdateOneWithoutProjectsNestedInput = {
  connect?: InputMaybe<CatProjectStatusWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CatProjectStatusCreateOrConnectWithoutProjectsInput>;
  create?: InputMaybe<CatProjectStatusCreateWithoutProjectsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<CatProjectStatusUpdateWithoutProjectsInput>;
  upsert?: InputMaybe<CatProjectStatusUpsertWithoutProjectsInput>;
};

export type CatProjectStatusUpdateWithoutProjectsInput = {
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CatProjectStatusUpsertWithoutProjectsInput = {
  create: CatProjectStatusCreateWithoutProjectsInput;
  update: CatProjectStatusUpdateWithoutProjectsInput;
};

export type CatProjectStatusWhereInput = {
  AND?: InputMaybe<Array<CatProjectStatusWhereInput>>;
  NOT?: InputMaybe<Array<CatProjectStatusWhereInput>>;
  OR?: InputMaybe<Array<CatProjectStatusWhereInput>>;
  code?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  projects?: InputMaybe<ProjectListRelationFilter>;
};

export type CatProjectStatusWhereUniqueInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
};

export type CustomBidNotificationResultWhereInput = {
  AND?: InputMaybe<Array<CustomBidNotificationResultWhereInput>>;
  NOT?: InputMaybe<Array<CustomBidNotificationResultWhereInput>>;
  OR?: InputMaybe<Array<CustomBidNotificationResultWhereInput>>;
  bidLotResults?: InputMaybe<BidLotResultListRelationFilter>;
  bidNotification?: InputMaybe<BidNotificationWhereInput>;
  bidNotificationCode?: InputMaybe<StringNullableFilter>;
  bidNotificationContractors?: InputMaybe<BidNotificationContractorListRelationFilter>;
  bidNotificationId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  decisionAgency?: InputMaybe<StringNullableFilter>;
  decisionDate?: InputMaybe<DateTimeNullableFilter>;
  decisionFileId?: InputMaybe<StringNullableFilter>;
  decisionFileName?: InputMaybe<StringNullableFilter>;
  decisionNo?: InputMaybe<StringNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isLatest?: InputMaybe<BoolFilter>;
  isOpenPreNotificationResult?: InputMaybe<BoolFilter>;
  publishedAt?: InputMaybe<DateTimeNullableFilter>;
  statusCode?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  version?: InputMaybe<StringNullableFilter>;
};

export type DateTimeNullableFilter = {
  equals?: InputMaybe<Scalars['DateTime']['input']>;
  gt?: InputMaybe<Scalars['DateTime']['input']>;
  gte?: InputMaybe<Scalars['DateTime']['input']>;
  in?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  lt?: InputMaybe<Scalars['DateTime']['input']>;
  lte?: InputMaybe<Scalars['DateTime']['input']>;
  not?: InputMaybe<NestedDateTimeNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['DateTime']['input']>>;
};

export type DecimalNullableFilter = {
  equals?: InputMaybe<Scalars['Decimal']['input']>;
  gt?: InputMaybe<Scalars['Decimal']['input']>;
  gte?: InputMaybe<Scalars['Decimal']['input']>;
  in?: InputMaybe<Array<Scalars['Decimal']['input']>>;
  lt?: InputMaybe<Scalars['Decimal']['input']>;
  lte?: InputMaybe<Scalars['Decimal']['input']>;
  not?: InputMaybe<NestedDecimalNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['Decimal']['input']>>;
};

export type DocumentTemplate = {
  __typename?: 'DocumentTemplate';
  bidField?: Maybe<CatBidField>;
  bidFieldCode?: Maybe<Scalars['String']['output']>;
  bidFieldId?: Maybe<Scalars['String']['output']>;
  bidFileCode?: Maybe<Scalars['String']['output']>;
  bidForm?: Maybe<CatBidForm>;
  bidFormCode?: Maybe<Scalars['String']['output']>;
  bidFormId?: Maybe<Scalars['String']['output']>;
  bidMode?: Maybe<CatBidMode>;
  bidModeCode?: Maybe<Scalars['String']['output']>;
  bidModeId?: Maybe<Scalars['String']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  contractType?: Maybe<CatContractType>;
  contractTypeCode?: Maybe<Scalars['String']['output']>;
  contractTypeId?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  extendContent?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  isMedical?: Maybe<Scalars['Boolean']['output']>;
  isMultiLot?: Maybe<Scalars['Boolean']['output']>;
  isVenture?: Maybe<Scalars['String']['output']>;
  isWebform?: Maybe<Scalars['Int']['output']>;
  language?: Maybe<Scalars['String']['output']>;
  level?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  orderIndex?: Maybe<Scalars['Int']['output']>;
  parentCode?: Maybe<Scalars['String']['output']>;
  processApply?: Maybe<CatProcessApply>;
  processApplyCode?: Maybe<Scalars['String']['output']>;
  processApplyId?: Maybe<Scalars['String']['output']>;
  templateName?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  updatedBy?: Maybe<Scalars['String']['output']>;
};

export type DocumentTemplateCreateManyBidFieldInput = {
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidFileCode?: InputMaybe<Scalars['String']['input']>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidFormId?: InputMaybe<Scalars['String']['input']>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidModeId?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  contractTypeId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  extendContent?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isMedical?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiLot?: InputMaybe<Scalars['Boolean']['input']>;
  isVenture?: InputMaybe<Scalars['String']['input']>;
  isWebform?: InputMaybe<Scalars['Int']['input']>;
  language?: InputMaybe<Scalars['String']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  orderIndex?: InputMaybe<Scalars['Int']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  processApplyId?: InputMaybe<Scalars['String']['input']>;
  templateName?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type DocumentTemplateCreateManyBidFieldInputEnvelope = {
  data: Array<DocumentTemplateCreateManyBidFieldInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type DocumentTemplateCreateManyBidFormInput = {
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidFieldId?: InputMaybe<Scalars['String']['input']>;
  bidFileCode?: InputMaybe<Scalars['String']['input']>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidModeId?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  contractTypeId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  extendContent?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isMedical?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiLot?: InputMaybe<Scalars['Boolean']['input']>;
  isVenture?: InputMaybe<Scalars['String']['input']>;
  isWebform?: InputMaybe<Scalars['Int']['input']>;
  language?: InputMaybe<Scalars['String']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  orderIndex?: InputMaybe<Scalars['Int']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  processApplyId?: InputMaybe<Scalars['String']['input']>;
  templateName?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type DocumentTemplateCreateManyBidFormInputEnvelope = {
  data: Array<DocumentTemplateCreateManyBidFormInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type DocumentTemplateCreateManyBidModeInput = {
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidFieldId?: InputMaybe<Scalars['String']['input']>;
  bidFileCode?: InputMaybe<Scalars['String']['input']>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidFormId?: InputMaybe<Scalars['String']['input']>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  contractTypeId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  extendContent?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isMedical?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiLot?: InputMaybe<Scalars['Boolean']['input']>;
  isVenture?: InputMaybe<Scalars['String']['input']>;
  isWebform?: InputMaybe<Scalars['Int']['input']>;
  language?: InputMaybe<Scalars['String']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  orderIndex?: InputMaybe<Scalars['Int']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  processApplyId?: InputMaybe<Scalars['String']['input']>;
  templateName?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type DocumentTemplateCreateManyBidModeInputEnvelope = {
  data: Array<DocumentTemplateCreateManyBidModeInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type DocumentTemplateCreateManyContractTypeInput = {
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidFieldId?: InputMaybe<Scalars['String']['input']>;
  bidFileCode?: InputMaybe<Scalars['String']['input']>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidFormId?: InputMaybe<Scalars['String']['input']>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidModeId?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  extendContent?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isMedical?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiLot?: InputMaybe<Scalars['Boolean']['input']>;
  isVenture?: InputMaybe<Scalars['String']['input']>;
  isWebform?: InputMaybe<Scalars['Int']['input']>;
  language?: InputMaybe<Scalars['String']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  orderIndex?: InputMaybe<Scalars['Int']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  processApplyId?: InputMaybe<Scalars['String']['input']>;
  templateName?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type DocumentTemplateCreateManyContractTypeInputEnvelope = {
  data: Array<DocumentTemplateCreateManyContractTypeInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type DocumentTemplateCreateManyProcessApplyInput = {
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidFieldId?: InputMaybe<Scalars['String']['input']>;
  bidFileCode?: InputMaybe<Scalars['String']['input']>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidFormId?: InputMaybe<Scalars['String']['input']>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  bidModeId?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  contractTypeId?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  extendContent?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isMedical?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiLot?: InputMaybe<Scalars['Boolean']['input']>;
  isVenture?: InputMaybe<Scalars['String']['input']>;
  isWebform?: InputMaybe<Scalars['Int']['input']>;
  language?: InputMaybe<Scalars['String']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  orderIndex?: InputMaybe<Scalars['Int']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  templateName?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type DocumentTemplateCreateManyProcessApplyInputEnvelope = {
  data: Array<DocumentTemplateCreateManyProcessApplyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type DocumentTemplateCreateNestedManyWithoutBidFieldInput = {
  connect?: InputMaybe<Array<DocumentTemplateWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<DocumentTemplateCreateOrConnectWithoutBidFieldInput>>;
  create?: InputMaybe<Array<DocumentTemplateCreateWithoutBidFieldInput>>;
  createMany?: InputMaybe<DocumentTemplateCreateManyBidFieldInputEnvelope>;
};

export type DocumentTemplateCreateNestedManyWithoutBidFormInput = {
  connect?: InputMaybe<Array<DocumentTemplateWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<DocumentTemplateCreateOrConnectWithoutBidFormInput>>;
  create?: InputMaybe<Array<DocumentTemplateCreateWithoutBidFormInput>>;
  createMany?: InputMaybe<DocumentTemplateCreateManyBidFormInputEnvelope>;
};

export type DocumentTemplateCreateNestedManyWithoutBidModeInput = {
  connect?: InputMaybe<Array<DocumentTemplateWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<DocumentTemplateCreateOrConnectWithoutBidModeInput>>;
  create?: InputMaybe<Array<DocumentTemplateCreateWithoutBidModeInput>>;
  createMany?: InputMaybe<DocumentTemplateCreateManyBidModeInputEnvelope>;
};

export type DocumentTemplateCreateNestedManyWithoutContractTypeInput = {
  connect?: InputMaybe<Array<DocumentTemplateWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<DocumentTemplateCreateOrConnectWithoutContractTypeInput>>;
  create?: InputMaybe<Array<DocumentTemplateCreateWithoutContractTypeInput>>;
  createMany?: InputMaybe<DocumentTemplateCreateManyContractTypeInputEnvelope>;
};

export type DocumentTemplateCreateNestedManyWithoutProcessApplyInput = {
  connect?: InputMaybe<Array<DocumentTemplateWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<DocumentTemplateCreateOrConnectWithoutProcessApplyInput>>;
  create?: InputMaybe<Array<DocumentTemplateCreateWithoutProcessApplyInput>>;
  createMany?: InputMaybe<DocumentTemplateCreateManyProcessApplyInputEnvelope>;
};

export type DocumentTemplateCreateOrConnectWithoutBidFieldInput = {
  create: DocumentTemplateCreateWithoutBidFieldInput;
  where: DocumentTemplateWhereUniqueInput;
};

export type DocumentTemplateCreateOrConnectWithoutBidFormInput = {
  create: DocumentTemplateCreateWithoutBidFormInput;
  where: DocumentTemplateWhereUniqueInput;
};

export type DocumentTemplateCreateOrConnectWithoutBidModeInput = {
  create: DocumentTemplateCreateWithoutBidModeInput;
  where: DocumentTemplateWhereUniqueInput;
};

export type DocumentTemplateCreateOrConnectWithoutContractTypeInput = {
  create: DocumentTemplateCreateWithoutContractTypeInput;
  where: DocumentTemplateWhereUniqueInput;
};

export type DocumentTemplateCreateOrConnectWithoutProcessApplyInput = {
  create: DocumentTemplateCreateWithoutProcessApplyInput;
  where: DocumentTemplateWhereUniqueInput;
};

export type DocumentTemplateCreateWithoutBidFieldInput = {
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidFileCode?: InputMaybe<Scalars['String']['input']>;
  bidForm?: InputMaybe<CatBidFormCreateNestedOneWithoutDocumentTemplatesInput>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidMode?: InputMaybe<CatBidModeCreateNestedOneWithoutDocumentTemplatesInput>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractType?: InputMaybe<CatContractTypeCreateNestedOneWithoutDocumentTemplateInput>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  extendContent?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isMedical?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiLot?: InputMaybe<Scalars['Boolean']['input']>;
  isVenture?: InputMaybe<Scalars['String']['input']>;
  isWebform?: InputMaybe<Scalars['Int']['input']>;
  language?: InputMaybe<Scalars['String']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  orderIndex?: InputMaybe<Scalars['Int']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutDocumentTemplatesInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  templateName?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type DocumentTemplateCreateWithoutBidFormInput = {
  bidField?: InputMaybe<CatBidFieldCreateNestedOneWithoutDocumentTemplatesInput>;
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidFileCode?: InputMaybe<Scalars['String']['input']>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidMode?: InputMaybe<CatBidModeCreateNestedOneWithoutDocumentTemplatesInput>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractType?: InputMaybe<CatContractTypeCreateNestedOneWithoutDocumentTemplateInput>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  extendContent?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isMedical?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiLot?: InputMaybe<Scalars['Boolean']['input']>;
  isVenture?: InputMaybe<Scalars['String']['input']>;
  isWebform?: InputMaybe<Scalars['Int']['input']>;
  language?: InputMaybe<Scalars['String']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  orderIndex?: InputMaybe<Scalars['Int']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutDocumentTemplatesInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  templateName?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type DocumentTemplateCreateWithoutBidModeInput = {
  bidField?: InputMaybe<CatBidFieldCreateNestedOneWithoutDocumentTemplatesInput>;
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidFileCode?: InputMaybe<Scalars['String']['input']>;
  bidForm?: InputMaybe<CatBidFormCreateNestedOneWithoutDocumentTemplatesInput>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractType?: InputMaybe<CatContractTypeCreateNestedOneWithoutDocumentTemplateInput>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  extendContent?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isMedical?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiLot?: InputMaybe<Scalars['Boolean']['input']>;
  isVenture?: InputMaybe<Scalars['String']['input']>;
  isWebform?: InputMaybe<Scalars['Int']['input']>;
  language?: InputMaybe<Scalars['String']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  orderIndex?: InputMaybe<Scalars['Int']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutDocumentTemplatesInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  templateName?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type DocumentTemplateCreateWithoutContractTypeInput = {
  bidField?: InputMaybe<CatBidFieldCreateNestedOneWithoutDocumentTemplatesInput>;
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidFileCode?: InputMaybe<Scalars['String']['input']>;
  bidForm?: InputMaybe<CatBidFormCreateNestedOneWithoutDocumentTemplatesInput>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidMode?: InputMaybe<CatBidModeCreateNestedOneWithoutDocumentTemplatesInput>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  extendContent?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isMedical?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiLot?: InputMaybe<Scalars['Boolean']['input']>;
  isVenture?: InputMaybe<Scalars['String']['input']>;
  isWebform?: InputMaybe<Scalars['Int']['input']>;
  language?: InputMaybe<Scalars['String']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  orderIndex?: InputMaybe<Scalars['Int']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  processApply?: InputMaybe<CatProcessApplyCreateNestedOneWithoutDocumentTemplatesInput>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  templateName?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type DocumentTemplateCreateWithoutProcessApplyInput = {
  bidField?: InputMaybe<CatBidFieldCreateNestedOneWithoutDocumentTemplatesInput>;
  bidFieldCode?: InputMaybe<Scalars['String']['input']>;
  bidFileCode?: InputMaybe<Scalars['String']['input']>;
  bidForm?: InputMaybe<CatBidFormCreateNestedOneWithoutDocumentTemplatesInput>;
  bidFormCode?: InputMaybe<Scalars['String']['input']>;
  bidMode?: InputMaybe<CatBidModeCreateNestedOneWithoutDocumentTemplatesInput>;
  bidModeCode?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  contractType?: InputMaybe<CatContractTypeCreateNestedOneWithoutDocumentTemplateInput>;
  contractTypeCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  extendContent?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isMedical?: InputMaybe<Scalars['Boolean']['input']>;
  isMultiLot?: InputMaybe<Scalars['Boolean']['input']>;
  isVenture?: InputMaybe<Scalars['String']['input']>;
  isWebform?: InputMaybe<Scalars['Int']['input']>;
  language?: InputMaybe<Scalars['String']['input']>;
  level?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  orderIndex?: InputMaybe<Scalars['Int']['input']>;
  parentCode?: InputMaybe<Scalars['String']['input']>;
  processApplyCode?: InputMaybe<Scalars['String']['input']>;
  templateName?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
};

export type DocumentTemplateListRelationFilter = {
  every?: InputMaybe<DocumentTemplateWhereInput>;
  none?: InputMaybe<DocumentTemplateWhereInput>;
  some?: InputMaybe<DocumentTemplateWhereInput>;
};

export type DocumentTemplateOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type DocumentTemplateScalarWhereInput = {
  AND?: InputMaybe<Array<DocumentTemplateScalarWhereInput>>;
  NOT?: InputMaybe<Array<DocumentTemplateScalarWhereInput>>;
  OR?: InputMaybe<Array<DocumentTemplateScalarWhereInput>>;
  bidFieldCode?: InputMaybe<StringNullableFilter>;
  bidFieldId?: InputMaybe<StringNullableFilter>;
  bidFileCode?: InputMaybe<StringNullableFilter>;
  bidFormCode?: InputMaybe<StringNullableFilter>;
  bidFormId?: InputMaybe<StringNullableFilter>;
  bidModeCode?: InputMaybe<StringNullableFilter>;
  bidModeId?: InputMaybe<StringNullableFilter>;
  code?: InputMaybe<StringNullableFilter>;
  contractTypeCode?: InputMaybe<StringNullableFilter>;
  contractTypeId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  extendContent?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isMedical?: InputMaybe<BoolNullableFilter>;
  isMultiLot?: InputMaybe<BoolNullableFilter>;
  isVenture?: InputMaybe<StringNullableFilter>;
  isWebform?: InputMaybe<IntNullableFilter>;
  language?: InputMaybe<StringNullableFilter>;
  level?: InputMaybe<IntNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  orderIndex?: InputMaybe<IntNullableFilter>;
  parentCode?: InputMaybe<StringNullableFilter>;
  processApplyCode?: InputMaybe<StringNullableFilter>;
  processApplyId?: InputMaybe<StringNullableFilter>;
  templateName?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type DocumentTemplateUpdateManyMutationInput = {
  bidFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidFileCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidModeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  extendContent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isMedical?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isMultiLot?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isVenture?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isWebform?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  language?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  level?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderIndex?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  parentCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  templateName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type DocumentTemplateUpdateManyWithWhereWithoutBidFieldInput = {
  data: DocumentTemplateUpdateManyMutationInput;
  where: DocumentTemplateScalarWhereInput;
};

export type DocumentTemplateUpdateManyWithWhereWithoutBidFormInput = {
  data: DocumentTemplateUpdateManyMutationInput;
  where: DocumentTemplateScalarWhereInput;
};

export type DocumentTemplateUpdateManyWithWhereWithoutBidModeInput = {
  data: DocumentTemplateUpdateManyMutationInput;
  where: DocumentTemplateScalarWhereInput;
};

export type DocumentTemplateUpdateManyWithWhereWithoutContractTypeInput = {
  data: DocumentTemplateUpdateManyMutationInput;
  where: DocumentTemplateScalarWhereInput;
};

export type DocumentTemplateUpdateManyWithWhereWithoutProcessApplyInput = {
  data: DocumentTemplateUpdateManyMutationInput;
  where: DocumentTemplateScalarWhereInput;
};

export type DocumentTemplateUpdateManyWithoutBidFieldNestedInput = {
  connect?: InputMaybe<Array<DocumentTemplateWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<DocumentTemplateCreateOrConnectWithoutBidFieldInput>>;
  create?: InputMaybe<Array<DocumentTemplateCreateWithoutBidFieldInput>>;
  createMany?: InputMaybe<DocumentTemplateCreateManyBidFieldInputEnvelope>;
  delete?: InputMaybe<Array<DocumentTemplateWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<DocumentTemplateScalarWhereInput>>;
  disconnect?: InputMaybe<Array<DocumentTemplateWhereUniqueInput>>;
  set?: InputMaybe<Array<DocumentTemplateWhereUniqueInput>>;
  update?: InputMaybe<Array<DocumentTemplateUpdateWithWhereUniqueWithoutBidFieldInput>>;
  updateMany?: InputMaybe<Array<DocumentTemplateUpdateManyWithWhereWithoutBidFieldInput>>;
  upsert?: InputMaybe<Array<DocumentTemplateUpsertWithWhereUniqueWithoutBidFieldInput>>;
};

export type DocumentTemplateUpdateManyWithoutBidFormNestedInput = {
  connect?: InputMaybe<Array<DocumentTemplateWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<DocumentTemplateCreateOrConnectWithoutBidFormInput>>;
  create?: InputMaybe<Array<DocumentTemplateCreateWithoutBidFormInput>>;
  createMany?: InputMaybe<DocumentTemplateCreateManyBidFormInputEnvelope>;
  delete?: InputMaybe<Array<DocumentTemplateWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<DocumentTemplateScalarWhereInput>>;
  disconnect?: InputMaybe<Array<DocumentTemplateWhereUniqueInput>>;
  set?: InputMaybe<Array<DocumentTemplateWhereUniqueInput>>;
  update?: InputMaybe<Array<DocumentTemplateUpdateWithWhereUniqueWithoutBidFormInput>>;
  updateMany?: InputMaybe<Array<DocumentTemplateUpdateManyWithWhereWithoutBidFormInput>>;
  upsert?: InputMaybe<Array<DocumentTemplateUpsertWithWhereUniqueWithoutBidFormInput>>;
};

export type DocumentTemplateUpdateManyWithoutBidModeNestedInput = {
  connect?: InputMaybe<Array<DocumentTemplateWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<DocumentTemplateCreateOrConnectWithoutBidModeInput>>;
  create?: InputMaybe<Array<DocumentTemplateCreateWithoutBidModeInput>>;
  createMany?: InputMaybe<DocumentTemplateCreateManyBidModeInputEnvelope>;
  delete?: InputMaybe<Array<DocumentTemplateWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<DocumentTemplateScalarWhereInput>>;
  disconnect?: InputMaybe<Array<DocumentTemplateWhereUniqueInput>>;
  set?: InputMaybe<Array<DocumentTemplateWhereUniqueInput>>;
  update?: InputMaybe<Array<DocumentTemplateUpdateWithWhereUniqueWithoutBidModeInput>>;
  updateMany?: InputMaybe<Array<DocumentTemplateUpdateManyWithWhereWithoutBidModeInput>>;
  upsert?: InputMaybe<Array<DocumentTemplateUpsertWithWhereUniqueWithoutBidModeInput>>;
};

export type DocumentTemplateUpdateManyWithoutContractTypeNestedInput = {
  connect?: InputMaybe<Array<DocumentTemplateWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<DocumentTemplateCreateOrConnectWithoutContractTypeInput>>;
  create?: InputMaybe<Array<DocumentTemplateCreateWithoutContractTypeInput>>;
  createMany?: InputMaybe<DocumentTemplateCreateManyContractTypeInputEnvelope>;
  delete?: InputMaybe<Array<DocumentTemplateWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<DocumentTemplateScalarWhereInput>>;
  disconnect?: InputMaybe<Array<DocumentTemplateWhereUniqueInput>>;
  set?: InputMaybe<Array<DocumentTemplateWhereUniqueInput>>;
  update?: InputMaybe<Array<DocumentTemplateUpdateWithWhereUniqueWithoutContractTypeInput>>;
  updateMany?: InputMaybe<Array<DocumentTemplateUpdateManyWithWhereWithoutContractTypeInput>>;
  upsert?: InputMaybe<Array<DocumentTemplateUpsertWithWhereUniqueWithoutContractTypeInput>>;
};

export type DocumentTemplateUpdateManyWithoutProcessApplyNestedInput = {
  connect?: InputMaybe<Array<DocumentTemplateWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<DocumentTemplateCreateOrConnectWithoutProcessApplyInput>>;
  create?: InputMaybe<Array<DocumentTemplateCreateWithoutProcessApplyInput>>;
  createMany?: InputMaybe<DocumentTemplateCreateManyProcessApplyInputEnvelope>;
  delete?: InputMaybe<Array<DocumentTemplateWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<DocumentTemplateScalarWhereInput>>;
  disconnect?: InputMaybe<Array<DocumentTemplateWhereUniqueInput>>;
  set?: InputMaybe<Array<DocumentTemplateWhereUniqueInput>>;
  update?: InputMaybe<Array<DocumentTemplateUpdateWithWhereUniqueWithoutProcessApplyInput>>;
  updateMany?: InputMaybe<Array<DocumentTemplateUpdateManyWithWhereWithoutProcessApplyInput>>;
  upsert?: InputMaybe<Array<DocumentTemplateUpsertWithWhereUniqueWithoutProcessApplyInput>>;
};

export type DocumentTemplateUpdateWithWhereUniqueWithoutBidFieldInput = {
  data: DocumentTemplateUpdateWithoutBidFieldInput;
  where: DocumentTemplateWhereUniqueInput;
};

export type DocumentTemplateUpdateWithWhereUniqueWithoutBidFormInput = {
  data: DocumentTemplateUpdateWithoutBidFormInput;
  where: DocumentTemplateWhereUniqueInput;
};

export type DocumentTemplateUpdateWithWhereUniqueWithoutBidModeInput = {
  data: DocumentTemplateUpdateWithoutBidModeInput;
  where: DocumentTemplateWhereUniqueInput;
};

export type DocumentTemplateUpdateWithWhereUniqueWithoutContractTypeInput = {
  data: DocumentTemplateUpdateWithoutContractTypeInput;
  where: DocumentTemplateWhereUniqueInput;
};

export type DocumentTemplateUpdateWithWhereUniqueWithoutProcessApplyInput = {
  data: DocumentTemplateUpdateWithoutProcessApplyInput;
  where: DocumentTemplateWhereUniqueInput;
};

export type DocumentTemplateUpdateWithoutBidFieldInput = {
  bidFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidFileCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidForm?: InputMaybe<CatBidFormUpdateOneWithoutDocumentTemplatesNestedInput>;
  bidFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidMode?: InputMaybe<CatBidModeUpdateOneWithoutDocumentTemplatesNestedInput>;
  bidModeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractType?: InputMaybe<CatContractTypeUpdateOneWithoutDocumentTemplateNestedInput>;
  contractTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  extendContent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isMedical?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isMultiLot?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isVenture?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isWebform?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  language?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  level?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderIndex?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  parentCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutDocumentTemplatesNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  templateName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type DocumentTemplateUpdateWithoutBidFormInput = {
  bidField?: InputMaybe<CatBidFieldUpdateOneWithoutDocumentTemplatesNestedInput>;
  bidFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidFileCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidMode?: InputMaybe<CatBidModeUpdateOneWithoutDocumentTemplatesNestedInput>;
  bidModeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractType?: InputMaybe<CatContractTypeUpdateOneWithoutDocumentTemplateNestedInput>;
  contractTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  extendContent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isMedical?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isMultiLot?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isVenture?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isWebform?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  language?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  level?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderIndex?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  parentCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutDocumentTemplatesNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  templateName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type DocumentTemplateUpdateWithoutBidModeInput = {
  bidField?: InputMaybe<CatBidFieldUpdateOneWithoutDocumentTemplatesNestedInput>;
  bidFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidFileCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidForm?: InputMaybe<CatBidFormUpdateOneWithoutDocumentTemplatesNestedInput>;
  bidFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidModeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractType?: InputMaybe<CatContractTypeUpdateOneWithoutDocumentTemplateNestedInput>;
  contractTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  extendContent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isMedical?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isMultiLot?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isVenture?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isWebform?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  language?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  level?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderIndex?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  parentCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutDocumentTemplatesNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  templateName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type DocumentTemplateUpdateWithoutContractTypeInput = {
  bidField?: InputMaybe<CatBidFieldUpdateOneWithoutDocumentTemplatesNestedInput>;
  bidFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidFileCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidForm?: InputMaybe<CatBidFormUpdateOneWithoutDocumentTemplatesNestedInput>;
  bidFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidMode?: InputMaybe<CatBidModeUpdateOneWithoutDocumentTemplatesNestedInput>;
  bidModeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  extendContent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isMedical?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isMultiLot?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isVenture?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isWebform?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  language?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  level?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderIndex?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  parentCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApply?: InputMaybe<CatProcessApplyUpdateOneWithoutDocumentTemplatesNestedInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  templateName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type DocumentTemplateUpdateWithoutProcessApplyInput = {
  bidField?: InputMaybe<CatBidFieldUpdateOneWithoutDocumentTemplatesNestedInput>;
  bidFieldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidFileCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidForm?: InputMaybe<CatBidFormUpdateOneWithoutDocumentTemplatesNestedInput>;
  bidFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bidMode?: InputMaybe<CatBidModeUpdateOneWithoutDocumentTemplatesNestedInput>;
  bidModeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contractType?: InputMaybe<CatContractTypeUpdateOneWithoutDocumentTemplateNestedInput>;
  contractTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  extendContent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isMedical?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isMultiLot?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isVenture?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isWebform?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  language?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  level?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderIndex?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  parentCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processApplyCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  templateName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type DocumentTemplateUpsertWithWhereUniqueWithoutBidFieldInput = {
  create: DocumentTemplateCreateWithoutBidFieldInput;
  update: DocumentTemplateUpdateWithoutBidFieldInput;
  where: DocumentTemplateWhereUniqueInput;
};

export type DocumentTemplateUpsertWithWhereUniqueWithoutBidFormInput = {
  create: DocumentTemplateCreateWithoutBidFormInput;
  update: DocumentTemplateUpdateWithoutBidFormInput;
  where: DocumentTemplateWhereUniqueInput;
};

export type DocumentTemplateUpsertWithWhereUniqueWithoutBidModeInput = {
  create: DocumentTemplateCreateWithoutBidModeInput;
  update: DocumentTemplateUpdateWithoutBidModeInput;
  where: DocumentTemplateWhereUniqueInput;
};

export type DocumentTemplateUpsertWithWhereUniqueWithoutContractTypeInput = {
  create: DocumentTemplateCreateWithoutContractTypeInput;
  update: DocumentTemplateUpdateWithoutContractTypeInput;
  where: DocumentTemplateWhereUniqueInput;
};

export type DocumentTemplateUpsertWithWhereUniqueWithoutProcessApplyInput = {
  create: DocumentTemplateCreateWithoutProcessApplyInput;
  update: DocumentTemplateUpdateWithoutProcessApplyInput;
  where: DocumentTemplateWhereUniqueInput;
};

export type DocumentTemplateWhereInput = {
  AND?: InputMaybe<Array<DocumentTemplateWhereInput>>;
  NOT?: InputMaybe<Array<DocumentTemplateWhereInput>>;
  OR?: InputMaybe<Array<DocumentTemplateWhereInput>>;
  bidField?: InputMaybe<CatBidFieldWhereInput>;
  bidFieldCode?: InputMaybe<StringNullableFilter>;
  bidFieldId?: InputMaybe<StringNullableFilter>;
  bidFileCode?: InputMaybe<StringNullableFilter>;
  bidForm?: InputMaybe<CatBidFormWhereInput>;
  bidFormCode?: InputMaybe<StringNullableFilter>;
  bidFormId?: InputMaybe<StringNullableFilter>;
  bidMode?: InputMaybe<CatBidModeWhereInput>;
  bidModeCode?: InputMaybe<StringNullableFilter>;
  bidModeId?: InputMaybe<StringNullableFilter>;
  code?: InputMaybe<StringNullableFilter>;
  contractType?: InputMaybe<CatContractTypeWhereInput>;
  contractTypeCode?: InputMaybe<StringNullableFilter>;
  contractTypeId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  extendContent?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isMedical?: InputMaybe<BoolNullableFilter>;
  isMultiLot?: InputMaybe<BoolNullableFilter>;
  isVenture?: InputMaybe<StringNullableFilter>;
  isWebform?: InputMaybe<IntNullableFilter>;
  language?: InputMaybe<StringNullableFilter>;
  level?: InputMaybe<IntNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  orderIndex?: InputMaybe<IntNullableFilter>;
  parentCode?: InputMaybe<StringNullableFilter>;
  processApply?: InputMaybe<CatProcessApplyWhereInput>;
  processApplyCode?: InputMaybe<StringNullableFilter>;
  processApplyId?: InputMaybe<StringNullableFilter>;
  templateName?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type DocumentTemplateWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']['input']>;
};

export type IntFieldUpdateOperationsInput = {
  decrement?: InputMaybe<Scalars['Int']['input']>;
  divide?: InputMaybe<Scalars['Int']['input']>;
  increment?: InputMaybe<Scalars['Int']['input']>;
  multiply?: InputMaybe<Scalars['Int']['input']>;
  set?: InputMaybe<Scalars['Int']['input']>;
};

export type IntFilter = {
  equals?: InputMaybe<Scalars['Int']['input']>;
  gt?: InputMaybe<Scalars['Int']['input']>;
  gte?: InputMaybe<Scalars['Int']['input']>;
  in?: InputMaybe<Array<Scalars['Int']['input']>>;
  lt?: InputMaybe<Scalars['Int']['input']>;
  lte?: InputMaybe<Scalars['Int']['input']>;
  not?: InputMaybe<NestedIntFilter>;
  notIn?: InputMaybe<Array<Scalars['Int']['input']>>;
};

export type IntNullableFilter = {
  equals?: InputMaybe<Scalars['Int']['input']>;
  gt?: InputMaybe<Scalars['Int']['input']>;
  gte?: InputMaybe<Scalars['Int']['input']>;
  in?: InputMaybe<Array<Scalars['Int']['input']>>;
  lt?: InputMaybe<Scalars['Int']['input']>;
  lte?: InputMaybe<Scalars['Int']['input']>;
  not?: InputMaybe<NestedIntNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['Int']['input']>>;
};

export type InviteBidderBidPackageWhereInput = {
  competeContractor?: InputMaybe<StringFilter>;
  contractorCode?: InputMaybe<StringFilter>;
  didCancel?: InputMaybe<BoolFilter>;
  didLose?: InputMaybe<BoolFilter>;
  didNoResult?: InputMaybe<BoolFilter>;
  didWin?: InputMaybe<BoolFilter>;
  procuringEntityCode?: InputMaybe<StringFilter>;
};

export type JsonNullableFilter = {
  array_contains?: InputMaybe<Scalars['JSON']['input']>;
  array_ends_with?: InputMaybe<Scalars['JSON']['input']>;
  array_starts_with?: InputMaybe<Scalars['JSON']['input']>;
  equals?: InputMaybe<Scalars['JSON']['input']>;
  gt?: InputMaybe<Scalars['JSON']['input']>;
  gte?: InputMaybe<Scalars['JSON']['input']>;
  lt?: InputMaybe<Scalars['JSON']['input']>;
  lte?: InputMaybe<Scalars['JSON']['input']>;
  not?: InputMaybe<Scalars['JSON']['input']>;
  path?: InputMaybe<Array<Scalars['String']['input']>>;
  string_contains?: InputMaybe<Scalars['String']['input']>;
  string_ends_with?: InputMaybe<Scalars['String']['input']>;
  string_starts_with?: InputMaybe<Scalars['String']['input']>;
};

export type LoginInput = {
  email?: InputMaybe<Scalars['String']['input']>;
  password: Scalars['String']['input'];
};

export type Mutation = {
  __typename?: 'Mutation';
  deleteArea: Scalars['Int']['output'];
  deleteBidNotification: Scalars['Int']['output'];
  deleteBidNotificationContractor: Scalars['Int']['output'];
  deleteBidNotificationResult: Scalars['Int']['output'];
  deleteBidPackage: Scalars['Int']['output'];
  deleteBidPackageLot: Scalars['Int']['output'];
  deleteBidPetitionContractor: Scalars['Int']['output'];
  deleteBidSelectionPlan: Scalars['Int']['output'];
  deleteBusiness: Scalars['Int']['output'];
  deleteCatBidForm: Scalars['Int']['output'];
  deleteCatBidMode: Scalars['Int']['output'];
  deleteCatBidSelectionPlanType: Scalars['Int']['output'];
  deleteCatConstructionType: Scalars['Int']['output'];
  deleteCatContractStatus: Scalars['Int']['output'];
  deleteCatContractType: Scalars['Int']['output'];
  deleteCatContractorTypes: Scalars['Int']['output'];
  deleteCatInvestmentForm: Scalars['Int']['output'];
  deleteCatOrganizationSize: Scalars['Int']['output'];
  deleteCatProcessApply: Scalars['Int']['output'];
  deleteCatProjectApprovalStatus: Scalars['Int']['output'];
  deleteCatProjectGroup: Scalars['Int']['output'];
  deleteCatProjectManagementForm: Scalars['Int']['output'];
  deleteInvestor: Scalars['Int']['output'];
  deleteOrganization: Scalars['Int']['output'];
  deleteProject: Scalars['Int']['output'];
  login: Auth;
  loginAzure: User;
  loginPortalAdmin: User;
  loginTSM: User;
  refreshToken: Token;
  saveArea: CatArea;
  saveBidNotification: BidNotification;
  saveBidNotificationContractor: BidNotificationContractor;
  saveBidNotificationResult: BidNotificationResult;
  saveBidPackage: BidPackage;
  saveBidPackageLot: BidPackageLot;
  saveBidPetitionContractor: BidPetitionContractor;
  saveBidSelectionPlan: BidSelectionPlan;
  saveBusiness: Business;
  saveCatBidForm: CatBidForm;
  saveCatBidMode: CatBidMode;
  saveCatBidSelectionPlanStatus: CatBidSelectionPlanStatus;
  saveCatBidSelectionPlanType: CatBidSelectionPlanType;
  saveCatConstructionType: CatConstructionType;
  saveCatContractStatus: CatConstructionType;
  saveCatContractType: CatConstructionType;
  saveCatContractorType: CatContractorType;
  saveCatInvestmentForm: CatInvestmentForm;
  saveCatOrganizationSize: CatOrganizationSize;
  saveCatProcessApply: CatProcessApply;
  saveCatProjectApprovalStatus: CatProjectApprovalStatus;
  saveCatProjectGroup: CatProjectGroup;
  saveCatProjectManagementForm: CatProjectManagementForm;
  saveInvestor: CatBidField;
  saveOrganization: Organization;
  saveProject: Project;
  updateArea: CatArea;
  updateBidNotification: BidNotification;
  updateBidNotificationContractor: BidNotificationContractor;
  updateBidNotificationResult: BidNotificationResult;
  updateBidPackage: BidPackage;
  updateBidPackageLot: BidPackageLot;
  updateBidPetitionContractor: BidPetitionContractor;
  updateBidSelectionPlan: BidSelectionPlan;
  updateBusiness: Business;
  updateCatBidForm: CatBidForm;
  updateCatBidMode: CatBidMode;
  updateCatBidSelectionPlanStatus: CatBidSelectionPlanStatus;
  updateCatBidSelectionPlanType: CatBidSelectionPlanType;
  updateCatConstructionType: CatConstructionType;
  updateCatContractStatus: CatConstructionType;
  updateCatContractType: CatConstructionType;
  updateCatContractorType: CatContractorType;
  updateCatInvestmentForm: CatInvestmentForm;
  updateCatOrganizationSize: CatOrganizationSize;
  updateCatProcessApply: CatProcessApply;
  updateCatProjectApprovalStatus: CatProjectApprovalStatus;
  updateCatProjectGroup: CatProjectGroup;
  updateCatProjectManagementForm: CatProjectManagementForm;
  updateInvestor: CatBidField;
  updateOrganization: Organization;
  updateProject: Project;
};


export type MutationDeleteAreaArgs = {
  where: CatAreaWhereUniqueInput;
};


export type MutationDeleteBidNotificationArgs = {
  where: BidNotificationWhereUniqueInput;
};


export type MutationDeleteBidNotificationContractorArgs = {
  where: BidNotificationContractorWhereUniqueInput;
};


export type MutationDeleteBidNotificationResultArgs = {
  where: BidNotificationResultWhereUniqueInput;
};


export type MutationDeleteBidPackageArgs = {
  where: BidPackageWhereUniqueInput;
};


export type MutationDeleteBidPackageLotArgs = {
  where: BidPackageLotWhereUniqueInput;
};


export type MutationDeleteBidPetitionContractorArgs = {
  where: BidPetitionContractorWhereUniqueInput;
};


export type MutationDeleteBidSelectionPlanArgs = {
  where: BidSelectionPlanWhereUniqueInput;
};


export type MutationDeleteBusinessArgs = {
  where: BusinessWhereUniqueInput;
};


export type MutationDeleteCatBidFormArgs = {
  where: CatBidFormWhereUniqueInput;
};


export type MutationDeleteCatBidModeArgs = {
  where: CatBidModeWhereUniqueInput;
};


export type MutationDeleteCatBidSelectionPlanTypeArgs = {
  where: CatBidSelectionPlanTypeWhereUniqueInput;
};


export type MutationDeleteCatConstructionTypeArgs = {
  where: CatConstructionTypeWhereUniqueInput;
};


export type MutationDeleteCatContractStatusArgs = {
  where: CatContractStatusWhereUniqueInput;
};


export type MutationDeleteCatContractTypeArgs = {
  where: CatConstructionTypeWhereUniqueInput;
};


export type MutationDeleteCatContractorTypesArgs = {
  where: CatContractorTypeWhereUniqueInput;
};


export type MutationDeleteCatInvestmentFormArgs = {
  where: CatInvestmentFormWhereUniqueInput;
};


export type MutationDeleteCatOrganizationSizeArgs = {
  where: CatOrganizationSizeWhereUniqueInput;
};


export type MutationDeleteCatProcessApplyArgs = {
  where: CatProcessApplyWhereUniqueInput;
};


export type MutationDeleteCatProjectApprovalStatusArgs = {
  where: CatProjectApprovalStatusWhereUniqueInput;
};


export type MutationDeleteCatProjectGroupArgs = {
  where: CatProjectGroupWhereUniqueInput;
};


export type MutationDeleteCatProjectManagementFormArgs = {
  where: CatProjectManagementFormWhereUniqueInput;
};


export type MutationDeleteInvestorArgs = {
  where: CatBidSelectionPlanStatusWhereUniqueInput;
};


export type MutationDeleteOrganizationArgs = {
  where: OrganizationWhereUniqueInput;
};


export type MutationDeleteProjectArgs = {
  where: ProjectWhereUniqueInput;
};


export type MutationLoginArgs = {
  data: LoginInput;
};


export type MutationLoginAzureArgs = {
  token: Scalars['String']['input'];
};


export type MutationLoginPortalAdminArgs = {
  token: Scalars['String']['input'];
};


export type MutationLoginTsmArgs = {
  token: Scalars['String']['input'];
};


export type MutationRefreshTokenArgs = {
  token: Scalars['JWT']['input'];
};


export type MutationSaveAreaArgs = {
  data: CatAreaCreateInput;
};


export type MutationSaveBidNotificationArgs = {
  data?: InputMaybe<BidNotificationCreateInput>;
};


export type MutationSaveBidNotificationContractorArgs = {
  data?: InputMaybe<BidNotificationContractorCreateInput>;
};


export type MutationSaveBidNotificationResultArgs = {
  data?: InputMaybe<BidNotificationResultCreateInput>;
};


export type MutationSaveBidPackageArgs = {
  data: BidPackageCreateInput;
};


export type MutationSaveBidPackageLotArgs = {
  data?: InputMaybe<BidPackageLotCreateInput>;
};


export type MutationSaveBidPetitionContractorArgs = {
  data?: InputMaybe<BidPetitionContractorCreateInput>;
};


export type MutationSaveBidSelectionPlanArgs = {
  data?: InputMaybe<BidSelectionPlanCreateInput>;
};


export type MutationSaveBusinessArgs = {
  data: BusinessCreateInput;
};


export type MutationSaveCatBidFormArgs = {
  data?: InputMaybe<CatBidFormCreateInput>;
};


export type MutationSaveCatBidModeArgs = {
  data?: InputMaybe<CatBidModeCreateInput>;
};


export type MutationSaveCatBidSelectionPlanStatusArgs = {
  data?: InputMaybe<CatBidSelectionPlanStatusCreateInput>;
};


export type MutationSaveCatBidSelectionPlanTypeArgs = {
  data?: InputMaybe<CatBidSelectionPlanTypeCreateInput>;
};


export type MutationSaveCatConstructionTypeArgs = {
  data?: InputMaybe<CatConstructionTypeCreateInput>;
};


export type MutationSaveCatContractStatusArgs = {
  data?: InputMaybe<CatContractStatusCreateInput>;
};


export type MutationSaveCatContractTypeArgs = {
  data?: InputMaybe<CatContractTypeCreateInput>;
};


export type MutationSaveCatContractorTypeArgs = {
  data?: InputMaybe<CatContractorTypeCreateInput>;
};


export type MutationSaveCatInvestmentFormArgs = {
  data?: InputMaybe<CatInvestmentFormCreateInput>;
};


export type MutationSaveCatOrganizationSizeArgs = {
  data?: InputMaybe<CatOrganizationSizeCreateInput>;
};


export type MutationSaveCatProcessApplyArgs = {
  data?: InputMaybe<CatProcessApplyCreateInput>;
};


export type MutationSaveCatProjectApprovalStatusArgs = {
  data?: InputMaybe<CatProjectApprovalStatusCreateInput>;
};


export type MutationSaveCatProjectGroupArgs = {
  data?: InputMaybe<CatProjectGroupCreateInput>;
};


export type MutationSaveCatProjectManagementFormArgs = {
  data?: InputMaybe<CatProjectManagementFormCreateInput>;
};


export type MutationSaveInvestorArgs = {
  data?: InputMaybe<CatBidFieldCreateInput>;
};


export type MutationSaveOrganizationArgs = {
  data?: InputMaybe<OrganizationCreateInput>;
};


export type MutationSaveProjectArgs = {
  data?: InputMaybe<ProjectCreateInput>;
};


export type MutationUpdateAreaArgs = {
  data: CatAreaUpdateInput;
  where: CatAreaWhereUniqueInput;
};


export type MutationUpdateBidNotificationArgs = {
  data: BidNotificationUpdateInput;
  where: BidNotificationWhereUniqueInput;
};


export type MutationUpdateBidNotificationContractorArgs = {
  data: BidNotificationContractorUpdateInput;
  where: BidNotificationContractorWhereUniqueInput;
};


export type MutationUpdateBidNotificationResultArgs = {
  data: BidNotificationResultUpdateInput;
  where: BidNotificationResultWhereUniqueInput;
};


export type MutationUpdateBidPackageArgs = {
  data: BidPackageUpdateInput;
  where: BidPackageWhereUniqueInput;
};


export type MutationUpdateBidPackageLotArgs = {
  data: BidPackageLotUpdateInput;
  where: BidPackageLotWhereUniqueInput;
};


export type MutationUpdateBidPetitionContractorArgs = {
  data: BidPetitionContractorUpdateInput;
  where: BidPetitionContractorWhereUniqueInput;
};


export type MutationUpdateBidSelectionPlanArgs = {
  data: BidSelectionPlanUpdateInput;
  where: BidSelectionPlanWhereUniqueInput;
};


export type MutationUpdateBusinessArgs = {
  data: BusinessUpdateInput;
  where: BusinessWhereUniqueInput;
};


export type MutationUpdateCatBidFormArgs = {
  data: CatBidFormUpdateInput;
  where: CatBidFormWhereUniqueInput;
};


export type MutationUpdateCatBidModeArgs = {
  data: CatBidModeUpdateInput;
  where: CatBidModeWhereUniqueInput;
};


export type MutationUpdateCatBidSelectionPlanStatusArgs = {
  data: CatBidSelectionPlanStatusUpdateInput;
  where: CatBidSelectionPlanStatusWhereUniqueInput;
};


export type MutationUpdateCatBidSelectionPlanTypeArgs = {
  data: CatBidSelectionPlanTypeUpdateInput;
  where: CatBidSelectionPlanTypeWhereUniqueInput;
};


export type MutationUpdateCatConstructionTypeArgs = {
  data: CatConstructionTypeUpdateInput;
  where: CatConstructionTypeWhereUniqueInput;
};


export type MutationUpdateCatContractStatusArgs = {
  data: CatContractStatusUpdateInput;
  where: CatContractStatusWhereUniqueInput;
};


export type MutationUpdateCatContractTypeArgs = {
  data: CatContractTypeUpdateInput;
  where: CatContractTypeWhereUniqueInput;
};


export type MutationUpdateCatContractorTypeArgs = {
  data: CatContractorTypeUpdateInput;
  where: CatContractorTypeWhereUniqueInput;
};


export type MutationUpdateCatInvestmentFormArgs = {
  data: CatInvestmentFormUpdateInput;
  where: CatInvestmentFormWhereUniqueInput;
};


export type MutationUpdateCatOrganizationSizeArgs = {
  data: CatOrganizationSizeUpdateInput;
  where: CatOrganizationSizeWhereUniqueInput;
};


export type MutationUpdateCatProcessApplyArgs = {
  data: CatProcessApplyUpdateInput;
  where: CatProcessApplyWhereUniqueInput;
};


export type MutationUpdateCatProjectApprovalStatusArgs = {
  data: CatProjectApprovalStatusUpdateInput;
  where: CatProjectApprovalStatusWhereUniqueInput;
};


export type MutationUpdateCatProjectGroupArgs = {
  data: CatProjectGroupUpdateInput;
  where: CatProjectGroupWhereUniqueInput;
};


export type MutationUpdateCatProjectManagementFormArgs = {
  data: CatProjectManagementFormUpdateInput;
  where: CatProjectManagementFormWhereUniqueInput;
};


export type MutationUpdateInvestorArgs = {
  data: CatBidFieldUpdateInput;
  where: CatBidFieldWhereUniqueInput;
};


export type MutationUpdateOrganizationArgs = {
  data: OrganizationUpdateInput;
  where: OrganizationWhereUniqueInput;
};


export type MutationUpdateProjectArgs = {
  data: ProjectUpdateInput;
  where: ProjectWhereUniqueInput;
};

export type NestedBigIntNullableFilter = {
  equals?: InputMaybe<Scalars['String']['input']>;
  gt?: InputMaybe<Scalars['String']['input']>;
  gte?: InputMaybe<Scalars['String']['input']>;
  in?: InputMaybe<Array<Scalars['String']['input']>>;
  lt?: InputMaybe<Scalars['String']['input']>;
  lte?: InputMaybe<Scalars['String']['input']>;
  not?: InputMaybe<NestedBigIntNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type NestedBoolFilter = {
  equals?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<NestedBoolFilter>;
};

export type NestedBoolNullableFilter = {
  equals?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<NestedBoolNullableFilter>;
};

export type NestedDateTimeNullableFilter = {
  equals?: InputMaybe<Scalars['DateTime']['input']>;
  gt?: InputMaybe<Scalars['DateTime']['input']>;
  gte?: InputMaybe<Scalars['DateTime']['input']>;
  in?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  lt?: InputMaybe<Scalars['DateTime']['input']>;
  lte?: InputMaybe<Scalars['DateTime']['input']>;
  not?: InputMaybe<NestedDateTimeNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['DateTime']['input']>>;
};

export type NestedDecimalNullableFilter = {
  equals?: InputMaybe<Scalars['Decimal']['input']>;
  gt?: InputMaybe<Scalars['Decimal']['input']>;
  gte?: InputMaybe<Scalars['Decimal']['input']>;
  in?: InputMaybe<Array<Scalars['Decimal']['input']>>;
  lt?: InputMaybe<Scalars['Decimal']['input']>;
  lte?: InputMaybe<Scalars['Decimal']['input']>;
  not?: InputMaybe<NestedDecimalNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['Decimal']['input']>>;
};

export type NestedIntFilter = {
  equals?: InputMaybe<Scalars['Int']['input']>;
  gt?: InputMaybe<Scalars['Int']['input']>;
  gte?: InputMaybe<Scalars['Int']['input']>;
  in?: InputMaybe<Array<Scalars['Int']['input']>>;
  lt?: InputMaybe<Scalars['Int']['input']>;
  lte?: InputMaybe<Scalars['Int']['input']>;
  not?: InputMaybe<NestedIntFilter>;
  notIn?: InputMaybe<Array<Scalars['Int']['input']>>;
};

export type NestedIntNullableFilter = {
  equals?: InputMaybe<Scalars['Int']['input']>;
  gt?: InputMaybe<Scalars['Int']['input']>;
  gte?: InputMaybe<Scalars['Int']['input']>;
  in?: InputMaybe<Array<Scalars['Int']['input']>>;
  lt?: InputMaybe<Scalars['Int']['input']>;
  lte?: InputMaybe<Scalars['Int']['input']>;
  not?: InputMaybe<NestedIntNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['Int']['input']>>;
};

export type NestedStringFilter = {
  contains?: InputMaybe<Scalars['String']['input']>;
  endsWith?: InputMaybe<Scalars['String']['input']>;
  equals?: InputMaybe<Scalars['String']['input']>;
  gt?: InputMaybe<Scalars['String']['input']>;
  gte?: InputMaybe<Scalars['String']['input']>;
  in?: InputMaybe<Array<Scalars['String']['input']>>;
  lt?: InputMaybe<Scalars['String']['input']>;
  lte?: InputMaybe<Scalars['String']['input']>;
  not?: InputMaybe<NestedStringFilter>;
  notIn?: InputMaybe<Array<Scalars['String']['input']>>;
  startsWith?: InputMaybe<Scalars['String']['input']>;
};

export type NestedStringNullableFilter = {
  contains?: InputMaybe<Scalars['String']['input']>;
  endsWith?: InputMaybe<Scalars['String']['input']>;
  equals?: InputMaybe<Scalars['String']['input']>;
  gt?: InputMaybe<Scalars['String']['input']>;
  gte?: InputMaybe<Scalars['String']['input']>;
  in?: InputMaybe<Array<Scalars['String']['input']>>;
  lt?: InputMaybe<Scalars['String']['input']>;
  lte?: InputMaybe<Scalars['String']['input']>;
  not?: InputMaybe<NestedStringNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['String']['input']>>;
  startsWith?: InputMaybe<Scalars['String']['input']>;
};

export type NullableBigIntFieldUpdateOperationsInput = {
  decrement?: InputMaybe<Scalars['String']['input']>;
  divide?: InputMaybe<Scalars['String']['input']>;
  increment?: InputMaybe<Scalars['String']['input']>;
  multiply?: InputMaybe<Scalars['String']['input']>;
  set?: InputMaybe<Scalars['String']['input']>;
};

export type NullableBoolFieldUpdateOperationsInput = {
  set?: InputMaybe<Scalars['Boolean']['input']>;
};

export type NullableDateTimeFieldUpdateOperationsInput = {
  set?: InputMaybe<Scalars['DateTime']['input']>;
};

export type NullableDecimalFieldUpdateOperationsInput = {
  decrement?: InputMaybe<Scalars['Decimal']['input']>;
  divide?: InputMaybe<Scalars['Decimal']['input']>;
  increment?: InputMaybe<Scalars['Decimal']['input']>;
  multiply?: InputMaybe<Scalars['Decimal']['input']>;
  set?: InputMaybe<Scalars['Decimal']['input']>;
};

export type NullableIntFieldUpdateOperationsInput = {
  decrement?: InputMaybe<Scalars['Int']['input']>;
  divide?: InputMaybe<Scalars['Int']['input']>;
  increment?: InputMaybe<Scalars['Int']['input']>;
  multiply?: InputMaybe<Scalars['Int']['input']>;
  set?: InputMaybe<Scalars['Int']['input']>;
};

export type NullableStringFieldUpdateOperationsInput = {
  set?: InputMaybe<Scalars['String']['input']>;
};

export enum NullsOrder {
  First = 'first',
  Last = 'last'
}

export type Organization = {
  __typename?: 'Organization';
  _count: OrganizationCount;
  accountingType?: Maybe<Scalars['String']['output']>;
  agencyName?: Maybe<Scalars['String']['output']>;
  authenType?: Maybe<Scalars['Int']['output']>;
  bidPetitionContractors?: Maybe<Array<BidPetitionContractor>>;
  briefName?: Maybe<Scalars['String']['output']>;
  budgetCode?: Maybe<Scalars['String']['output']>;
  businessStatus?: Maybe<Scalars['String']['output']>;
  businessType?: Maybe<CatBusinessType>;
  businessTypeCode?: Maybe<Scalars['String']['output']>;
  businessTypeId?: Maybe<Scalars['String']['output']>;
  caRegister?: Maybe<Scalars['Boolean']['output']>;
  chapterCode?: Maybe<Scalars['String']['output']>;
  chapterFiles?: Maybe<Array<BidNotificationChapterFile>>;
  code?: Maybe<Scalars['String']['output']>;
  countryCode?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  deletedAt?: Maybe<Scalars['DateTime']['output']>;
  enName?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  investorBidNotifications?: Maybe<Array<BidNotification>>;
  investorBidSelectionPlans?: Maybe<Array<BidSelectionPlan>>;
  isAgencies?: Maybe<Scalars['Int']['output']>;
  isBidderInvestor: Scalars['Boolean']['output'];
  isBidderInvite: Scalars['Boolean']['output'];
  isBiddingFacility: Scalars['Boolean']['output'];
  isCompetentAuthorities: Scalars['Boolean']['output'];
  isContractor: Scalars['Boolean']['output'];
  isForeignInvestor?: Maybe<Scalars['Boolean']['output']>;
  isInvestor: Scalars['Boolean']['output'];
  isPlanInvest?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  notificationContractors?: Maybe<Array<BidNotificationContractor>>;
  officeAddress?: Maybe<Scalars['String']['output']>;
  officeDistrict?: Maybe<CatArea>;
  officeDistrictCode?: Maybe<Scalars['String']['output']>;
  officeDistrictId?: Maybe<Scalars['String']['output']>;
  officePhone?: Maybe<Scalars['String']['output']>;
  officeProvince?: Maybe<CatArea>;
  officeProvinceCode?: Maybe<Scalars['String']['output']>;
  officeProvinceId?: Maybe<Scalars['String']['output']>;
  officeWard?: Maybe<CatArea>;
  officeWardCode?: Maybe<Scalars['String']['output']>;
  officeWardId?: Maybe<Scalars['String']['output']>;
  officeWeb?: Maybe<Scalars['String']['output']>;
  officeZipcode?: Maybe<Scalars['String']['output']>;
  oldCode?: Maybe<Scalars['String']['output']>;
  organizationBusiness?: Maybe<Array<OrganizationBusiness>>;
  proManagementUnit?: Maybe<Scalars['String']['output']>;
  procuringEntities?: Maybe<Array<BidNotification>>;
  procuringEntityBidSelectionPlans?: Maybe<Array<BidSelectionPlan>>;
  projects?: Maybe<Array<Project>>;
  rawFiles?: Maybe<Scalars['JSON']['output']>;
  reason?: Maybe<Scalars['String']['output']>;
  receiverAddress?: Maybe<Scalars['String']['output']>;
  receiverByOffice?: Maybe<Scalars['Int']['output']>;
  receiverDistrict?: Maybe<CatArea>;
  receiverDistrictCode?: Maybe<Scalars['String']['output']>;
  receiverDistrictId?: Maybe<Scalars['String']['output']>;
  receiverEmail?: Maybe<Scalars['String']['output']>;
  receiverEmailElecInvo?: Maybe<Scalars['String']['output']>;
  receiverIdDate?: Maybe<Scalars['String']['output']>;
  receiverIdNo?: Maybe<Scalars['String']['output']>;
  receiverName?: Maybe<Scalars['String']['output']>;
  receiverPhone?: Maybe<Scalars['String']['output']>;
  receiverProvince?: Maybe<CatArea>;
  receiverProvinceCode?: Maybe<Scalars['String']['output']>;
  receiverProvinceId?: Maybe<Scalars['String']['output']>;
  receiverWard?: Maybe<CatArea>;
  receiverWardCode?: Maybe<Scalars['String']['output']>;
  receiverWardId?: Maybe<Scalars['String']['output']>;
  receiverZipcode?: Maybe<Scalars['String']['output']>;
  repEmail?: Maybe<Scalars['String']['output']>;
  repFullName?: Maybe<Scalars['String']['output']>;
  repIdCountryCode?: Maybe<Scalars['String']['output']>;
  repIdDate?: Maybe<Scalars['String']['output']>;
  repIdNo?: Maybe<Scalars['String']['output']>;
  repIdType?: Maybe<Scalars['String']['output']>;
  repPhone?: Maybe<Scalars['String']['output']>;
  repPosition?: Maybe<Scalars['String']['output']>;
  taxCode?: Maybe<Scalars['String']['output']>;
  taxCodeStatus?: Maybe<Scalars['String']['output']>;
  taxDate?: Maybe<Scalars['DateTime']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
};

export type OrganizationBusiness = {
  __typename?: 'OrganizationBusiness';
  business?: Maybe<Business>;
  businessCode?: Maybe<Scalars['String']['output']>;
  businessId?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  isMain: Scalars['Boolean']['output'];
  organization?: Maybe<Organization>;
  organizationCode?: Maybe<Scalars['String']['output']>;
  organizationId?: Maybe<Scalars['String']['output']>;
  originalId?: Maybe<Scalars['String']['output']>;
};

export type OrganizationBusinessCreateManyBusinessInput = {
  businessCode?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isMain?: InputMaybe<Scalars['Boolean']['input']>;
  organizationCode?: InputMaybe<Scalars['String']['input']>;
  organizationId?: InputMaybe<Scalars['String']['input']>;
  originalId?: InputMaybe<Scalars['String']['input']>;
};

export type OrganizationBusinessCreateManyBusinessInputEnvelope = {
  data: Array<OrganizationBusinessCreateManyBusinessInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type OrganizationBusinessCreateManyOrganizationInput = {
  businessCode?: InputMaybe<Scalars['String']['input']>;
  businessId?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isMain?: InputMaybe<Scalars['Boolean']['input']>;
  organizationCode?: InputMaybe<Scalars['String']['input']>;
  originalId?: InputMaybe<Scalars['String']['input']>;
};

export type OrganizationBusinessCreateManyOrganizationInputEnvelope = {
  data: Array<OrganizationBusinessCreateManyOrganizationInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type OrganizationBusinessCreateNestedManyWithoutBusinessInput = {
  connect?: InputMaybe<Array<OrganizationBusinessWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<OrganizationBusinessCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<OrganizationBusinessCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<OrganizationBusinessCreateManyBusinessInputEnvelope>;
};

export type OrganizationBusinessCreateNestedManyWithoutOrganizationInput = {
  connect?: InputMaybe<Array<OrganizationBusinessWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<OrganizationBusinessCreateOrConnectWithoutOrganizationInput>>;
  create?: InputMaybe<Array<OrganizationBusinessCreateWithoutOrganizationInput>>;
  createMany?: InputMaybe<OrganizationBusinessCreateManyOrganizationInputEnvelope>;
};

export type OrganizationBusinessCreateOrConnectWithoutBusinessInput = {
  create: OrganizationBusinessCreateWithoutBusinessInput;
  where: OrganizationBusinessWhereUniqueInput;
};

export type OrganizationBusinessCreateOrConnectWithoutOrganizationInput = {
  create: OrganizationBusinessCreateWithoutOrganizationInput;
  where: OrganizationBusinessWhereUniqueInput;
};

export type OrganizationBusinessCreateWithoutBusinessInput = {
  businessCode?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isMain?: InputMaybe<Scalars['Boolean']['input']>;
  organization?: InputMaybe<OrganizationCreateNestedOneWithoutOrganizationBusinessInput>;
  organizationCode?: InputMaybe<Scalars['String']['input']>;
  originalId?: InputMaybe<Scalars['String']['input']>;
};

export type OrganizationBusinessCreateWithoutOrganizationInput = {
  business?: InputMaybe<BusinessCreateNestedOneWithoutOrganizationBusinessInput>;
  businessCode?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isMain?: InputMaybe<Scalars['Boolean']['input']>;
  organizationCode?: InputMaybe<Scalars['String']['input']>;
  originalId?: InputMaybe<Scalars['String']['input']>;
};

export type OrganizationBusinessListRelationFilter = {
  every?: InputMaybe<OrganizationBusinessWhereInput>;
  none?: InputMaybe<OrganizationBusinessWhereInput>;
  some?: InputMaybe<OrganizationBusinessWhereInput>;
};

export type OrganizationBusinessOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type OrganizationBusinessScalarWhereInput = {
  AND?: InputMaybe<Array<OrganizationBusinessScalarWhereInput>>;
  NOT?: InputMaybe<Array<OrganizationBusinessScalarWhereInput>>;
  OR?: InputMaybe<Array<OrganizationBusinessScalarWhereInput>>;
  businessCode?: InputMaybe<StringNullableFilter>;
  businessId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isMain?: InputMaybe<BoolFilter>;
  organizationCode?: InputMaybe<StringNullableFilter>;
  organizationId?: InputMaybe<StringNullableFilter>;
  originalId?: InputMaybe<StringNullableFilter>;
};

export type OrganizationBusinessUpdateManyMutationInput = {
  businessCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isMain?: InputMaybe<BoolFieldUpdateOperationsInput>;
  organizationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  originalId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrganizationBusinessUpdateManyWithWhereWithoutBusinessInput = {
  data: OrganizationBusinessUpdateManyMutationInput;
  where: OrganizationBusinessScalarWhereInput;
};

export type OrganizationBusinessUpdateManyWithWhereWithoutOrganizationInput = {
  data: OrganizationBusinessUpdateManyMutationInput;
  where: OrganizationBusinessScalarWhereInput;
};

export type OrganizationBusinessUpdateManyWithoutBusinessNestedInput = {
  connect?: InputMaybe<Array<OrganizationBusinessWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<OrganizationBusinessCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<OrganizationBusinessCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<OrganizationBusinessCreateManyBusinessInputEnvelope>;
  delete?: InputMaybe<Array<OrganizationBusinessWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<OrganizationBusinessScalarWhereInput>>;
  disconnect?: InputMaybe<Array<OrganizationBusinessWhereUniqueInput>>;
  set?: InputMaybe<Array<OrganizationBusinessWhereUniqueInput>>;
  update?: InputMaybe<Array<OrganizationBusinessUpdateWithWhereUniqueWithoutBusinessInput>>;
  updateMany?: InputMaybe<Array<OrganizationBusinessUpdateManyWithWhereWithoutBusinessInput>>;
  upsert?: InputMaybe<Array<OrganizationBusinessUpsertWithWhereUniqueWithoutBusinessInput>>;
};

export type OrganizationBusinessUpdateManyWithoutOrganizationNestedInput = {
  connect?: InputMaybe<Array<OrganizationBusinessWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<OrganizationBusinessCreateOrConnectWithoutOrganizationInput>>;
  create?: InputMaybe<Array<OrganizationBusinessCreateWithoutOrganizationInput>>;
  createMany?: InputMaybe<OrganizationBusinessCreateManyOrganizationInputEnvelope>;
  delete?: InputMaybe<Array<OrganizationBusinessWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<OrganizationBusinessScalarWhereInput>>;
  disconnect?: InputMaybe<Array<OrganizationBusinessWhereUniqueInput>>;
  set?: InputMaybe<Array<OrganizationBusinessWhereUniqueInput>>;
  update?: InputMaybe<Array<OrganizationBusinessUpdateWithWhereUniqueWithoutOrganizationInput>>;
  updateMany?: InputMaybe<Array<OrganizationBusinessUpdateManyWithWhereWithoutOrganizationInput>>;
  upsert?: InputMaybe<Array<OrganizationBusinessUpsertWithWhereUniqueWithoutOrganizationInput>>;
};

export type OrganizationBusinessUpdateWithWhereUniqueWithoutBusinessInput = {
  data: OrganizationBusinessUpdateWithoutBusinessInput;
  where: OrganizationBusinessWhereUniqueInput;
};

export type OrganizationBusinessUpdateWithWhereUniqueWithoutOrganizationInput = {
  data: OrganizationBusinessUpdateWithoutOrganizationInput;
  where: OrganizationBusinessWhereUniqueInput;
};

export type OrganizationBusinessUpdateWithoutBusinessInput = {
  businessCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isMain?: InputMaybe<BoolFieldUpdateOperationsInput>;
  organization?: InputMaybe<OrganizationUpdateOneWithoutOrganizationBusinessNestedInput>;
  organizationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  originalId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrganizationBusinessUpdateWithoutOrganizationInput = {
  business?: InputMaybe<BusinessUpdateOneWithoutOrganizationBusinessNestedInput>;
  businessCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isMain?: InputMaybe<BoolFieldUpdateOperationsInput>;
  organizationCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  originalId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrganizationBusinessUpsertWithWhereUniqueWithoutBusinessInput = {
  create: OrganizationBusinessCreateWithoutBusinessInput;
  update: OrganizationBusinessUpdateWithoutBusinessInput;
  where: OrganizationBusinessWhereUniqueInput;
};

export type OrganizationBusinessUpsertWithWhereUniqueWithoutOrganizationInput = {
  create: OrganizationBusinessCreateWithoutOrganizationInput;
  update: OrganizationBusinessUpdateWithoutOrganizationInput;
  where: OrganizationBusinessWhereUniqueInput;
};

export type OrganizationBusinessWhereInput = {
  AND?: InputMaybe<Array<OrganizationBusinessWhereInput>>;
  NOT?: InputMaybe<Array<OrganizationBusinessWhereInput>>;
  OR?: InputMaybe<Array<OrganizationBusinessWhereInput>>;
  business?: InputMaybe<BusinessWhereInput>;
  businessCode?: InputMaybe<StringNullableFilter>;
  businessId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isMain?: InputMaybe<BoolFilter>;
  organization?: InputMaybe<OrganizationWhereInput>;
  organizationCode?: InputMaybe<StringNullableFilter>;
  organizationId?: InputMaybe<StringNullableFilter>;
  originalId?: InputMaybe<StringNullableFilter>;
};

export type OrganizationBusinessWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']['input']>;
};

export type OrganizationConnection = {
  __typename?: 'OrganizationConnection';
  nodes?: Maybe<Array<Organization>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type OrganizationCount = {
  __typename?: 'OrganizationCount';
  bidPetitionContractors: Scalars['Int']['output'];
  chapterFiles: Scalars['Int']['output'];
  investorBidNotifications: Scalars['Int']['output'];
  investorBidSelectionPlans: Scalars['Int']['output'];
  notificationContractors: Scalars['Int']['output'];
  organizationBusiness: Scalars['Int']['output'];
  procuringEntities: Scalars['Int']['output'];
  procuringEntityBidSelectionPlans: Scalars['Int']['output'];
  projects: Scalars['Int']['output'];
};

export type OrganizationCreateInput = {
  accountingType?: InputMaybe<Scalars['String']['input']>;
  agencyName?: InputMaybe<Scalars['String']['input']>;
  authenType?: InputMaybe<Scalars['Int']['input']>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutContractorInput>;
  briefName?: InputMaybe<Scalars['String']['input']>;
  budgetCode?: InputMaybe<Scalars['String']['input']>;
  businessStatus?: InputMaybe<Scalars['String']['input']>;
  businessType?: InputMaybe<CatBusinessTypeCreateNestedOneWithoutOrganizationsInput>;
  businessTypeCode?: InputMaybe<Scalars['String']['input']>;
  caRegister?: InputMaybe<Scalars['Boolean']['input']>;
  chapterCode?: InputMaybe<Scalars['String']['input']>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutProcuringEntityInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  enName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investorBidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutInvestorInput>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutInvestorInput>;
  isAgencies?: InputMaybe<Scalars['Int']['input']>;
  isBidderInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isBidderInvite?: InputMaybe<Scalars['Boolean']['input']>;
  isBiddingFacility?: InputMaybe<Scalars['Boolean']['input']>;
  isCompetentAuthorities?: InputMaybe<Scalars['Boolean']['input']>;
  isContractor?: InputMaybe<Scalars['Boolean']['input']>;
  isForeignInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isPlanInvest?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  notificationContractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutContractorInput>;
  officeAddress?: InputMaybe<Scalars['String']['input']>;
  officeDistrict?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeDistrictOrganizationsInput>;
  officeDistrictCode?: InputMaybe<Scalars['String']['input']>;
  officePhone?: InputMaybe<Scalars['String']['input']>;
  officeProvince?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeProvinceOrganizationsInput>;
  officeProvinceCode?: InputMaybe<Scalars['String']['input']>;
  officeWard?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeWardOrganizationsInput>;
  officeWardCode?: InputMaybe<Scalars['String']['input']>;
  officeWeb?: InputMaybe<Scalars['String']['input']>;
  officeZipcode?: InputMaybe<Scalars['String']['input']>;
  oldCode?: InputMaybe<Scalars['String']['input']>;
  organizationBusiness?: InputMaybe<OrganizationBusinessCreateNestedManyWithoutOrganizationInput>;
  proManagementUnit?: InputMaybe<Scalars['String']['input']>;
  procuringEntities?: InputMaybe<BidNotificationCreateNestedManyWithoutProcuringEntityInput>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutProcuringEntityInput>;
  projects?: InputMaybe<ProjectCreateNestedManyWithoutInvestorInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  receiverAddress?: InputMaybe<Scalars['String']['input']>;
  receiverByOffice?: InputMaybe<Scalars['Int']['input']>;
  receiverDistrict?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverDistrictOrganizationsInput>;
  receiverDistrictCode?: InputMaybe<Scalars['String']['input']>;
  receiverEmail?: InputMaybe<Scalars['String']['input']>;
  receiverEmailElecInvo?: InputMaybe<Scalars['String']['input']>;
  receiverIdDate?: InputMaybe<Scalars['String']['input']>;
  receiverIdNo?: InputMaybe<Scalars['String']['input']>;
  receiverName?: InputMaybe<Scalars['String']['input']>;
  receiverPhone?: InputMaybe<Scalars['String']['input']>;
  receiverProvince?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverProvinceOrganizationsInput>;
  receiverProvinceCode?: InputMaybe<Scalars['String']['input']>;
  receiverWard?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverWardOrganizationsInput>;
  receiverWardCode?: InputMaybe<Scalars['String']['input']>;
  receiverZipcode?: InputMaybe<Scalars['String']['input']>;
  repEmail?: InputMaybe<Scalars['String']['input']>;
  repFullName?: InputMaybe<Scalars['String']['input']>;
  repIdCountryCode?: InputMaybe<Scalars['String']['input']>;
  repIdDate?: InputMaybe<Scalars['String']['input']>;
  repIdNo?: InputMaybe<Scalars['String']['input']>;
  repIdType?: InputMaybe<Scalars['String']['input']>;
  repPhone?: InputMaybe<Scalars['String']['input']>;
  repPosition?: InputMaybe<Scalars['String']['input']>;
  taxCode?: InputMaybe<Scalars['String']['input']>;
  taxCodeStatus?: InputMaybe<Scalars['String']['input']>;
  taxDate?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type OrganizationCreateManyOfficeDistrictInput = {
  accountingType?: InputMaybe<Scalars['String']['input']>;
  agencyName?: InputMaybe<Scalars['String']['input']>;
  authenType?: InputMaybe<Scalars['Int']['input']>;
  briefName?: InputMaybe<Scalars['String']['input']>;
  budgetCode?: InputMaybe<Scalars['String']['input']>;
  businessStatus?: InputMaybe<Scalars['String']['input']>;
  businessTypeCode?: InputMaybe<Scalars['String']['input']>;
  businessTypeId?: InputMaybe<Scalars['String']['input']>;
  caRegister?: InputMaybe<Scalars['Boolean']['input']>;
  chapterCode?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  enName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isAgencies?: InputMaybe<Scalars['Int']['input']>;
  isBidderInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isBidderInvite?: InputMaybe<Scalars['Boolean']['input']>;
  isBiddingFacility?: InputMaybe<Scalars['Boolean']['input']>;
  isCompetentAuthorities?: InputMaybe<Scalars['Boolean']['input']>;
  isContractor?: InputMaybe<Scalars['Boolean']['input']>;
  isForeignInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isPlanInvest?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  officeAddress?: InputMaybe<Scalars['String']['input']>;
  officeDistrictCode?: InputMaybe<Scalars['String']['input']>;
  officePhone?: InputMaybe<Scalars['String']['input']>;
  officeProvinceCode?: InputMaybe<Scalars['String']['input']>;
  officeProvinceId?: InputMaybe<Scalars['String']['input']>;
  officeWardCode?: InputMaybe<Scalars['String']['input']>;
  officeWardId?: InputMaybe<Scalars['String']['input']>;
  officeWeb?: InputMaybe<Scalars['String']['input']>;
  officeZipcode?: InputMaybe<Scalars['String']['input']>;
  oldCode?: InputMaybe<Scalars['String']['input']>;
  proManagementUnit?: InputMaybe<Scalars['String']['input']>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  receiverAddress?: InputMaybe<Scalars['String']['input']>;
  receiverByOffice?: InputMaybe<Scalars['Int']['input']>;
  receiverDistrictCode?: InputMaybe<Scalars['String']['input']>;
  receiverDistrictId?: InputMaybe<Scalars['String']['input']>;
  receiverEmail?: InputMaybe<Scalars['String']['input']>;
  receiverEmailElecInvo?: InputMaybe<Scalars['String']['input']>;
  receiverIdDate?: InputMaybe<Scalars['String']['input']>;
  receiverIdNo?: InputMaybe<Scalars['String']['input']>;
  receiverName?: InputMaybe<Scalars['String']['input']>;
  receiverPhone?: InputMaybe<Scalars['String']['input']>;
  receiverProvinceCode?: InputMaybe<Scalars['String']['input']>;
  receiverProvinceId?: InputMaybe<Scalars['String']['input']>;
  receiverWardCode?: InputMaybe<Scalars['String']['input']>;
  receiverWardId?: InputMaybe<Scalars['String']['input']>;
  receiverZipcode?: InputMaybe<Scalars['String']['input']>;
  repEmail?: InputMaybe<Scalars['String']['input']>;
  repFullName?: InputMaybe<Scalars['String']['input']>;
  repIdCountryCode?: InputMaybe<Scalars['String']['input']>;
  repIdDate?: InputMaybe<Scalars['String']['input']>;
  repIdNo?: InputMaybe<Scalars['String']['input']>;
  repIdType?: InputMaybe<Scalars['String']['input']>;
  repPhone?: InputMaybe<Scalars['String']['input']>;
  repPosition?: InputMaybe<Scalars['String']['input']>;
  taxCode?: InputMaybe<Scalars['String']['input']>;
  taxCodeStatus?: InputMaybe<Scalars['String']['input']>;
  taxDate?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type OrganizationCreateManyOfficeDistrictInputEnvelope = {
  data: Array<OrganizationCreateManyOfficeDistrictInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type OrganizationCreateManyOfficeProvinceInput = {
  accountingType?: InputMaybe<Scalars['String']['input']>;
  agencyName?: InputMaybe<Scalars['String']['input']>;
  authenType?: InputMaybe<Scalars['Int']['input']>;
  briefName?: InputMaybe<Scalars['String']['input']>;
  budgetCode?: InputMaybe<Scalars['String']['input']>;
  businessStatus?: InputMaybe<Scalars['String']['input']>;
  businessTypeCode?: InputMaybe<Scalars['String']['input']>;
  businessTypeId?: InputMaybe<Scalars['String']['input']>;
  caRegister?: InputMaybe<Scalars['Boolean']['input']>;
  chapterCode?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  enName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isAgencies?: InputMaybe<Scalars['Int']['input']>;
  isBidderInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isBidderInvite?: InputMaybe<Scalars['Boolean']['input']>;
  isBiddingFacility?: InputMaybe<Scalars['Boolean']['input']>;
  isCompetentAuthorities?: InputMaybe<Scalars['Boolean']['input']>;
  isContractor?: InputMaybe<Scalars['Boolean']['input']>;
  isForeignInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isPlanInvest?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  officeAddress?: InputMaybe<Scalars['String']['input']>;
  officeDistrictCode?: InputMaybe<Scalars['String']['input']>;
  officeDistrictId?: InputMaybe<Scalars['String']['input']>;
  officePhone?: InputMaybe<Scalars['String']['input']>;
  officeProvinceCode?: InputMaybe<Scalars['String']['input']>;
  officeWardCode?: InputMaybe<Scalars['String']['input']>;
  officeWardId?: InputMaybe<Scalars['String']['input']>;
  officeWeb?: InputMaybe<Scalars['String']['input']>;
  officeZipcode?: InputMaybe<Scalars['String']['input']>;
  oldCode?: InputMaybe<Scalars['String']['input']>;
  proManagementUnit?: InputMaybe<Scalars['String']['input']>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  receiverAddress?: InputMaybe<Scalars['String']['input']>;
  receiverByOffice?: InputMaybe<Scalars['Int']['input']>;
  receiverDistrictCode?: InputMaybe<Scalars['String']['input']>;
  receiverDistrictId?: InputMaybe<Scalars['String']['input']>;
  receiverEmail?: InputMaybe<Scalars['String']['input']>;
  receiverEmailElecInvo?: InputMaybe<Scalars['String']['input']>;
  receiverIdDate?: InputMaybe<Scalars['String']['input']>;
  receiverIdNo?: InputMaybe<Scalars['String']['input']>;
  receiverName?: InputMaybe<Scalars['String']['input']>;
  receiverPhone?: InputMaybe<Scalars['String']['input']>;
  receiverProvinceCode?: InputMaybe<Scalars['String']['input']>;
  receiverProvinceId?: InputMaybe<Scalars['String']['input']>;
  receiverWardCode?: InputMaybe<Scalars['String']['input']>;
  receiverWardId?: InputMaybe<Scalars['String']['input']>;
  receiverZipcode?: InputMaybe<Scalars['String']['input']>;
  repEmail?: InputMaybe<Scalars['String']['input']>;
  repFullName?: InputMaybe<Scalars['String']['input']>;
  repIdCountryCode?: InputMaybe<Scalars['String']['input']>;
  repIdDate?: InputMaybe<Scalars['String']['input']>;
  repIdNo?: InputMaybe<Scalars['String']['input']>;
  repIdType?: InputMaybe<Scalars['String']['input']>;
  repPhone?: InputMaybe<Scalars['String']['input']>;
  repPosition?: InputMaybe<Scalars['String']['input']>;
  taxCode?: InputMaybe<Scalars['String']['input']>;
  taxCodeStatus?: InputMaybe<Scalars['String']['input']>;
  taxDate?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type OrganizationCreateManyOfficeProvinceInputEnvelope = {
  data: Array<OrganizationCreateManyOfficeProvinceInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type OrganizationCreateManyOfficeWardInput = {
  accountingType?: InputMaybe<Scalars['String']['input']>;
  agencyName?: InputMaybe<Scalars['String']['input']>;
  authenType?: InputMaybe<Scalars['Int']['input']>;
  briefName?: InputMaybe<Scalars['String']['input']>;
  budgetCode?: InputMaybe<Scalars['String']['input']>;
  businessStatus?: InputMaybe<Scalars['String']['input']>;
  businessTypeCode?: InputMaybe<Scalars['String']['input']>;
  businessTypeId?: InputMaybe<Scalars['String']['input']>;
  caRegister?: InputMaybe<Scalars['Boolean']['input']>;
  chapterCode?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  enName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isAgencies?: InputMaybe<Scalars['Int']['input']>;
  isBidderInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isBidderInvite?: InputMaybe<Scalars['Boolean']['input']>;
  isBiddingFacility?: InputMaybe<Scalars['Boolean']['input']>;
  isCompetentAuthorities?: InputMaybe<Scalars['Boolean']['input']>;
  isContractor?: InputMaybe<Scalars['Boolean']['input']>;
  isForeignInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isPlanInvest?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  officeAddress?: InputMaybe<Scalars['String']['input']>;
  officeDistrictCode?: InputMaybe<Scalars['String']['input']>;
  officeDistrictId?: InputMaybe<Scalars['String']['input']>;
  officePhone?: InputMaybe<Scalars['String']['input']>;
  officeProvinceCode?: InputMaybe<Scalars['String']['input']>;
  officeProvinceId?: InputMaybe<Scalars['String']['input']>;
  officeWardCode?: InputMaybe<Scalars['String']['input']>;
  officeWeb?: InputMaybe<Scalars['String']['input']>;
  officeZipcode?: InputMaybe<Scalars['String']['input']>;
  oldCode?: InputMaybe<Scalars['String']['input']>;
  proManagementUnit?: InputMaybe<Scalars['String']['input']>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  receiverAddress?: InputMaybe<Scalars['String']['input']>;
  receiverByOffice?: InputMaybe<Scalars['Int']['input']>;
  receiverDistrictCode?: InputMaybe<Scalars['String']['input']>;
  receiverDistrictId?: InputMaybe<Scalars['String']['input']>;
  receiverEmail?: InputMaybe<Scalars['String']['input']>;
  receiverEmailElecInvo?: InputMaybe<Scalars['String']['input']>;
  receiverIdDate?: InputMaybe<Scalars['String']['input']>;
  receiverIdNo?: InputMaybe<Scalars['String']['input']>;
  receiverName?: InputMaybe<Scalars['String']['input']>;
  receiverPhone?: InputMaybe<Scalars['String']['input']>;
  receiverProvinceCode?: InputMaybe<Scalars['String']['input']>;
  receiverProvinceId?: InputMaybe<Scalars['String']['input']>;
  receiverWardCode?: InputMaybe<Scalars['String']['input']>;
  receiverWardId?: InputMaybe<Scalars['String']['input']>;
  receiverZipcode?: InputMaybe<Scalars['String']['input']>;
  repEmail?: InputMaybe<Scalars['String']['input']>;
  repFullName?: InputMaybe<Scalars['String']['input']>;
  repIdCountryCode?: InputMaybe<Scalars['String']['input']>;
  repIdDate?: InputMaybe<Scalars['String']['input']>;
  repIdNo?: InputMaybe<Scalars['String']['input']>;
  repIdType?: InputMaybe<Scalars['String']['input']>;
  repPhone?: InputMaybe<Scalars['String']['input']>;
  repPosition?: InputMaybe<Scalars['String']['input']>;
  taxCode?: InputMaybe<Scalars['String']['input']>;
  taxCodeStatus?: InputMaybe<Scalars['String']['input']>;
  taxDate?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type OrganizationCreateManyOfficeWardInputEnvelope = {
  data: Array<OrganizationCreateManyOfficeWardInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type OrganizationCreateManyReceiverDistrictInput = {
  accountingType?: InputMaybe<Scalars['String']['input']>;
  agencyName?: InputMaybe<Scalars['String']['input']>;
  authenType?: InputMaybe<Scalars['Int']['input']>;
  briefName?: InputMaybe<Scalars['String']['input']>;
  budgetCode?: InputMaybe<Scalars['String']['input']>;
  businessStatus?: InputMaybe<Scalars['String']['input']>;
  businessTypeCode?: InputMaybe<Scalars['String']['input']>;
  businessTypeId?: InputMaybe<Scalars['String']['input']>;
  caRegister?: InputMaybe<Scalars['Boolean']['input']>;
  chapterCode?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  enName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isAgencies?: InputMaybe<Scalars['Int']['input']>;
  isBidderInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isBidderInvite?: InputMaybe<Scalars['Boolean']['input']>;
  isBiddingFacility?: InputMaybe<Scalars['Boolean']['input']>;
  isCompetentAuthorities?: InputMaybe<Scalars['Boolean']['input']>;
  isContractor?: InputMaybe<Scalars['Boolean']['input']>;
  isForeignInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isPlanInvest?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  officeAddress?: InputMaybe<Scalars['String']['input']>;
  officeDistrictCode?: InputMaybe<Scalars['String']['input']>;
  officeDistrictId?: InputMaybe<Scalars['String']['input']>;
  officePhone?: InputMaybe<Scalars['String']['input']>;
  officeProvinceCode?: InputMaybe<Scalars['String']['input']>;
  officeProvinceId?: InputMaybe<Scalars['String']['input']>;
  officeWardCode?: InputMaybe<Scalars['String']['input']>;
  officeWardId?: InputMaybe<Scalars['String']['input']>;
  officeWeb?: InputMaybe<Scalars['String']['input']>;
  officeZipcode?: InputMaybe<Scalars['String']['input']>;
  oldCode?: InputMaybe<Scalars['String']['input']>;
  proManagementUnit?: InputMaybe<Scalars['String']['input']>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  receiverAddress?: InputMaybe<Scalars['String']['input']>;
  receiverByOffice?: InputMaybe<Scalars['Int']['input']>;
  receiverDistrictCode?: InputMaybe<Scalars['String']['input']>;
  receiverEmail?: InputMaybe<Scalars['String']['input']>;
  receiverEmailElecInvo?: InputMaybe<Scalars['String']['input']>;
  receiverIdDate?: InputMaybe<Scalars['String']['input']>;
  receiverIdNo?: InputMaybe<Scalars['String']['input']>;
  receiverName?: InputMaybe<Scalars['String']['input']>;
  receiverPhone?: InputMaybe<Scalars['String']['input']>;
  receiverProvinceCode?: InputMaybe<Scalars['String']['input']>;
  receiverProvinceId?: InputMaybe<Scalars['String']['input']>;
  receiverWardCode?: InputMaybe<Scalars['String']['input']>;
  receiverWardId?: InputMaybe<Scalars['String']['input']>;
  receiverZipcode?: InputMaybe<Scalars['String']['input']>;
  repEmail?: InputMaybe<Scalars['String']['input']>;
  repFullName?: InputMaybe<Scalars['String']['input']>;
  repIdCountryCode?: InputMaybe<Scalars['String']['input']>;
  repIdDate?: InputMaybe<Scalars['String']['input']>;
  repIdNo?: InputMaybe<Scalars['String']['input']>;
  repIdType?: InputMaybe<Scalars['String']['input']>;
  repPhone?: InputMaybe<Scalars['String']['input']>;
  repPosition?: InputMaybe<Scalars['String']['input']>;
  taxCode?: InputMaybe<Scalars['String']['input']>;
  taxCodeStatus?: InputMaybe<Scalars['String']['input']>;
  taxDate?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type OrganizationCreateManyReceiverDistrictInputEnvelope = {
  data: Array<OrganizationCreateManyReceiverDistrictInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type OrganizationCreateManyReceiverProvinceInput = {
  accountingType?: InputMaybe<Scalars['String']['input']>;
  agencyName?: InputMaybe<Scalars['String']['input']>;
  authenType?: InputMaybe<Scalars['Int']['input']>;
  briefName?: InputMaybe<Scalars['String']['input']>;
  budgetCode?: InputMaybe<Scalars['String']['input']>;
  businessStatus?: InputMaybe<Scalars['String']['input']>;
  businessTypeCode?: InputMaybe<Scalars['String']['input']>;
  businessTypeId?: InputMaybe<Scalars['String']['input']>;
  caRegister?: InputMaybe<Scalars['Boolean']['input']>;
  chapterCode?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  enName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isAgencies?: InputMaybe<Scalars['Int']['input']>;
  isBidderInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isBidderInvite?: InputMaybe<Scalars['Boolean']['input']>;
  isBiddingFacility?: InputMaybe<Scalars['Boolean']['input']>;
  isCompetentAuthorities?: InputMaybe<Scalars['Boolean']['input']>;
  isContractor?: InputMaybe<Scalars['Boolean']['input']>;
  isForeignInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isPlanInvest?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  officeAddress?: InputMaybe<Scalars['String']['input']>;
  officeDistrictCode?: InputMaybe<Scalars['String']['input']>;
  officeDistrictId?: InputMaybe<Scalars['String']['input']>;
  officePhone?: InputMaybe<Scalars['String']['input']>;
  officeProvinceCode?: InputMaybe<Scalars['String']['input']>;
  officeProvinceId?: InputMaybe<Scalars['String']['input']>;
  officeWardCode?: InputMaybe<Scalars['String']['input']>;
  officeWardId?: InputMaybe<Scalars['String']['input']>;
  officeWeb?: InputMaybe<Scalars['String']['input']>;
  officeZipcode?: InputMaybe<Scalars['String']['input']>;
  oldCode?: InputMaybe<Scalars['String']['input']>;
  proManagementUnit?: InputMaybe<Scalars['String']['input']>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  receiverAddress?: InputMaybe<Scalars['String']['input']>;
  receiverByOffice?: InputMaybe<Scalars['Int']['input']>;
  receiverDistrictCode?: InputMaybe<Scalars['String']['input']>;
  receiverDistrictId?: InputMaybe<Scalars['String']['input']>;
  receiverEmail?: InputMaybe<Scalars['String']['input']>;
  receiverEmailElecInvo?: InputMaybe<Scalars['String']['input']>;
  receiverIdDate?: InputMaybe<Scalars['String']['input']>;
  receiverIdNo?: InputMaybe<Scalars['String']['input']>;
  receiverName?: InputMaybe<Scalars['String']['input']>;
  receiverPhone?: InputMaybe<Scalars['String']['input']>;
  receiverProvinceCode?: InputMaybe<Scalars['String']['input']>;
  receiverWardCode?: InputMaybe<Scalars['String']['input']>;
  receiverWardId?: InputMaybe<Scalars['String']['input']>;
  receiverZipcode?: InputMaybe<Scalars['String']['input']>;
  repEmail?: InputMaybe<Scalars['String']['input']>;
  repFullName?: InputMaybe<Scalars['String']['input']>;
  repIdCountryCode?: InputMaybe<Scalars['String']['input']>;
  repIdDate?: InputMaybe<Scalars['String']['input']>;
  repIdNo?: InputMaybe<Scalars['String']['input']>;
  repIdType?: InputMaybe<Scalars['String']['input']>;
  repPhone?: InputMaybe<Scalars['String']['input']>;
  repPosition?: InputMaybe<Scalars['String']['input']>;
  taxCode?: InputMaybe<Scalars['String']['input']>;
  taxCodeStatus?: InputMaybe<Scalars['String']['input']>;
  taxDate?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type OrganizationCreateManyReceiverProvinceInputEnvelope = {
  data: Array<OrganizationCreateManyReceiverProvinceInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type OrganizationCreateManyReceiverWardInput = {
  accountingType?: InputMaybe<Scalars['String']['input']>;
  agencyName?: InputMaybe<Scalars['String']['input']>;
  authenType?: InputMaybe<Scalars['Int']['input']>;
  briefName?: InputMaybe<Scalars['String']['input']>;
  budgetCode?: InputMaybe<Scalars['String']['input']>;
  businessStatus?: InputMaybe<Scalars['String']['input']>;
  businessTypeCode?: InputMaybe<Scalars['String']['input']>;
  businessTypeId?: InputMaybe<Scalars['String']['input']>;
  caRegister?: InputMaybe<Scalars['Boolean']['input']>;
  chapterCode?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  enName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  isAgencies?: InputMaybe<Scalars['Int']['input']>;
  isBidderInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isBidderInvite?: InputMaybe<Scalars['Boolean']['input']>;
  isBiddingFacility?: InputMaybe<Scalars['Boolean']['input']>;
  isCompetentAuthorities?: InputMaybe<Scalars['Boolean']['input']>;
  isContractor?: InputMaybe<Scalars['Boolean']['input']>;
  isForeignInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isPlanInvest?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  officeAddress?: InputMaybe<Scalars['String']['input']>;
  officeDistrictCode?: InputMaybe<Scalars['String']['input']>;
  officeDistrictId?: InputMaybe<Scalars['String']['input']>;
  officePhone?: InputMaybe<Scalars['String']['input']>;
  officeProvinceCode?: InputMaybe<Scalars['String']['input']>;
  officeProvinceId?: InputMaybe<Scalars['String']['input']>;
  officeWardCode?: InputMaybe<Scalars['String']['input']>;
  officeWardId?: InputMaybe<Scalars['String']['input']>;
  officeWeb?: InputMaybe<Scalars['String']['input']>;
  officeZipcode?: InputMaybe<Scalars['String']['input']>;
  oldCode?: InputMaybe<Scalars['String']['input']>;
  proManagementUnit?: InputMaybe<Scalars['String']['input']>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  receiverAddress?: InputMaybe<Scalars['String']['input']>;
  receiverByOffice?: InputMaybe<Scalars['Int']['input']>;
  receiverDistrictCode?: InputMaybe<Scalars['String']['input']>;
  receiverDistrictId?: InputMaybe<Scalars['String']['input']>;
  receiverEmail?: InputMaybe<Scalars['String']['input']>;
  receiverEmailElecInvo?: InputMaybe<Scalars['String']['input']>;
  receiverIdDate?: InputMaybe<Scalars['String']['input']>;
  receiverIdNo?: InputMaybe<Scalars['String']['input']>;
  receiverName?: InputMaybe<Scalars['String']['input']>;
  receiverPhone?: InputMaybe<Scalars['String']['input']>;
  receiverProvinceCode?: InputMaybe<Scalars['String']['input']>;
  receiverProvinceId?: InputMaybe<Scalars['String']['input']>;
  receiverWardCode?: InputMaybe<Scalars['String']['input']>;
  receiverZipcode?: InputMaybe<Scalars['String']['input']>;
  repEmail?: InputMaybe<Scalars['String']['input']>;
  repFullName?: InputMaybe<Scalars['String']['input']>;
  repIdCountryCode?: InputMaybe<Scalars['String']['input']>;
  repIdDate?: InputMaybe<Scalars['String']['input']>;
  repIdNo?: InputMaybe<Scalars['String']['input']>;
  repIdType?: InputMaybe<Scalars['String']['input']>;
  repPhone?: InputMaybe<Scalars['String']['input']>;
  repPosition?: InputMaybe<Scalars['String']['input']>;
  taxCode?: InputMaybe<Scalars['String']['input']>;
  taxCodeStatus?: InputMaybe<Scalars['String']['input']>;
  taxDate?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type OrganizationCreateManyReceiverWardInputEnvelope = {
  data: Array<OrganizationCreateManyReceiverWardInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type OrganizationCreateNestedManyWithoutOfficeDistrictInput = {
  connect?: InputMaybe<Array<OrganizationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<OrganizationCreateOrConnectWithoutOfficeDistrictInput>>;
  create?: InputMaybe<Array<OrganizationCreateWithoutOfficeDistrictInput>>;
  createMany?: InputMaybe<OrganizationCreateManyOfficeDistrictInputEnvelope>;
};

export type OrganizationCreateNestedManyWithoutOfficeProvinceInput = {
  connect?: InputMaybe<Array<OrganizationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<OrganizationCreateOrConnectWithoutOfficeProvinceInput>>;
  create?: InputMaybe<Array<OrganizationCreateWithoutOfficeProvinceInput>>;
  createMany?: InputMaybe<OrganizationCreateManyOfficeProvinceInputEnvelope>;
};

export type OrganizationCreateNestedManyWithoutOfficeWardInput = {
  connect?: InputMaybe<Array<OrganizationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<OrganizationCreateOrConnectWithoutOfficeWardInput>>;
  create?: InputMaybe<Array<OrganizationCreateWithoutOfficeWardInput>>;
  createMany?: InputMaybe<OrganizationCreateManyOfficeWardInputEnvelope>;
};

export type OrganizationCreateNestedManyWithoutReceiverDistrictInput = {
  connect?: InputMaybe<Array<OrganizationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<OrganizationCreateOrConnectWithoutReceiverDistrictInput>>;
  create?: InputMaybe<Array<OrganizationCreateWithoutReceiverDistrictInput>>;
  createMany?: InputMaybe<OrganizationCreateManyReceiverDistrictInputEnvelope>;
};

export type OrganizationCreateNestedManyWithoutReceiverProvinceInput = {
  connect?: InputMaybe<Array<OrganizationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<OrganizationCreateOrConnectWithoutReceiverProvinceInput>>;
  create?: InputMaybe<Array<OrganizationCreateWithoutReceiverProvinceInput>>;
  createMany?: InputMaybe<OrganizationCreateManyReceiverProvinceInputEnvelope>;
};

export type OrganizationCreateNestedManyWithoutReceiverWardInput = {
  connect?: InputMaybe<Array<OrganizationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<OrganizationCreateOrConnectWithoutReceiverWardInput>>;
  create?: InputMaybe<Array<OrganizationCreateWithoutReceiverWardInput>>;
  createMany?: InputMaybe<OrganizationCreateManyReceiverWardInputEnvelope>;
};

export type OrganizationCreateNestedOneWithoutBidPetitionContractorsInput = {
  connect?: InputMaybe<OrganizationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrganizationCreateOrConnectWithoutBidPetitionContractorsInput>;
  create?: InputMaybe<OrganizationCreateWithoutBidPetitionContractorsInput>;
};

export type OrganizationCreateNestedOneWithoutChapterFilesInput = {
  connect?: InputMaybe<OrganizationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrganizationCreateOrConnectWithoutChapterFilesInput>;
  create?: InputMaybe<OrganizationCreateWithoutChapterFilesInput>;
};

export type OrganizationCreateNestedOneWithoutInvestorBidNotificationsInput = {
  connect?: InputMaybe<OrganizationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrganizationCreateOrConnectWithoutInvestorBidNotificationsInput>;
  create?: InputMaybe<OrganizationCreateWithoutInvestorBidNotificationsInput>;
};

export type OrganizationCreateNestedOneWithoutInvestorBidSelectionPlansInput = {
  connect?: InputMaybe<OrganizationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrganizationCreateOrConnectWithoutInvestorBidSelectionPlansInput>;
  create?: InputMaybe<OrganizationCreateWithoutInvestorBidSelectionPlansInput>;
};

export type OrganizationCreateNestedOneWithoutNotificationContractorsInput = {
  connect?: InputMaybe<OrganizationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrganizationCreateOrConnectWithoutNotificationContractorsInput>;
  create?: InputMaybe<OrganizationCreateWithoutNotificationContractorsInput>;
};

export type OrganizationCreateNestedOneWithoutOrganizationBusinessInput = {
  connect?: InputMaybe<OrganizationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrganizationCreateOrConnectWithoutOrganizationBusinessInput>;
  create?: InputMaybe<OrganizationCreateWithoutOrganizationBusinessInput>;
};

export type OrganizationCreateNestedOneWithoutProcuringEntitiesInput = {
  connect?: InputMaybe<OrganizationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrganizationCreateOrConnectWithoutProcuringEntitiesInput>;
  create?: InputMaybe<OrganizationCreateWithoutProcuringEntitiesInput>;
};

export type OrganizationCreateNestedOneWithoutProcuringEntityBidSelectionPlansInput = {
  connect?: InputMaybe<OrganizationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrganizationCreateOrConnectWithoutProcuringEntityBidSelectionPlansInput>;
  create?: InputMaybe<OrganizationCreateWithoutProcuringEntityBidSelectionPlansInput>;
};

export type OrganizationCreateNestedOneWithoutProjectsInput = {
  connect?: InputMaybe<OrganizationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrganizationCreateOrConnectWithoutProjectsInput>;
  create?: InputMaybe<OrganizationCreateWithoutProjectsInput>;
};

export type OrganizationCreateOrConnectWithoutBidPetitionContractorsInput = {
  create: OrganizationCreateWithoutBidPetitionContractorsInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationCreateOrConnectWithoutChapterFilesInput = {
  create: OrganizationCreateWithoutChapterFilesInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationCreateOrConnectWithoutInvestorBidNotificationsInput = {
  create: OrganizationCreateWithoutInvestorBidNotificationsInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationCreateOrConnectWithoutInvestorBidSelectionPlansInput = {
  create: OrganizationCreateWithoutInvestorBidSelectionPlansInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationCreateOrConnectWithoutNotificationContractorsInput = {
  create: OrganizationCreateWithoutNotificationContractorsInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationCreateOrConnectWithoutOfficeDistrictInput = {
  create: OrganizationCreateWithoutOfficeDistrictInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationCreateOrConnectWithoutOfficeProvinceInput = {
  create: OrganizationCreateWithoutOfficeProvinceInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationCreateOrConnectWithoutOfficeWardInput = {
  create: OrganizationCreateWithoutOfficeWardInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationCreateOrConnectWithoutOrganizationBusinessInput = {
  create: OrganizationCreateWithoutOrganizationBusinessInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationCreateOrConnectWithoutProcuringEntitiesInput = {
  create: OrganizationCreateWithoutProcuringEntitiesInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationCreateOrConnectWithoutProcuringEntityBidSelectionPlansInput = {
  create: OrganizationCreateWithoutProcuringEntityBidSelectionPlansInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationCreateOrConnectWithoutProjectsInput = {
  create: OrganizationCreateWithoutProjectsInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationCreateOrConnectWithoutReceiverDistrictInput = {
  create: OrganizationCreateWithoutReceiverDistrictInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationCreateOrConnectWithoutReceiverProvinceInput = {
  create: OrganizationCreateWithoutReceiverProvinceInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationCreateOrConnectWithoutReceiverWardInput = {
  create: OrganizationCreateWithoutReceiverWardInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationCreateWithoutBidPetitionContractorsInput = {
  accountingType?: InputMaybe<Scalars['String']['input']>;
  agencyName?: InputMaybe<Scalars['String']['input']>;
  authenType?: InputMaybe<Scalars['Int']['input']>;
  briefName?: InputMaybe<Scalars['String']['input']>;
  budgetCode?: InputMaybe<Scalars['String']['input']>;
  businessStatus?: InputMaybe<Scalars['String']['input']>;
  businessType?: InputMaybe<CatBusinessTypeCreateNestedOneWithoutOrganizationsInput>;
  businessTypeCode?: InputMaybe<Scalars['String']['input']>;
  caRegister?: InputMaybe<Scalars['Boolean']['input']>;
  chapterCode?: InputMaybe<Scalars['String']['input']>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutProcuringEntityInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  enName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investorBidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutInvestorInput>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutInvestorInput>;
  isAgencies?: InputMaybe<Scalars['Int']['input']>;
  isBidderInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isBidderInvite?: InputMaybe<Scalars['Boolean']['input']>;
  isBiddingFacility?: InputMaybe<Scalars['Boolean']['input']>;
  isCompetentAuthorities?: InputMaybe<Scalars['Boolean']['input']>;
  isContractor?: InputMaybe<Scalars['Boolean']['input']>;
  isForeignInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isPlanInvest?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  notificationContractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutContractorInput>;
  officeAddress?: InputMaybe<Scalars['String']['input']>;
  officeDistrict?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeDistrictOrganizationsInput>;
  officeDistrictCode?: InputMaybe<Scalars['String']['input']>;
  officePhone?: InputMaybe<Scalars['String']['input']>;
  officeProvince?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeProvinceOrganizationsInput>;
  officeProvinceCode?: InputMaybe<Scalars['String']['input']>;
  officeWard?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeWardOrganizationsInput>;
  officeWardCode?: InputMaybe<Scalars['String']['input']>;
  officeWeb?: InputMaybe<Scalars['String']['input']>;
  officeZipcode?: InputMaybe<Scalars['String']['input']>;
  oldCode?: InputMaybe<Scalars['String']['input']>;
  organizationBusiness?: InputMaybe<OrganizationBusinessCreateNestedManyWithoutOrganizationInput>;
  proManagementUnit?: InputMaybe<Scalars['String']['input']>;
  procuringEntities?: InputMaybe<BidNotificationCreateNestedManyWithoutProcuringEntityInput>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutProcuringEntityInput>;
  projects?: InputMaybe<ProjectCreateNestedManyWithoutInvestorInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  receiverAddress?: InputMaybe<Scalars['String']['input']>;
  receiverByOffice?: InputMaybe<Scalars['Int']['input']>;
  receiverDistrict?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverDistrictOrganizationsInput>;
  receiverDistrictCode?: InputMaybe<Scalars['String']['input']>;
  receiverEmail?: InputMaybe<Scalars['String']['input']>;
  receiverEmailElecInvo?: InputMaybe<Scalars['String']['input']>;
  receiverIdDate?: InputMaybe<Scalars['String']['input']>;
  receiverIdNo?: InputMaybe<Scalars['String']['input']>;
  receiverName?: InputMaybe<Scalars['String']['input']>;
  receiverPhone?: InputMaybe<Scalars['String']['input']>;
  receiverProvince?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverProvinceOrganizationsInput>;
  receiverProvinceCode?: InputMaybe<Scalars['String']['input']>;
  receiverWard?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverWardOrganizationsInput>;
  receiverWardCode?: InputMaybe<Scalars['String']['input']>;
  receiverZipcode?: InputMaybe<Scalars['String']['input']>;
  repEmail?: InputMaybe<Scalars['String']['input']>;
  repFullName?: InputMaybe<Scalars['String']['input']>;
  repIdCountryCode?: InputMaybe<Scalars['String']['input']>;
  repIdDate?: InputMaybe<Scalars['String']['input']>;
  repIdNo?: InputMaybe<Scalars['String']['input']>;
  repIdType?: InputMaybe<Scalars['String']['input']>;
  repPhone?: InputMaybe<Scalars['String']['input']>;
  repPosition?: InputMaybe<Scalars['String']['input']>;
  taxCode?: InputMaybe<Scalars['String']['input']>;
  taxCodeStatus?: InputMaybe<Scalars['String']['input']>;
  taxDate?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type OrganizationCreateWithoutChapterFilesInput = {
  accountingType?: InputMaybe<Scalars['String']['input']>;
  agencyName?: InputMaybe<Scalars['String']['input']>;
  authenType?: InputMaybe<Scalars['Int']['input']>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutContractorInput>;
  briefName?: InputMaybe<Scalars['String']['input']>;
  budgetCode?: InputMaybe<Scalars['String']['input']>;
  businessStatus?: InputMaybe<Scalars['String']['input']>;
  businessType?: InputMaybe<CatBusinessTypeCreateNestedOneWithoutOrganizationsInput>;
  businessTypeCode?: InputMaybe<Scalars['String']['input']>;
  caRegister?: InputMaybe<Scalars['Boolean']['input']>;
  chapterCode?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  enName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investorBidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutInvestorInput>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutInvestorInput>;
  isAgencies?: InputMaybe<Scalars['Int']['input']>;
  isBidderInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isBidderInvite?: InputMaybe<Scalars['Boolean']['input']>;
  isBiddingFacility?: InputMaybe<Scalars['Boolean']['input']>;
  isCompetentAuthorities?: InputMaybe<Scalars['Boolean']['input']>;
  isContractor?: InputMaybe<Scalars['Boolean']['input']>;
  isForeignInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isPlanInvest?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  notificationContractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutContractorInput>;
  officeAddress?: InputMaybe<Scalars['String']['input']>;
  officeDistrict?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeDistrictOrganizationsInput>;
  officeDistrictCode?: InputMaybe<Scalars['String']['input']>;
  officePhone?: InputMaybe<Scalars['String']['input']>;
  officeProvince?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeProvinceOrganizationsInput>;
  officeProvinceCode?: InputMaybe<Scalars['String']['input']>;
  officeWard?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeWardOrganizationsInput>;
  officeWardCode?: InputMaybe<Scalars['String']['input']>;
  officeWeb?: InputMaybe<Scalars['String']['input']>;
  officeZipcode?: InputMaybe<Scalars['String']['input']>;
  oldCode?: InputMaybe<Scalars['String']['input']>;
  organizationBusiness?: InputMaybe<OrganizationBusinessCreateNestedManyWithoutOrganizationInput>;
  proManagementUnit?: InputMaybe<Scalars['String']['input']>;
  procuringEntities?: InputMaybe<BidNotificationCreateNestedManyWithoutProcuringEntityInput>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutProcuringEntityInput>;
  projects?: InputMaybe<ProjectCreateNestedManyWithoutInvestorInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  receiverAddress?: InputMaybe<Scalars['String']['input']>;
  receiverByOffice?: InputMaybe<Scalars['Int']['input']>;
  receiverDistrict?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverDistrictOrganizationsInput>;
  receiverDistrictCode?: InputMaybe<Scalars['String']['input']>;
  receiverEmail?: InputMaybe<Scalars['String']['input']>;
  receiverEmailElecInvo?: InputMaybe<Scalars['String']['input']>;
  receiverIdDate?: InputMaybe<Scalars['String']['input']>;
  receiverIdNo?: InputMaybe<Scalars['String']['input']>;
  receiverName?: InputMaybe<Scalars['String']['input']>;
  receiverPhone?: InputMaybe<Scalars['String']['input']>;
  receiverProvince?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverProvinceOrganizationsInput>;
  receiverProvinceCode?: InputMaybe<Scalars['String']['input']>;
  receiverWard?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverWardOrganizationsInput>;
  receiverWardCode?: InputMaybe<Scalars['String']['input']>;
  receiverZipcode?: InputMaybe<Scalars['String']['input']>;
  repEmail?: InputMaybe<Scalars['String']['input']>;
  repFullName?: InputMaybe<Scalars['String']['input']>;
  repIdCountryCode?: InputMaybe<Scalars['String']['input']>;
  repIdDate?: InputMaybe<Scalars['String']['input']>;
  repIdNo?: InputMaybe<Scalars['String']['input']>;
  repIdType?: InputMaybe<Scalars['String']['input']>;
  repPhone?: InputMaybe<Scalars['String']['input']>;
  repPosition?: InputMaybe<Scalars['String']['input']>;
  taxCode?: InputMaybe<Scalars['String']['input']>;
  taxCodeStatus?: InputMaybe<Scalars['String']['input']>;
  taxDate?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type OrganizationCreateWithoutInvestorBidNotificationsInput = {
  accountingType?: InputMaybe<Scalars['String']['input']>;
  agencyName?: InputMaybe<Scalars['String']['input']>;
  authenType?: InputMaybe<Scalars['Int']['input']>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutContractorInput>;
  briefName?: InputMaybe<Scalars['String']['input']>;
  budgetCode?: InputMaybe<Scalars['String']['input']>;
  businessStatus?: InputMaybe<Scalars['String']['input']>;
  businessType?: InputMaybe<CatBusinessTypeCreateNestedOneWithoutOrganizationsInput>;
  businessTypeCode?: InputMaybe<Scalars['String']['input']>;
  caRegister?: InputMaybe<Scalars['Boolean']['input']>;
  chapterCode?: InputMaybe<Scalars['String']['input']>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutProcuringEntityInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  enName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutInvestorInput>;
  isAgencies?: InputMaybe<Scalars['Int']['input']>;
  isBidderInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isBidderInvite?: InputMaybe<Scalars['Boolean']['input']>;
  isBiddingFacility?: InputMaybe<Scalars['Boolean']['input']>;
  isCompetentAuthorities?: InputMaybe<Scalars['Boolean']['input']>;
  isContractor?: InputMaybe<Scalars['Boolean']['input']>;
  isForeignInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isPlanInvest?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  notificationContractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutContractorInput>;
  officeAddress?: InputMaybe<Scalars['String']['input']>;
  officeDistrict?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeDistrictOrganizationsInput>;
  officeDistrictCode?: InputMaybe<Scalars['String']['input']>;
  officePhone?: InputMaybe<Scalars['String']['input']>;
  officeProvince?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeProvinceOrganizationsInput>;
  officeProvinceCode?: InputMaybe<Scalars['String']['input']>;
  officeWard?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeWardOrganizationsInput>;
  officeWardCode?: InputMaybe<Scalars['String']['input']>;
  officeWeb?: InputMaybe<Scalars['String']['input']>;
  officeZipcode?: InputMaybe<Scalars['String']['input']>;
  oldCode?: InputMaybe<Scalars['String']['input']>;
  organizationBusiness?: InputMaybe<OrganizationBusinessCreateNestedManyWithoutOrganizationInput>;
  proManagementUnit?: InputMaybe<Scalars['String']['input']>;
  procuringEntities?: InputMaybe<BidNotificationCreateNestedManyWithoutProcuringEntityInput>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutProcuringEntityInput>;
  projects?: InputMaybe<ProjectCreateNestedManyWithoutInvestorInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  receiverAddress?: InputMaybe<Scalars['String']['input']>;
  receiverByOffice?: InputMaybe<Scalars['Int']['input']>;
  receiverDistrict?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverDistrictOrganizationsInput>;
  receiverDistrictCode?: InputMaybe<Scalars['String']['input']>;
  receiverEmail?: InputMaybe<Scalars['String']['input']>;
  receiverEmailElecInvo?: InputMaybe<Scalars['String']['input']>;
  receiverIdDate?: InputMaybe<Scalars['String']['input']>;
  receiverIdNo?: InputMaybe<Scalars['String']['input']>;
  receiverName?: InputMaybe<Scalars['String']['input']>;
  receiverPhone?: InputMaybe<Scalars['String']['input']>;
  receiverProvince?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverProvinceOrganizationsInput>;
  receiverProvinceCode?: InputMaybe<Scalars['String']['input']>;
  receiverWard?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverWardOrganizationsInput>;
  receiverWardCode?: InputMaybe<Scalars['String']['input']>;
  receiverZipcode?: InputMaybe<Scalars['String']['input']>;
  repEmail?: InputMaybe<Scalars['String']['input']>;
  repFullName?: InputMaybe<Scalars['String']['input']>;
  repIdCountryCode?: InputMaybe<Scalars['String']['input']>;
  repIdDate?: InputMaybe<Scalars['String']['input']>;
  repIdNo?: InputMaybe<Scalars['String']['input']>;
  repIdType?: InputMaybe<Scalars['String']['input']>;
  repPhone?: InputMaybe<Scalars['String']['input']>;
  repPosition?: InputMaybe<Scalars['String']['input']>;
  taxCode?: InputMaybe<Scalars['String']['input']>;
  taxCodeStatus?: InputMaybe<Scalars['String']['input']>;
  taxDate?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type OrganizationCreateWithoutInvestorBidSelectionPlansInput = {
  accountingType?: InputMaybe<Scalars['String']['input']>;
  agencyName?: InputMaybe<Scalars['String']['input']>;
  authenType?: InputMaybe<Scalars['Int']['input']>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutContractorInput>;
  briefName?: InputMaybe<Scalars['String']['input']>;
  budgetCode?: InputMaybe<Scalars['String']['input']>;
  businessStatus?: InputMaybe<Scalars['String']['input']>;
  businessType?: InputMaybe<CatBusinessTypeCreateNestedOneWithoutOrganizationsInput>;
  businessTypeCode?: InputMaybe<Scalars['String']['input']>;
  caRegister?: InputMaybe<Scalars['Boolean']['input']>;
  chapterCode?: InputMaybe<Scalars['String']['input']>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutProcuringEntityInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  enName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investorBidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutInvestorInput>;
  isAgencies?: InputMaybe<Scalars['Int']['input']>;
  isBidderInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isBidderInvite?: InputMaybe<Scalars['Boolean']['input']>;
  isBiddingFacility?: InputMaybe<Scalars['Boolean']['input']>;
  isCompetentAuthorities?: InputMaybe<Scalars['Boolean']['input']>;
  isContractor?: InputMaybe<Scalars['Boolean']['input']>;
  isForeignInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isPlanInvest?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  notificationContractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutContractorInput>;
  officeAddress?: InputMaybe<Scalars['String']['input']>;
  officeDistrict?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeDistrictOrganizationsInput>;
  officeDistrictCode?: InputMaybe<Scalars['String']['input']>;
  officePhone?: InputMaybe<Scalars['String']['input']>;
  officeProvince?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeProvinceOrganizationsInput>;
  officeProvinceCode?: InputMaybe<Scalars['String']['input']>;
  officeWard?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeWardOrganizationsInput>;
  officeWardCode?: InputMaybe<Scalars['String']['input']>;
  officeWeb?: InputMaybe<Scalars['String']['input']>;
  officeZipcode?: InputMaybe<Scalars['String']['input']>;
  oldCode?: InputMaybe<Scalars['String']['input']>;
  organizationBusiness?: InputMaybe<OrganizationBusinessCreateNestedManyWithoutOrganizationInput>;
  proManagementUnit?: InputMaybe<Scalars['String']['input']>;
  procuringEntities?: InputMaybe<BidNotificationCreateNestedManyWithoutProcuringEntityInput>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutProcuringEntityInput>;
  projects?: InputMaybe<ProjectCreateNestedManyWithoutInvestorInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  receiverAddress?: InputMaybe<Scalars['String']['input']>;
  receiverByOffice?: InputMaybe<Scalars['Int']['input']>;
  receiverDistrict?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverDistrictOrganizationsInput>;
  receiverDistrictCode?: InputMaybe<Scalars['String']['input']>;
  receiverEmail?: InputMaybe<Scalars['String']['input']>;
  receiverEmailElecInvo?: InputMaybe<Scalars['String']['input']>;
  receiverIdDate?: InputMaybe<Scalars['String']['input']>;
  receiverIdNo?: InputMaybe<Scalars['String']['input']>;
  receiverName?: InputMaybe<Scalars['String']['input']>;
  receiverPhone?: InputMaybe<Scalars['String']['input']>;
  receiverProvince?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverProvinceOrganizationsInput>;
  receiverProvinceCode?: InputMaybe<Scalars['String']['input']>;
  receiverWard?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverWardOrganizationsInput>;
  receiverWardCode?: InputMaybe<Scalars['String']['input']>;
  receiverZipcode?: InputMaybe<Scalars['String']['input']>;
  repEmail?: InputMaybe<Scalars['String']['input']>;
  repFullName?: InputMaybe<Scalars['String']['input']>;
  repIdCountryCode?: InputMaybe<Scalars['String']['input']>;
  repIdDate?: InputMaybe<Scalars['String']['input']>;
  repIdNo?: InputMaybe<Scalars['String']['input']>;
  repIdType?: InputMaybe<Scalars['String']['input']>;
  repPhone?: InputMaybe<Scalars['String']['input']>;
  repPosition?: InputMaybe<Scalars['String']['input']>;
  taxCode?: InputMaybe<Scalars['String']['input']>;
  taxCodeStatus?: InputMaybe<Scalars['String']['input']>;
  taxDate?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type OrganizationCreateWithoutNotificationContractorsInput = {
  accountingType?: InputMaybe<Scalars['String']['input']>;
  agencyName?: InputMaybe<Scalars['String']['input']>;
  authenType?: InputMaybe<Scalars['Int']['input']>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutContractorInput>;
  briefName?: InputMaybe<Scalars['String']['input']>;
  budgetCode?: InputMaybe<Scalars['String']['input']>;
  businessStatus?: InputMaybe<Scalars['String']['input']>;
  businessType?: InputMaybe<CatBusinessTypeCreateNestedOneWithoutOrganizationsInput>;
  businessTypeCode?: InputMaybe<Scalars['String']['input']>;
  caRegister?: InputMaybe<Scalars['Boolean']['input']>;
  chapterCode?: InputMaybe<Scalars['String']['input']>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutProcuringEntityInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  enName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investorBidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutInvestorInput>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutInvestorInput>;
  isAgencies?: InputMaybe<Scalars['Int']['input']>;
  isBidderInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isBidderInvite?: InputMaybe<Scalars['Boolean']['input']>;
  isBiddingFacility?: InputMaybe<Scalars['Boolean']['input']>;
  isCompetentAuthorities?: InputMaybe<Scalars['Boolean']['input']>;
  isContractor?: InputMaybe<Scalars['Boolean']['input']>;
  isForeignInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isPlanInvest?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  officeAddress?: InputMaybe<Scalars['String']['input']>;
  officeDistrict?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeDistrictOrganizationsInput>;
  officeDistrictCode?: InputMaybe<Scalars['String']['input']>;
  officePhone?: InputMaybe<Scalars['String']['input']>;
  officeProvince?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeProvinceOrganizationsInput>;
  officeProvinceCode?: InputMaybe<Scalars['String']['input']>;
  officeWard?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeWardOrganizationsInput>;
  officeWardCode?: InputMaybe<Scalars['String']['input']>;
  officeWeb?: InputMaybe<Scalars['String']['input']>;
  officeZipcode?: InputMaybe<Scalars['String']['input']>;
  oldCode?: InputMaybe<Scalars['String']['input']>;
  organizationBusiness?: InputMaybe<OrganizationBusinessCreateNestedManyWithoutOrganizationInput>;
  proManagementUnit?: InputMaybe<Scalars['String']['input']>;
  procuringEntities?: InputMaybe<BidNotificationCreateNestedManyWithoutProcuringEntityInput>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutProcuringEntityInput>;
  projects?: InputMaybe<ProjectCreateNestedManyWithoutInvestorInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  receiverAddress?: InputMaybe<Scalars['String']['input']>;
  receiverByOffice?: InputMaybe<Scalars['Int']['input']>;
  receiverDistrict?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverDistrictOrganizationsInput>;
  receiverDistrictCode?: InputMaybe<Scalars['String']['input']>;
  receiverEmail?: InputMaybe<Scalars['String']['input']>;
  receiverEmailElecInvo?: InputMaybe<Scalars['String']['input']>;
  receiverIdDate?: InputMaybe<Scalars['String']['input']>;
  receiverIdNo?: InputMaybe<Scalars['String']['input']>;
  receiverName?: InputMaybe<Scalars['String']['input']>;
  receiverPhone?: InputMaybe<Scalars['String']['input']>;
  receiverProvince?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverProvinceOrganizationsInput>;
  receiverProvinceCode?: InputMaybe<Scalars['String']['input']>;
  receiverWard?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverWardOrganizationsInput>;
  receiverWardCode?: InputMaybe<Scalars['String']['input']>;
  receiverZipcode?: InputMaybe<Scalars['String']['input']>;
  repEmail?: InputMaybe<Scalars['String']['input']>;
  repFullName?: InputMaybe<Scalars['String']['input']>;
  repIdCountryCode?: InputMaybe<Scalars['String']['input']>;
  repIdDate?: InputMaybe<Scalars['String']['input']>;
  repIdNo?: InputMaybe<Scalars['String']['input']>;
  repIdType?: InputMaybe<Scalars['String']['input']>;
  repPhone?: InputMaybe<Scalars['String']['input']>;
  repPosition?: InputMaybe<Scalars['String']['input']>;
  taxCode?: InputMaybe<Scalars['String']['input']>;
  taxCodeStatus?: InputMaybe<Scalars['String']['input']>;
  taxDate?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type OrganizationCreateWithoutOfficeDistrictInput = {
  accountingType?: InputMaybe<Scalars['String']['input']>;
  agencyName?: InputMaybe<Scalars['String']['input']>;
  authenType?: InputMaybe<Scalars['Int']['input']>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutContractorInput>;
  briefName?: InputMaybe<Scalars['String']['input']>;
  budgetCode?: InputMaybe<Scalars['String']['input']>;
  businessStatus?: InputMaybe<Scalars['String']['input']>;
  businessType?: InputMaybe<CatBusinessTypeCreateNestedOneWithoutOrganizationsInput>;
  businessTypeCode?: InputMaybe<Scalars['String']['input']>;
  caRegister?: InputMaybe<Scalars['Boolean']['input']>;
  chapterCode?: InputMaybe<Scalars['String']['input']>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutProcuringEntityInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  enName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investorBidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutInvestorInput>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutInvestorInput>;
  isAgencies?: InputMaybe<Scalars['Int']['input']>;
  isBidderInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isBidderInvite?: InputMaybe<Scalars['Boolean']['input']>;
  isBiddingFacility?: InputMaybe<Scalars['Boolean']['input']>;
  isCompetentAuthorities?: InputMaybe<Scalars['Boolean']['input']>;
  isContractor?: InputMaybe<Scalars['Boolean']['input']>;
  isForeignInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isPlanInvest?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  notificationContractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutContractorInput>;
  officeAddress?: InputMaybe<Scalars['String']['input']>;
  officeDistrictCode?: InputMaybe<Scalars['String']['input']>;
  officePhone?: InputMaybe<Scalars['String']['input']>;
  officeProvince?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeProvinceOrganizationsInput>;
  officeProvinceCode?: InputMaybe<Scalars['String']['input']>;
  officeWard?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeWardOrganizationsInput>;
  officeWardCode?: InputMaybe<Scalars['String']['input']>;
  officeWeb?: InputMaybe<Scalars['String']['input']>;
  officeZipcode?: InputMaybe<Scalars['String']['input']>;
  oldCode?: InputMaybe<Scalars['String']['input']>;
  organizationBusiness?: InputMaybe<OrganizationBusinessCreateNestedManyWithoutOrganizationInput>;
  proManagementUnit?: InputMaybe<Scalars['String']['input']>;
  procuringEntities?: InputMaybe<BidNotificationCreateNestedManyWithoutProcuringEntityInput>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutProcuringEntityInput>;
  projects?: InputMaybe<ProjectCreateNestedManyWithoutInvestorInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  receiverAddress?: InputMaybe<Scalars['String']['input']>;
  receiverByOffice?: InputMaybe<Scalars['Int']['input']>;
  receiverDistrict?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverDistrictOrganizationsInput>;
  receiverDistrictCode?: InputMaybe<Scalars['String']['input']>;
  receiverEmail?: InputMaybe<Scalars['String']['input']>;
  receiverEmailElecInvo?: InputMaybe<Scalars['String']['input']>;
  receiverIdDate?: InputMaybe<Scalars['String']['input']>;
  receiverIdNo?: InputMaybe<Scalars['String']['input']>;
  receiverName?: InputMaybe<Scalars['String']['input']>;
  receiverPhone?: InputMaybe<Scalars['String']['input']>;
  receiverProvince?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverProvinceOrganizationsInput>;
  receiverProvinceCode?: InputMaybe<Scalars['String']['input']>;
  receiverWard?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverWardOrganizationsInput>;
  receiverWardCode?: InputMaybe<Scalars['String']['input']>;
  receiverZipcode?: InputMaybe<Scalars['String']['input']>;
  repEmail?: InputMaybe<Scalars['String']['input']>;
  repFullName?: InputMaybe<Scalars['String']['input']>;
  repIdCountryCode?: InputMaybe<Scalars['String']['input']>;
  repIdDate?: InputMaybe<Scalars['String']['input']>;
  repIdNo?: InputMaybe<Scalars['String']['input']>;
  repIdType?: InputMaybe<Scalars['String']['input']>;
  repPhone?: InputMaybe<Scalars['String']['input']>;
  repPosition?: InputMaybe<Scalars['String']['input']>;
  taxCode?: InputMaybe<Scalars['String']['input']>;
  taxCodeStatus?: InputMaybe<Scalars['String']['input']>;
  taxDate?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type OrganizationCreateWithoutOfficeProvinceInput = {
  accountingType?: InputMaybe<Scalars['String']['input']>;
  agencyName?: InputMaybe<Scalars['String']['input']>;
  authenType?: InputMaybe<Scalars['Int']['input']>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutContractorInput>;
  briefName?: InputMaybe<Scalars['String']['input']>;
  budgetCode?: InputMaybe<Scalars['String']['input']>;
  businessStatus?: InputMaybe<Scalars['String']['input']>;
  businessType?: InputMaybe<CatBusinessTypeCreateNestedOneWithoutOrganizationsInput>;
  businessTypeCode?: InputMaybe<Scalars['String']['input']>;
  caRegister?: InputMaybe<Scalars['Boolean']['input']>;
  chapterCode?: InputMaybe<Scalars['String']['input']>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutProcuringEntityInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  enName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investorBidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutInvestorInput>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutInvestorInput>;
  isAgencies?: InputMaybe<Scalars['Int']['input']>;
  isBidderInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isBidderInvite?: InputMaybe<Scalars['Boolean']['input']>;
  isBiddingFacility?: InputMaybe<Scalars['Boolean']['input']>;
  isCompetentAuthorities?: InputMaybe<Scalars['Boolean']['input']>;
  isContractor?: InputMaybe<Scalars['Boolean']['input']>;
  isForeignInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isPlanInvest?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  notificationContractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutContractorInput>;
  officeAddress?: InputMaybe<Scalars['String']['input']>;
  officeDistrict?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeDistrictOrganizationsInput>;
  officeDistrictCode?: InputMaybe<Scalars['String']['input']>;
  officePhone?: InputMaybe<Scalars['String']['input']>;
  officeProvinceCode?: InputMaybe<Scalars['String']['input']>;
  officeWard?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeWardOrganizationsInput>;
  officeWardCode?: InputMaybe<Scalars['String']['input']>;
  officeWeb?: InputMaybe<Scalars['String']['input']>;
  officeZipcode?: InputMaybe<Scalars['String']['input']>;
  oldCode?: InputMaybe<Scalars['String']['input']>;
  organizationBusiness?: InputMaybe<OrganizationBusinessCreateNestedManyWithoutOrganizationInput>;
  proManagementUnit?: InputMaybe<Scalars['String']['input']>;
  procuringEntities?: InputMaybe<BidNotificationCreateNestedManyWithoutProcuringEntityInput>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutProcuringEntityInput>;
  projects?: InputMaybe<ProjectCreateNestedManyWithoutInvestorInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  receiverAddress?: InputMaybe<Scalars['String']['input']>;
  receiverByOffice?: InputMaybe<Scalars['Int']['input']>;
  receiverDistrict?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverDistrictOrganizationsInput>;
  receiverDistrictCode?: InputMaybe<Scalars['String']['input']>;
  receiverEmail?: InputMaybe<Scalars['String']['input']>;
  receiverEmailElecInvo?: InputMaybe<Scalars['String']['input']>;
  receiverIdDate?: InputMaybe<Scalars['String']['input']>;
  receiverIdNo?: InputMaybe<Scalars['String']['input']>;
  receiverName?: InputMaybe<Scalars['String']['input']>;
  receiverPhone?: InputMaybe<Scalars['String']['input']>;
  receiverProvince?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverProvinceOrganizationsInput>;
  receiverProvinceCode?: InputMaybe<Scalars['String']['input']>;
  receiverWard?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverWardOrganizationsInput>;
  receiverWardCode?: InputMaybe<Scalars['String']['input']>;
  receiverZipcode?: InputMaybe<Scalars['String']['input']>;
  repEmail?: InputMaybe<Scalars['String']['input']>;
  repFullName?: InputMaybe<Scalars['String']['input']>;
  repIdCountryCode?: InputMaybe<Scalars['String']['input']>;
  repIdDate?: InputMaybe<Scalars['String']['input']>;
  repIdNo?: InputMaybe<Scalars['String']['input']>;
  repIdType?: InputMaybe<Scalars['String']['input']>;
  repPhone?: InputMaybe<Scalars['String']['input']>;
  repPosition?: InputMaybe<Scalars['String']['input']>;
  taxCode?: InputMaybe<Scalars['String']['input']>;
  taxCodeStatus?: InputMaybe<Scalars['String']['input']>;
  taxDate?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type OrganizationCreateWithoutOfficeWardInput = {
  accountingType?: InputMaybe<Scalars['String']['input']>;
  agencyName?: InputMaybe<Scalars['String']['input']>;
  authenType?: InputMaybe<Scalars['Int']['input']>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutContractorInput>;
  briefName?: InputMaybe<Scalars['String']['input']>;
  budgetCode?: InputMaybe<Scalars['String']['input']>;
  businessStatus?: InputMaybe<Scalars['String']['input']>;
  businessType?: InputMaybe<CatBusinessTypeCreateNestedOneWithoutOrganizationsInput>;
  businessTypeCode?: InputMaybe<Scalars['String']['input']>;
  caRegister?: InputMaybe<Scalars['Boolean']['input']>;
  chapterCode?: InputMaybe<Scalars['String']['input']>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutProcuringEntityInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  enName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investorBidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutInvestorInput>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutInvestorInput>;
  isAgencies?: InputMaybe<Scalars['Int']['input']>;
  isBidderInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isBidderInvite?: InputMaybe<Scalars['Boolean']['input']>;
  isBiddingFacility?: InputMaybe<Scalars['Boolean']['input']>;
  isCompetentAuthorities?: InputMaybe<Scalars['Boolean']['input']>;
  isContractor?: InputMaybe<Scalars['Boolean']['input']>;
  isForeignInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isPlanInvest?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  notificationContractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutContractorInput>;
  officeAddress?: InputMaybe<Scalars['String']['input']>;
  officeDistrict?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeDistrictOrganizationsInput>;
  officeDistrictCode?: InputMaybe<Scalars['String']['input']>;
  officePhone?: InputMaybe<Scalars['String']['input']>;
  officeProvince?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeProvinceOrganizationsInput>;
  officeProvinceCode?: InputMaybe<Scalars['String']['input']>;
  officeWardCode?: InputMaybe<Scalars['String']['input']>;
  officeWeb?: InputMaybe<Scalars['String']['input']>;
  officeZipcode?: InputMaybe<Scalars['String']['input']>;
  oldCode?: InputMaybe<Scalars['String']['input']>;
  organizationBusiness?: InputMaybe<OrganizationBusinessCreateNestedManyWithoutOrganizationInput>;
  proManagementUnit?: InputMaybe<Scalars['String']['input']>;
  procuringEntities?: InputMaybe<BidNotificationCreateNestedManyWithoutProcuringEntityInput>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutProcuringEntityInput>;
  projects?: InputMaybe<ProjectCreateNestedManyWithoutInvestorInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  receiverAddress?: InputMaybe<Scalars['String']['input']>;
  receiverByOffice?: InputMaybe<Scalars['Int']['input']>;
  receiverDistrict?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverDistrictOrganizationsInput>;
  receiverDistrictCode?: InputMaybe<Scalars['String']['input']>;
  receiverEmail?: InputMaybe<Scalars['String']['input']>;
  receiverEmailElecInvo?: InputMaybe<Scalars['String']['input']>;
  receiverIdDate?: InputMaybe<Scalars['String']['input']>;
  receiverIdNo?: InputMaybe<Scalars['String']['input']>;
  receiverName?: InputMaybe<Scalars['String']['input']>;
  receiverPhone?: InputMaybe<Scalars['String']['input']>;
  receiverProvince?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverProvinceOrganizationsInput>;
  receiverProvinceCode?: InputMaybe<Scalars['String']['input']>;
  receiverWard?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverWardOrganizationsInput>;
  receiverWardCode?: InputMaybe<Scalars['String']['input']>;
  receiverZipcode?: InputMaybe<Scalars['String']['input']>;
  repEmail?: InputMaybe<Scalars['String']['input']>;
  repFullName?: InputMaybe<Scalars['String']['input']>;
  repIdCountryCode?: InputMaybe<Scalars['String']['input']>;
  repIdDate?: InputMaybe<Scalars['String']['input']>;
  repIdNo?: InputMaybe<Scalars['String']['input']>;
  repIdType?: InputMaybe<Scalars['String']['input']>;
  repPhone?: InputMaybe<Scalars['String']['input']>;
  repPosition?: InputMaybe<Scalars['String']['input']>;
  taxCode?: InputMaybe<Scalars['String']['input']>;
  taxCodeStatus?: InputMaybe<Scalars['String']['input']>;
  taxDate?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type OrganizationCreateWithoutOrganizationBusinessInput = {
  accountingType?: InputMaybe<Scalars['String']['input']>;
  agencyName?: InputMaybe<Scalars['String']['input']>;
  authenType?: InputMaybe<Scalars['Int']['input']>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutContractorInput>;
  briefName?: InputMaybe<Scalars['String']['input']>;
  budgetCode?: InputMaybe<Scalars['String']['input']>;
  businessStatus?: InputMaybe<Scalars['String']['input']>;
  businessType?: InputMaybe<CatBusinessTypeCreateNestedOneWithoutOrganizationsInput>;
  businessTypeCode?: InputMaybe<Scalars['String']['input']>;
  caRegister?: InputMaybe<Scalars['Boolean']['input']>;
  chapterCode?: InputMaybe<Scalars['String']['input']>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutProcuringEntityInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  enName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investorBidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutInvestorInput>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutInvestorInput>;
  isAgencies?: InputMaybe<Scalars['Int']['input']>;
  isBidderInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isBidderInvite?: InputMaybe<Scalars['Boolean']['input']>;
  isBiddingFacility?: InputMaybe<Scalars['Boolean']['input']>;
  isCompetentAuthorities?: InputMaybe<Scalars['Boolean']['input']>;
  isContractor?: InputMaybe<Scalars['Boolean']['input']>;
  isForeignInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isPlanInvest?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  notificationContractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutContractorInput>;
  officeAddress?: InputMaybe<Scalars['String']['input']>;
  officeDistrict?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeDistrictOrganizationsInput>;
  officeDistrictCode?: InputMaybe<Scalars['String']['input']>;
  officePhone?: InputMaybe<Scalars['String']['input']>;
  officeProvince?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeProvinceOrganizationsInput>;
  officeProvinceCode?: InputMaybe<Scalars['String']['input']>;
  officeWard?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeWardOrganizationsInput>;
  officeWardCode?: InputMaybe<Scalars['String']['input']>;
  officeWeb?: InputMaybe<Scalars['String']['input']>;
  officeZipcode?: InputMaybe<Scalars['String']['input']>;
  oldCode?: InputMaybe<Scalars['String']['input']>;
  proManagementUnit?: InputMaybe<Scalars['String']['input']>;
  procuringEntities?: InputMaybe<BidNotificationCreateNestedManyWithoutProcuringEntityInput>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutProcuringEntityInput>;
  projects?: InputMaybe<ProjectCreateNestedManyWithoutInvestorInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  receiverAddress?: InputMaybe<Scalars['String']['input']>;
  receiverByOffice?: InputMaybe<Scalars['Int']['input']>;
  receiverDistrict?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverDistrictOrganizationsInput>;
  receiverDistrictCode?: InputMaybe<Scalars['String']['input']>;
  receiverEmail?: InputMaybe<Scalars['String']['input']>;
  receiverEmailElecInvo?: InputMaybe<Scalars['String']['input']>;
  receiverIdDate?: InputMaybe<Scalars['String']['input']>;
  receiverIdNo?: InputMaybe<Scalars['String']['input']>;
  receiverName?: InputMaybe<Scalars['String']['input']>;
  receiverPhone?: InputMaybe<Scalars['String']['input']>;
  receiverProvince?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverProvinceOrganizationsInput>;
  receiverProvinceCode?: InputMaybe<Scalars['String']['input']>;
  receiverWard?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverWardOrganizationsInput>;
  receiverWardCode?: InputMaybe<Scalars['String']['input']>;
  receiverZipcode?: InputMaybe<Scalars['String']['input']>;
  repEmail?: InputMaybe<Scalars['String']['input']>;
  repFullName?: InputMaybe<Scalars['String']['input']>;
  repIdCountryCode?: InputMaybe<Scalars['String']['input']>;
  repIdDate?: InputMaybe<Scalars['String']['input']>;
  repIdNo?: InputMaybe<Scalars['String']['input']>;
  repIdType?: InputMaybe<Scalars['String']['input']>;
  repPhone?: InputMaybe<Scalars['String']['input']>;
  repPosition?: InputMaybe<Scalars['String']['input']>;
  taxCode?: InputMaybe<Scalars['String']['input']>;
  taxCodeStatus?: InputMaybe<Scalars['String']['input']>;
  taxDate?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type OrganizationCreateWithoutProcuringEntitiesInput = {
  accountingType?: InputMaybe<Scalars['String']['input']>;
  agencyName?: InputMaybe<Scalars['String']['input']>;
  authenType?: InputMaybe<Scalars['Int']['input']>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutContractorInput>;
  briefName?: InputMaybe<Scalars['String']['input']>;
  budgetCode?: InputMaybe<Scalars['String']['input']>;
  businessStatus?: InputMaybe<Scalars['String']['input']>;
  businessType?: InputMaybe<CatBusinessTypeCreateNestedOneWithoutOrganizationsInput>;
  businessTypeCode?: InputMaybe<Scalars['String']['input']>;
  caRegister?: InputMaybe<Scalars['Boolean']['input']>;
  chapterCode?: InputMaybe<Scalars['String']['input']>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutProcuringEntityInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  enName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investorBidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutInvestorInput>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutInvestorInput>;
  isAgencies?: InputMaybe<Scalars['Int']['input']>;
  isBidderInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isBidderInvite?: InputMaybe<Scalars['Boolean']['input']>;
  isBiddingFacility?: InputMaybe<Scalars['Boolean']['input']>;
  isCompetentAuthorities?: InputMaybe<Scalars['Boolean']['input']>;
  isContractor?: InputMaybe<Scalars['Boolean']['input']>;
  isForeignInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isPlanInvest?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  notificationContractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutContractorInput>;
  officeAddress?: InputMaybe<Scalars['String']['input']>;
  officeDistrict?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeDistrictOrganizationsInput>;
  officeDistrictCode?: InputMaybe<Scalars['String']['input']>;
  officePhone?: InputMaybe<Scalars['String']['input']>;
  officeProvince?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeProvinceOrganizationsInput>;
  officeProvinceCode?: InputMaybe<Scalars['String']['input']>;
  officeWard?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeWardOrganizationsInput>;
  officeWardCode?: InputMaybe<Scalars['String']['input']>;
  officeWeb?: InputMaybe<Scalars['String']['input']>;
  officeZipcode?: InputMaybe<Scalars['String']['input']>;
  oldCode?: InputMaybe<Scalars['String']['input']>;
  organizationBusiness?: InputMaybe<OrganizationBusinessCreateNestedManyWithoutOrganizationInput>;
  proManagementUnit?: InputMaybe<Scalars['String']['input']>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutProcuringEntityInput>;
  projects?: InputMaybe<ProjectCreateNestedManyWithoutInvestorInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  receiverAddress?: InputMaybe<Scalars['String']['input']>;
  receiverByOffice?: InputMaybe<Scalars['Int']['input']>;
  receiverDistrict?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverDistrictOrganizationsInput>;
  receiverDistrictCode?: InputMaybe<Scalars['String']['input']>;
  receiverEmail?: InputMaybe<Scalars['String']['input']>;
  receiverEmailElecInvo?: InputMaybe<Scalars['String']['input']>;
  receiverIdDate?: InputMaybe<Scalars['String']['input']>;
  receiverIdNo?: InputMaybe<Scalars['String']['input']>;
  receiverName?: InputMaybe<Scalars['String']['input']>;
  receiverPhone?: InputMaybe<Scalars['String']['input']>;
  receiverProvince?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverProvinceOrganizationsInput>;
  receiverProvinceCode?: InputMaybe<Scalars['String']['input']>;
  receiverWard?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverWardOrganizationsInput>;
  receiverWardCode?: InputMaybe<Scalars['String']['input']>;
  receiverZipcode?: InputMaybe<Scalars['String']['input']>;
  repEmail?: InputMaybe<Scalars['String']['input']>;
  repFullName?: InputMaybe<Scalars['String']['input']>;
  repIdCountryCode?: InputMaybe<Scalars['String']['input']>;
  repIdDate?: InputMaybe<Scalars['String']['input']>;
  repIdNo?: InputMaybe<Scalars['String']['input']>;
  repIdType?: InputMaybe<Scalars['String']['input']>;
  repPhone?: InputMaybe<Scalars['String']['input']>;
  repPosition?: InputMaybe<Scalars['String']['input']>;
  taxCode?: InputMaybe<Scalars['String']['input']>;
  taxCodeStatus?: InputMaybe<Scalars['String']['input']>;
  taxDate?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type OrganizationCreateWithoutProcuringEntityBidSelectionPlansInput = {
  accountingType?: InputMaybe<Scalars['String']['input']>;
  agencyName?: InputMaybe<Scalars['String']['input']>;
  authenType?: InputMaybe<Scalars['Int']['input']>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutContractorInput>;
  briefName?: InputMaybe<Scalars['String']['input']>;
  budgetCode?: InputMaybe<Scalars['String']['input']>;
  businessStatus?: InputMaybe<Scalars['String']['input']>;
  businessType?: InputMaybe<CatBusinessTypeCreateNestedOneWithoutOrganizationsInput>;
  businessTypeCode?: InputMaybe<Scalars['String']['input']>;
  caRegister?: InputMaybe<Scalars['Boolean']['input']>;
  chapterCode?: InputMaybe<Scalars['String']['input']>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutProcuringEntityInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  enName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investorBidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutInvestorInput>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutInvestorInput>;
  isAgencies?: InputMaybe<Scalars['Int']['input']>;
  isBidderInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isBidderInvite?: InputMaybe<Scalars['Boolean']['input']>;
  isBiddingFacility?: InputMaybe<Scalars['Boolean']['input']>;
  isCompetentAuthorities?: InputMaybe<Scalars['Boolean']['input']>;
  isContractor?: InputMaybe<Scalars['Boolean']['input']>;
  isForeignInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isPlanInvest?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  notificationContractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutContractorInput>;
  officeAddress?: InputMaybe<Scalars['String']['input']>;
  officeDistrict?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeDistrictOrganizationsInput>;
  officeDistrictCode?: InputMaybe<Scalars['String']['input']>;
  officePhone?: InputMaybe<Scalars['String']['input']>;
  officeProvince?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeProvinceOrganizationsInput>;
  officeProvinceCode?: InputMaybe<Scalars['String']['input']>;
  officeWard?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeWardOrganizationsInput>;
  officeWardCode?: InputMaybe<Scalars['String']['input']>;
  officeWeb?: InputMaybe<Scalars['String']['input']>;
  officeZipcode?: InputMaybe<Scalars['String']['input']>;
  oldCode?: InputMaybe<Scalars['String']['input']>;
  organizationBusiness?: InputMaybe<OrganizationBusinessCreateNestedManyWithoutOrganizationInput>;
  proManagementUnit?: InputMaybe<Scalars['String']['input']>;
  procuringEntities?: InputMaybe<BidNotificationCreateNestedManyWithoutProcuringEntityInput>;
  projects?: InputMaybe<ProjectCreateNestedManyWithoutInvestorInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  receiverAddress?: InputMaybe<Scalars['String']['input']>;
  receiverByOffice?: InputMaybe<Scalars['Int']['input']>;
  receiverDistrict?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverDistrictOrganizationsInput>;
  receiverDistrictCode?: InputMaybe<Scalars['String']['input']>;
  receiverEmail?: InputMaybe<Scalars['String']['input']>;
  receiverEmailElecInvo?: InputMaybe<Scalars['String']['input']>;
  receiverIdDate?: InputMaybe<Scalars['String']['input']>;
  receiverIdNo?: InputMaybe<Scalars['String']['input']>;
  receiverName?: InputMaybe<Scalars['String']['input']>;
  receiverPhone?: InputMaybe<Scalars['String']['input']>;
  receiverProvince?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverProvinceOrganizationsInput>;
  receiverProvinceCode?: InputMaybe<Scalars['String']['input']>;
  receiverWard?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverWardOrganizationsInput>;
  receiverWardCode?: InputMaybe<Scalars['String']['input']>;
  receiverZipcode?: InputMaybe<Scalars['String']['input']>;
  repEmail?: InputMaybe<Scalars['String']['input']>;
  repFullName?: InputMaybe<Scalars['String']['input']>;
  repIdCountryCode?: InputMaybe<Scalars['String']['input']>;
  repIdDate?: InputMaybe<Scalars['String']['input']>;
  repIdNo?: InputMaybe<Scalars['String']['input']>;
  repIdType?: InputMaybe<Scalars['String']['input']>;
  repPhone?: InputMaybe<Scalars['String']['input']>;
  repPosition?: InputMaybe<Scalars['String']['input']>;
  taxCode?: InputMaybe<Scalars['String']['input']>;
  taxCodeStatus?: InputMaybe<Scalars['String']['input']>;
  taxDate?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type OrganizationCreateWithoutProjectsInput = {
  accountingType?: InputMaybe<Scalars['String']['input']>;
  agencyName?: InputMaybe<Scalars['String']['input']>;
  authenType?: InputMaybe<Scalars['Int']['input']>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutContractorInput>;
  briefName?: InputMaybe<Scalars['String']['input']>;
  budgetCode?: InputMaybe<Scalars['String']['input']>;
  businessStatus?: InputMaybe<Scalars['String']['input']>;
  businessType?: InputMaybe<CatBusinessTypeCreateNestedOneWithoutOrganizationsInput>;
  businessTypeCode?: InputMaybe<Scalars['String']['input']>;
  caRegister?: InputMaybe<Scalars['Boolean']['input']>;
  chapterCode?: InputMaybe<Scalars['String']['input']>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutProcuringEntityInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  enName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investorBidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutInvestorInput>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutInvestorInput>;
  isAgencies?: InputMaybe<Scalars['Int']['input']>;
  isBidderInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isBidderInvite?: InputMaybe<Scalars['Boolean']['input']>;
  isBiddingFacility?: InputMaybe<Scalars['Boolean']['input']>;
  isCompetentAuthorities?: InputMaybe<Scalars['Boolean']['input']>;
  isContractor?: InputMaybe<Scalars['Boolean']['input']>;
  isForeignInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isPlanInvest?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  notificationContractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutContractorInput>;
  officeAddress?: InputMaybe<Scalars['String']['input']>;
  officeDistrict?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeDistrictOrganizationsInput>;
  officeDistrictCode?: InputMaybe<Scalars['String']['input']>;
  officePhone?: InputMaybe<Scalars['String']['input']>;
  officeProvince?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeProvinceOrganizationsInput>;
  officeProvinceCode?: InputMaybe<Scalars['String']['input']>;
  officeWard?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeWardOrganizationsInput>;
  officeWardCode?: InputMaybe<Scalars['String']['input']>;
  officeWeb?: InputMaybe<Scalars['String']['input']>;
  officeZipcode?: InputMaybe<Scalars['String']['input']>;
  oldCode?: InputMaybe<Scalars['String']['input']>;
  organizationBusiness?: InputMaybe<OrganizationBusinessCreateNestedManyWithoutOrganizationInput>;
  proManagementUnit?: InputMaybe<Scalars['String']['input']>;
  procuringEntities?: InputMaybe<BidNotificationCreateNestedManyWithoutProcuringEntityInput>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutProcuringEntityInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  receiverAddress?: InputMaybe<Scalars['String']['input']>;
  receiverByOffice?: InputMaybe<Scalars['Int']['input']>;
  receiverDistrict?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverDistrictOrganizationsInput>;
  receiverDistrictCode?: InputMaybe<Scalars['String']['input']>;
  receiverEmail?: InputMaybe<Scalars['String']['input']>;
  receiverEmailElecInvo?: InputMaybe<Scalars['String']['input']>;
  receiverIdDate?: InputMaybe<Scalars['String']['input']>;
  receiverIdNo?: InputMaybe<Scalars['String']['input']>;
  receiverName?: InputMaybe<Scalars['String']['input']>;
  receiverPhone?: InputMaybe<Scalars['String']['input']>;
  receiverProvince?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverProvinceOrganizationsInput>;
  receiverProvinceCode?: InputMaybe<Scalars['String']['input']>;
  receiverWard?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverWardOrganizationsInput>;
  receiverWardCode?: InputMaybe<Scalars['String']['input']>;
  receiverZipcode?: InputMaybe<Scalars['String']['input']>;
  repEmail?: InputMaybe<Scalars['String']['input']>;
  repFullName?: InputMaybe<Scalars['String']['input']>;
  repIdCountryCode?: InputMaybe<Scalars['String']['input']>;
  repIdDate?: InputMaybe<Scalars['String']['input']>;
  repIdNo?: InputMaybe<Scalars['String']['input']>;
  repIdType?: InputMaybe<Scalars['String']['input']>;
  repPhone?: InputMaybe<Scalars['String']['input']>;
  repPosition?: InputMaybe<Scalars['String']['input']>;
  taxCode?: InputMaybe<Scalars['String']['input']>;
  taxCodeStatus?: InputMaybe<Scalars['String']['input']>;
  taxDate?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type OrganizationCreateWithoutReceiverDistrictInput = {
  accountingType?: InputMaybe<Scalars['String']['input']>;
  agencyName?: InputMaybe<Scalars['String']['input']>;
  authenType?: InputMaybe<Scalars['Int']['input']>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutContractorInput>;
  briefName?: InputMaybe<Scalars['String']['input']>;
  budgetCode?: InputMaybe<Scalars['String']['input']>;
  businessStatus?: InputMaybe<Scalars['String']['input']>;
  businessType?: InputMaybe<CatBusinessTypeCreateNestedOneWithoutOrganizationsInput>;
  businessTypeCode?: InputMaybe<Scalars['String']['input']>;
  caRegister?: InputMaybe<Scalars['Boolean']['input']>;
  chapterCode?: InputMaybe<Scalars['String']['input']>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutProcuringEntityInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  enName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investorBidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutInvestorInput>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutInvestorInput>;
  isAgencies?: InputMaybe<Scalars['Int']['input']>;
  isBidderInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isBidderInvite?: InputMaybe<Scalars['Boolean']['input']>;
  isBiddingFacility?: InputMaybe<Scalars['Boolean']['input']>;
  isCompetentAuthorities?: InputMaybe<Scalars['Boolean']['input']>;
  isContractor?: InputMaybe<Scalars['Boolean']['input']>;
  isForeignInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isPlanInvest?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  notificationContractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutContractorInput>;
  officeAddress?: InputMaybe<Scalars['String']['input']>;
  officeDistrict?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeDistrictOrganizationsInput>;
  officeDistrictCode?: InputMaybe<Scalars['String']['input']>;
  officePhone?: InputMaybe<Scalars['String']['input']>;
  officeProvince?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeProvinceOrganizationsInput>;
  officeProvinceCode?: InputMaybe<Scalars['String']['input']>;
  officeWard?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeWardOrganizationsInput>;
  officeWardCode?: InputMaybe<Scalars['String']['input']>;
  officeWeb?: InputMaybe<Scalars['String']['input']>;
  officeZipcode?: InputMaybe<Scalars['String']['input']>;
  oldCode?: InputMaybe<Scalars['String']['input']>;
  organizationBusiness?: InputMaybe<OrganizationBusinessCreateNestedManyWithoutOrganizationInput>;
  proManagementUnit?: InputMaybe<Scalars['String']['input']>;
  procuringEntities?: InputMaybe<BidNotificationCreateNestedManyWithoutProcuringEntityInput>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutProcuringEntityInput>;
  projects?: InputMaybe<ProjectCreateNestedManyWithoutInvestorInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  receiverAddress?: InputMaybe<Scalars['String']['input']>;
  receiverByOffice?: InputMaybe<Scalars['Int']['input']>;
  receiverDistrictCode?: InputMaybe<Scalars['String']['input']>;
  receiverEmail?: InputMaybe<Scalars['String']['input']>;
  receiverEmailElecInvo?: InputMaybe<Scalars['String']['input']>;
  receiverIdDate?: InputMaybe<Scalars['String']['input']>;
  receiverIdNo?: InputMaybe<Scalars['String']['input']>;
  receiverName?: InputMaybe<Scalars['String']['input']>;
  receiverPhone?: InputMaybe<Scalars['String']['input']>;
  receiverProvince?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverProvinceOrganizationsInput>;
  receiverProvinceCode?: InputMaybe<Scalars['String']['input']>;
  receiverWard?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverWardOrganizationsInput>;
  receiverWardCode?: InputMaybe<Scalars['String']['input']>;
  receiverZipcode?: InputMaybe<Scalars['String']['input']>;
  repEmail?: InputMaybe<Scalars['String']['input']>;
  repFullName?: InputMaybe<Scalars['String']['input']>;
  repIdCountryCode?: InputMaybe<Scalars['String']['input']>;
  repIdDate?: InputMaybe<Scalars['String']['input']>;
  repIdNo?: InputMaybe<Scalars['String']['input']>;
  repIdType?: InputMaybe<Scalars['String']['input']>;
  repPhone?: InputMaybe<Scalars['String']['input']>;
  repPosition?: InputMaybe<Scalars['String']['input']>;
  taxCode?: InputMaybe<Scalars['String']['input']>;
  taxCodeStatus?: InputMaybe<Scalars['String']['input']>;
  taxDate?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type OrganizationCreateWithoutReceiverProvinceInput = {
  accountingType?: InputMaybe<Scalars['String']['input']>;
  agencyName?: InputMaybe<Scalars['String']['input']>;
  authenType?: InputMaybe<Scalars['Int']['input']>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutContractorInput>;
  briefName?: InputMaybe<Scalars['String']['input']>;
  budgetCode?: InputMaybe<Scalars['String']['input']>;
  businessStatus?: InputMaybe<Scalars['String']['input']>;
  businessType?: InputMaybe<CatBusinessTypeCreateNestedOneWithoutOrganizationsInput>;
  businessTypeCode?: InputMaybe<Scalars['String']['input']>;
  caRegister?: InputMaybe<Scalars['Boolean']['input']>;
  chapterCode?: InputMaybe<Scalars['String']['input']>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutProcuringEntityInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  enName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investorBidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutInvestorInput>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutInvestorInput>;
  isAgencies?: InputMaybe<Scalars['Int']['input']>;
  isBidderInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isBidderInvite?: InputMaybe<Scalars['Boolean']['input']>;
  isBiddingFacility?: InputMaybe<Scalars['Boolean']['input']>;
  isCompetentAuthorities?: InputMaybe<Scalars['Boolean']['input']>;
  isContractor?: InputMaybe<Scalars['Boolean']['input']>;
  isForeignInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isPlanInvest?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  notificationContractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutContractorInput>;
  officeAddress?: InputMaybe<Scalars['String']['input']>;
  officeDistrict?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeDistrictOrganizationsInput>;
  officeDistrictCode?: InputMaybe<Scalars['String']['input']>;
  officePhone?: InputMaybe<Scalars['String']['input']>;
  officeProvince?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeProvinceOrganizationsInput>;
  officeProvinceCode?: InputMaybe<Scalars['String']['input']>;
  officeWard?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeWardOrganizationsInput>;
  officeWardCode?: InputMaybe<Scalars['String']['input']>;
  officeWeb?: InputMaybe<Scalars['String']['input']>;
  officeZipcode?: InputMaybe<Scalars['String']['input']>;
  oldCode?: InputMaybe<Scalars['String']['input']>;
  organizationBusiness?: InputMaybe<OrganizationBusinessCreateNestedManyWithoutOrganizationInput>;
  proManagementUnit?: InputMaybe<Scalars['String']['input']>;
  procuringEntities?: InputMaybe<BidNotificationCreateNestedManyWithoutProcuringEntityInput>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutProcuringEntityInput>;
  projects?: InputMaybe<ProjectCreateNestedManyWithoutInvestorInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  receiverAddress?: InputMaybe<Scalars['String']['input']>;
  receiverByOffice?: InputMaybe<Scalars['Int']['input']>;
  receiverDistrict?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverDistrictOrganizationsInput>;
  receiverDistrictCode?: InputMaybe<Scalars['String']['input']>;
  receiverEmail?: InputMaybe<Scalars['String']['input']>;
  receiverEmailElecInvo?: InputMaybe<Scalars['String']['input']>;
  receiverIdDate?: InputMaybe<Scalars['String']['input']>;
  receiverIdNo?: InputMaybe<Scalars['String']['input']>;
  receiverName?: InputMaybe<Scalars['String']['input']>;
  receiverPhone?: InputMaybe<Scalars['String']['input']>;
  receiverProvinceCode?: InputMaybe<Scalars['String']['input']>;
  receiverWard?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverWardOrganizationsInput>;
  receiverWardCode?: InputMaybe<Scalars['String']['input']>;
  receiverZipcode?: InputMaybe<Scalars['String']['input']>;
  repEmail?: InputMaybe<Scalars['String']['input']>;
  repFullName?: InputMaybe<Scalars['String']['input']>;
  repIdCountryCode?: InputMaybe<Scalars['String']['input']>;
  repIdDate?: InputMaybe<Scalars['String']['input']>;
  repIdNo?: InputMaybe<Scalars['String']['input']>;
  repIdType?: InputMaybe<Scalars['String']['input']>;
  repPhone?: InputMaybe<Scalars['String']['input']>;
  repPosition?: InputMaybe<Scalars['String']['input']>;
  taxCode?: InputMaybe<Scalars['String']['input']>;
  taxCodeStatus?: InputMaybe<Scalars['String']['input']>;
  taxDate?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type OrganizationCreateWithoutReceiverWardInput = {
  accountingType?: InputMaybe<Scalars['String']['input']>;
  agencyName?: InputMaybe<Scalars['String']['input']>;
  authenType?: InputMaybe<Scalars['Int']['input']>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorCreateNestedManyWithoutContractorInput>;
  briefName?: InputMaybe<Scalars['String']['input']>;
  budgetCode?: InputMaybe<Scalars['String']['input']>;
  businessStatus?: InputMaybe<Scalars['String']['input']>;
  businessType?: InputMaybe<CatBusinessTypeCreateNestedOneWithoutOrganizationsInput>;
  businessTypeCode?: InputMaybe<Scalars['String']['input']>;
  caRegister?: InputMaybe<Scalars['Boolean']['input']>;
  chapterCode?: InputMaybe<Scalars['String']['input']>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileCreateNestedManyWithoutProcuringEntityInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  enName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investorBidNotifications?: InputMaybe<BidNotificationCreateNestedManyWithoutInvestorInput>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutInvestorInput>;
  isAgencies?: InputMaybe<Scalars['Int']['input']>;
  isBidderInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isBidderInvite?: InputMaybe<Scalars['Boolean']['input']>;
  isBiddingFacility?: InputMaybe<Scalars['Boolean']['input']>;
  isCompetentAuthorities?: InputMaybe<Scalars['Boolean']['input']>;
  isContractor?: InputMaybe<Scalars['Boolean']['input']>;
  isForeignInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isInvestor?: InputMaybe<Scalars['Boolean']['input']>;
  isPlanInvest?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  notificationContractors?: InputMaybe<BidNotificationContractorCreateNestedManyWithoutContractorInput>;
  officeAddress?: InputMaybe<Scalars['String']['input']>;
  officeDistrict?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeDistrictOrganizationsInput>;
  officeDistrictCode?: InputMaybe<Scalars['String']['input']>;
  officePhone?: InputMaybe<Scalars['String']['input']>;
  officeProvince?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeProvinceOrganizationsInput>;
  officeProvinceCode?: InputMaybe<Scalars['String']['input']>;
  officeWard?: InputMaybe<CatAreaCreateNestedOneWithoutOfficeWardOrganizationsInput>;
  officeWardCode?: InputMaybe<Scalars['String']['input']>;
  officeWeb?: InputMaybe<Scalars['String']['input']>;
  officeZipcode?: InputMaybe<Scalars['String']['input']>;
  oldCode?: InputMaybe<Scalars['String']['input']>;
  organizationBusiness?: InputMaybe<OrganizationBusinessCreateNestedManyWithoutOrganizationInput>;
  proManagementUnit?: InputMaybe<Scalars['String']['input']>;
  procuringEntities?: InputMaybe<BidNotificationCreateNestedManyWithoutProcuringEntityInput>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutProcuringEntityInput>;
  projects?: InputMaybe<ProjectCreateNestedManyWithoutInvestorInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  receiverAddress?: InputMaybe<Scalars['String']['input']>;
  receiverByOffice?: InputMaybe<Scalars['Int']['input']>;
  receiverDistrict?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverDistrictOrganizationsInput>;
  receiverDistrictCode?: InputMaybe<Scalars['String']['input']>;
  receiverEmail?: InputMaybe<Scalars['String']['input']>;
  receiverEmailElecInvo?: InputMaybe<Scalars['String']['input']>;
  receiverIdDate?: InputMaybe<Scalars['String']['input']>;
  receiverIdNo?: InputMaybe<Scalars['String']['input']>;
  receiverName?: InputMaybe<Scalars['String']['input']>;
  receiverPhone?: InputMaybe<Scalars['String']['input']>;
  receiverProvince?: InputMaybe<CatAreaCreateNestedOneWithoutReceiverProvinceOrganizationsInput>;
  receiverProvinceCode?: InputMaybe<Scalars['String']['input']>;
  receiverWardCode?: InputMaybe<Scalars['String']['input']>;
  receiverZipcode?: InputMaybe<Scalars['String']['input']>;
  repEmail?: InputMaybe<Scalars['String']['input']>;
  repFullName?: InputMaybe<Scalars['String']['input']>;
  repIdCountryCode?: InputMaybe<Scalars['String']['input']>;
  repIdDate?: InputMaybe<Scalars['String']['input']>;
  repIdNo?: InputMaybe<Scalars['String']['input']>;
  repIdType?: InputMaybe<Scalars['String']['input']>;
  repPhone?: InputMaybe<Scalars['String']['input']>;
  repPosition?: InputMaybe<Scalars['String']['input']>;
  taxCode?: InputMaybe<Scalars['String']['input']>;
  taxCodeStatus?: InputMaybe<Scalars['String']['input']>;
  taxDate?: InputMaybe<Scalars['DateTime']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type OrganizationListRelationFilter = {
  every?: InputMaybe<OrganizationWhereInput>;
  none?: InputMaybe<OrganizationWhereInput>;
  some?: InputMaybe<OrganizationWhereInput>;
};

export type OrganizationOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type OrganizationOrderByWithRelationInput = {
  accountingType?: InputMaybe<SortOrderInput>;
  agencyName?: InputMaybe<SortOrderInput>;
  authenType?: InputMaybe<SortOrderInput>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorOrderByRelationAggregateInput>;
  briefName?: InputMaybe<SortOrderInput>;
  budgetCode?: InputMaybe<SortOrderInput>;
  businessStatus?: InputMaybe<SortOrderInput>;
  businessType?: InputMaybe<CatBusinessTypeOrderByWithRelationInput>;
  businessTypeCode?: InputMaybe<SortOrderInput>;
  businessTypeId?: InputMaybe<SortOrderInput>;
  caRegister?: InputMaybe<SortOrderInput>;
  chapterCode?: InputMaybe<SortOrderInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileOrderByRelationAggregateInput>;
  code?: InputMaybe<SortOrderInput>;
  countryCode?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  enName?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  investorBidNotifications?: InputMaybe<BidNotificationOrderByRelationAggregateInput>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanOrderByRelationAggregateInput>;
  isAgencies?: InputMaybe<SortOrderInput>;
  isBidderInvestor?: InputMaybe<SortOrder>;
  isBidderInvite?: InputMaybe<SortOrder>;
  isBiddingFacility?: InputMaybe<SortOrder>;
  isCompetentAuthorities?: InputMaybe<SortOrder>;
  isContractor?: InputMaybe<SortOrder>;
  isForeignInvestor?: InputMaybe<SortOrderInput>;
  isInvestor?: InputMaybe<SortOrder>;
  isPlanInvest?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  notificationContractors?: InputMaybe<BidNotificationContractorOrderByRelationAggregateInput>;
  officeAddress?: InputMaybe<SortOrderInput>;
  officeDistrict?: InputMaybe<CatAreaOrderByWithRelationInput>;
  officeDistrictCode?: InputMaybe<SortOrderInput>;
  officeDistrictId?: InputMaybe<SortOrderInput>;
  officePhone?: InputMaybe<SortOrderInput>;
  officeProvince?: InputMaybe<CatAreaOrderByWithRelationInput>;
  officeProvinceCode?: InputMaybe<SortOrderInput>;
  officeProvinceId?: InputMaybe<SortOrderInput>;
  officeWard?: InputMaybe<CatAreaOrderByWithRelationInput>;
  officeWardCode?: InputMaybe<SortOrderInput>;
  officeWardId?: InputMaybe<SortOrderInput>;
  officeWeb?: InputMaybe<SortOrderInput>;
  officeZipcode?: InputMaybe<SortOrderInput>;
  oldCode?: InputMaybe<SortOrderInput>;
  organizationBusiness?: InputMaybe<OrganizationBusinessOrderByRelationAggregateInput>;
  proManagementUnit?: InputMaybe<SortOrderInput>;
  procuringEntities?: InputMaybe<BidNotificationOrderByRelationAggregateInput>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanOrderByRelationAggregateInput>;
  projects?: InputMaybe<ProjectOrderByRelationAggregateInput>;
  rawFiles?: InputMaybe<SortOrderInput>;
  reason?: InputMaybe<SortOrderInput>;
  receiverAddress?: InputMaybe<SortOrderInput>;
  receiverByOffice?: InputMaybe<SortOrderInput>;
  receiverDistrict?: InputMaybe<CatAreaOrderByWithRelationInput>;
  receiverDistrictCode?: InputMaybe<SortOrderInput>;
  receiverDistrictId?: InputMaybe<SortOrderInput>;
  receiverEmail?: InputMaybe<SortOrderInput>;
  receiverEmailElecInvo?: InputMaybe<SortOrderInput>;
  receiverIdDate?: InputMaybe<SortOrderInput>;
  receiverIdNo?: InputMaybe<SortOrderInput>;
  receiverName?: InputMaybe<SortOrderInput>;
  receiverPhone?: InputMaybe<SortOrderInput>;
  receiverProvince?: InputMaybe<CatAreaOrderByWithRelationInput>;
  receiverProvinceCode?: InputMaybe<SortOrderInput>;
  receiverProvinceId?: InputMaybe<SortOrderInput>;
  receiverWard?: InputMaybe<CatAreaOrderByWithRelationInput>;
  receiverWardCode?: InputMaybe<SortOrderInput>;
  receiverWardId?: InputMaybe<SortOrderInput>;
  receiverZipcode?: InputMaybe<SortOrderInput>;
  repEmail?: InputMaybe<SortOrderInput>;
  repFullName?: InputMaybe<SortOrderInput>;
  repIdCountryCode?: InputMaybe<SortOrderInput>;
  repIdDate?: InputMaybe<SortOrderInput>;
  repIdNo?: InputMaybe<SortOrderInput>;
  repIdType?: InputMaybe<SortOrderInput>;
  repPhone?: InputMaybe<SortOrderInput>;
  repPosition?: InputMaybe<SortOrderInput>;
  taxCode?: InputMaybe<SortOrderInput>;
  taxCodeStatus?: InputMaybe<SortOrderInput>;
  taxDate?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
};

export enum OrganizationScalarFieldEnum {
  AccountingType = 'accountingType',
  AgencyName = 'agencyName',
  AuthenType = 'authenType',
  BriefName = 'briefName',
  BudgetCode = 'budgetCode',
  BusinessStatus = 'businessStatus',
  BusinessTypeCode = 'businessTypeCode',
  BusinessTypeId = 'businessTypeId',
  CaRegister = 'caRegister',
  ChapterCode = 'chapterCode',
  Code = 'code',
  CountryCode = 'countryCode',
  CreatedAt = 'createdAt',
  DeletedAt = 'deletedAt',
  EnName = 'enName',
  Id = 'id',
  IsAgencies = 'isAgencies',
  IsBidderInvestor = 'isBidderInvestor',
  IsBidderInvite = 'isBidderInvite',
  IsBiddingFacility = 'isBiddingFacility',
  IsCompetentAuthorities = 'isCompetentAuthorities',
  IsContractor = 'isContractor',
  IsForeignInvestor = 'isForeignInvestor',
  IsInvestor = 'isInvestor',
  IsPlanInvest = 'isPlanInvest',
  Name = 'name',
  OfficeAddress = 'officeAddress',
  OfficeDistrictCode = 'officeDistrictCode',
  OfficeDistrictId = 'officeDistrictId',
  OfficePhone = 'officePhone',
  OfficeProvinceCode = 'officeProvinceCode',
  OfficeProvinceId = 'officeProvinceId',
  OfficeWardCode = 'officeWardCode',
  OfficeWardId = 'officeWardId',
  OfficeWeb = 'officeWeb',
  OfficeZipcode = 'officeZipcode',
  OldCode = 'oldCode',
  ProManagementUnit = 'proManagementUnit',
  RawFiles = 'rawFiles',
  Reason = 'reason',
  ReceiverAddress = 'receiverAddress',
  ReceiverByOffice = 'receiverByOffice',
  ReceiverDistrictCode = 'receiverDistrictCode',
  ReceiverDistrictId = 'receiverDistrictId',
  ReceiverEmail = 'receiverEmail',
  ReceiverEmailElecInvo = 'receiverEmailElecInvo',
  ReceiverIdDate = 'receiverIdDate',
  ReceiverIdNo = 'receiverIdNo',
  ReceiverName = 'receiverName',
  ReceiverPhone = 'receiverPhone',
  ReceiverProvinceCode = 'receiverProvinceCode',
  ReceiverProvinceId = 'receiverProvinceId',
  ReceiverWardCode = 'receiverWardCode',
  ReceiverWardId = 'receiverWardId',
  ReceiverZipcode = 'receiverZipcode',
  RepEmail = 'repEmail',
  RepFullName = 'repFullName',
  RepIdCountryCode = 'repIdCountryCode',
  RepIdDate = 'repIdDate',
  RepIdNo = 'repIdNo',
  RepIdType = 'repIdType',
  RepPhone = 'repPhone',
  RepPosition = 'repPosition',
  TaxCode = 'taxCode',
  TaxCodeStatus = 'taxCodeStatus',
  TaxDate = 'taxDate',
  UpdatedAt = 'updatedAt'
}

export type OrganizationScalarWhereInput = {
  AND?: InputMaybe<Array<OrganizationScalarWhereInput>>;
  NOT?: InputMaybe<Array<OrganizationScalarWhereInput>>;
  OR?: InputMaybe<Array<OrganizationScalarWhereInput>>;
  accountingType?: InputMaybe<StringNullableFilter>;
  agencyName?: InputMaybe<StringNullableFilter>;
  authenType?: InputMaybe<IntNullableFilter>;
  briefName?: InputMaybe<StringNullableFilter>;
  budgetCode?: InputMaybe<StringNullableFilter>;
  businessStatus?: InputMaybe<StringNullableFilter>;
  businessTypeCode?: InputMaybe<StringNullableFilter>;
  businessTypeId?: InputMaybe<StringNullableFilter>;
  caRegister?: InputMaybe<BoolNullableFilter>;
  chapterCode?: InputMaybe<StringNullableFilter>;
  code?: InputMaybe<StringNullableFilter>;
  countryCode?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  enName?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isAgencies?: InputMaybe<IntNullableFilter>;
  isBidderInvestor?: InputMaybe<BoolFilter>;
  isBidderInvite?: InputMaybe<BoolFilter>;
  isBiddingFacility?: InputMaybe<BoolFilter>;
  isCompetentAuthorities?: InputMaybe<BoolFilter>;
  isContractor?: InputMaybe<BoolFilter>;
  isForeignInvestor?: InputMaybe<BoolNullableFilter>;
  isInvestor?: InputMaybe<BoolFilter>;
  isPlanInvest?: InputMaybe<IntNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  officeAddress?: InputMaybe<StringNullableFilter>;
  officeDistrictCode?: InputMaybe<StringNullableFilter>;
  officeDistrictId?: InputMaybe<StringNullableFilter>;
  officePhone?: InputMaybe<StringNullableFilter>;
  officeProvinceCode?: InputMaybe<StringNullableFilter>;
  officeProvinceId?: InputMaybe<StringNullableFilter>;
  officeWardCode?: InputMaybe<StringNullableFilter>;
  officeWardId?: InputMaybe<StringNullableFilter>;
  officeWeb?: InputMaybe<StringNullableFilter>;
  officeZipcode?: InputMaybe<StringNullableFilter>;
  oldCode?: InputMaybe<StringNullableFilter>;
  proManagementUnit?: InputMaybe<StringNullableFilter>;
  rawFiles?: InputMaybe<JsonNullableFilter>;
  reason?: InputMaybe<StringNullableFilter>;
  receiverAddress?: InputMaybe<StringNullableFilter>;
  receiverByOffice?: InputMaybe<IntNullableFilter>;
  receiverDistrictCode?: InputMaybe<StringNullableFilter>;
  receiverDistrictId?: InputMaybe<StringNullableFilter>;
  receiverEmail?: InputMaybe<StringNullableFilter>;
  receiverEmailElecInvo?: InputMaybe<StringNullableFilter>;
  receiverIdDate?: InputMaybe<StringNullableFilter>;
  receiverIdNo?: InputMaybe<StringNullableFilter>;
  receiverName?: InputMaybe<StringNullableFilter>;
  receiverPhone?: InputMaybe<StringNullableFilter>;
  receiverProvinceCode?: InputMaybe<StringNullableFilter>;
  receiverProvinceId?: InputMaybe<StringNullableFilter>;
  receiverWardCode?: InputMaybe<StringNullableFilter>;
  receiverWardId?: InputMaybe<StringNullableFilter>;
  receiverZipcode?: InputMaybe<StringNullableFilter>;
  repEmail?: InputMaybe<StringNullableFilter>;
  repFullName?: InputMaybe<StringNullableFilter>;
  repIdCountryCode?: InputMaybe<StringNullableFilter>;
  repIdDate?: InputMaybe<StringNullableFilter>;
  repIdNo?: InputMaybe<StringNullableFilter>;
  repIdType?: InputMaybe<StringNullableFilter>;
  repPhone?: InputMaybe<StringNullableFilter>;
  repPosition?: InputMaybe<StringNullableFilter>;
  taxCode?: InputMaybe<StringNullableFilter>;
  taxCodeStatus?: InputMaybe<StringNullableFilter>;
  taxDate?: InputMaybe<DateTimeNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
};

export type OrganizationUpdateInput = {
  accountingType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  agencyName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  authenType?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorUpdateManyWithoutContractorNestedInput>;
  briefName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  budgetCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessType?: InputMaybe<CatBusinessTypeUpdateOneWithoutOrganizationsNestedInput>;
  businessTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  caRegister?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  chapterCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutProcuringEntityNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  enName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investorBidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutInvestorNestedInput>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutInvestorNestedInput>;
  isAgencies?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  isBidderInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBidderInvite?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBiddingFacility?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isCompetentAuthorities?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isContractor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isForeignInvestor?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPlanInvest?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notificationContractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutContractorNestedInput>;
  officeAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeDistrict?: InputMaybe<CatAreaUpdateOneWithoutOfficeDistrictOrganizationsNestedInput>;
  officeDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officePhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeProvince?: InputMaybe<CatAreaUpdateOneWithoutOfficeProvinceOrganizationsNestedInput>;
  officeProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWard?: InputMaybe<CatAreaUpdateOneWithoutOfficeWardOrganizationsNestedInput>;
  officeWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWeb?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  oldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organizationBusiness?: InputMaybe<OrganizationBusinessUpdateManyWithoutOrganizationNestedInput>;
  proManagementUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntities?: InputMaybe<BidNotificationUpdateManyWithoutProcuringEntityNestedInput>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutProcuringEntityNestedInput>;
  projects?: InputMaybe<ProjectUpdateManyWithoutInvestorNestedInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverByOffice?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  receiverDistrict?: InputMaybe<CatAreaUpdateOneWithoutReceiverDistrictOrganizationsNestedInput>;
  receiverDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmailElecInvo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverProvince?: InputMaybe<CatAreaUpdateOneWithoutReceiverProvinceOrganizationsNestedInput>;
  receiverProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverWard?: InputMaybe<CatAreaUpdateOneWithoutReceiverWardOrganizationsNestedInput>;
  receiverWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repFullName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdCountryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPosition?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCodeStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type OrganizationUpdateManyMutationInput = {
  accountingType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  agencyName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  authenType?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  briefName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  budgetCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  caRegister?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  chapterCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  enName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isAgencies?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  isBidderInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBidderInvite?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBiddingFacility?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isCompetentAuthorities?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isContractor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isForeignInvestor?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPlanInvest?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officePhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWeb?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  oldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  proManagementUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverByOffice?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  receiverDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmailElecInvo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repFullName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdCountryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPosition?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCodeStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type OrganizationUpdateManyWithWhereWithoutOfficeDistrictInput = {
  data: OrganizationUpdateManyMutationInput;
  where: OrganizationScalarWhereInput;
};

export type OrganizationUpdateManyWithWhereWithoutOfficeProvinceInput = {
  data: OrganizationUpdateManyMutationInput;
  where: OrganizationScalarWhereInput;
};

export type OrganizationUpdateManyWithWhereWithoutOfficeWardInput = {
  data: OrganizationUpdateManyMutationInput;
  where: OrganizationScalarWhereInput;
};

export type OrganizationUpdateManyWithWhereWithoutReceiverDistrictInput = {
  data: OrganizationUpdateManyMutationInput;
  where: OrganizationScalarWhereInput;
};

export type OrganizationUpdateManyWithWhereWithoutReceiverProvinceInput = {
  data: OrganizationUpdateManyMutationInput;
  where: OrganizationScalarWhereInput;
};

export type OrganizationUpdateManyWithWhereWithoutReceiverWardInput = {
  data: OrganizationUpdateManyMutationInput;
  where: OrganizationScalarWhereInput;
};

export type OrganizationUpdateManyWithoutOfficeDistrictNestedInput = {
  connect?: InputMaybe<Array<OrganizationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<OrganizationCreateOrConnectWithoutOfficeDistrictInput>>;
  create?: InputMaybe<Array<OrganizationCreateWithoutOfficeDistrictInput>>;
  createMany?: InputMaybe<OrganizationCreateManyOfficeDistrictInputEnvelope>;
  delete?: InputMaybe<Array<OrganizationWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<OrganizationScalarWhereInput>>;
  disconnect?: InputMaybe<Array<OrganizationWhereUniqueInput>>;
  set?: InputMaybe<Array<OrganizationWhereUniqueInput>>;
  update?: InputMaybe<Array<OrganizationUpdateWithWhereUniqueWithoutOfficeDistrictInput>>;
  updateMany?: InputMaybe<Array<OrganizationUpdateManyWithWhereWithoutOfficeDistrictInput>>;
  upsert?: InputMaybe<Array<OrganizationUpsertWithWhereUniqueWithoutOfficeDistrictInput>>;
};

export type OrganizationUpdateManyWithoutOfficeProvinceNestedInput = {
  connect?: InputMaybe<Array<OrganizationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<OrganizationCreateOrConnectWithoutOfficeProvinceInput>>;
  create?: InputMaybe<Array<OrganizationCreateWithoutOfficeProvinceInput>>;
  createMany?: InputMaybe<OrganizationCreateManyOfficeProvinceInputEnvelope>;
  delete?: InputMaybe<Array<OrganizationWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<OrganizationScalarWhereInput>>;
  disconnect?: InputMaybe<Array<OrganizationWhereUniqueInput>>;
  set?: InputMaybe<Array<OrganizationWhereUniqueInput>>;
  update?: InputMaybe<Array<OrganizationUpdateWithWhereUniqueWithoutOfficeProvinceInput>>;
  updateMany?: InputMaybe<Array<OrganizationUpdateManyWithWhereWithoutOfficeProvinceInput>>;
  upsert?: InputMaybe<Array<OrganizationUpsertWithWhereUniqueWithoutOfficeProvinceInput>>;
};

export type OrganizationUpdateManyWithoutOfficeWardNestedInput = {
  connect?: InputMaybe<Array<OrganizationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<OrganizationCreateOrConnectWithoutOfficeWardInput>>;
  create?: InputMaybe<Array<OrganizationCreateWithoutOfficeWardInput>>;
  createMany?: InputMaybe<OrganizationCreateManyOfficeWardInputEnvelope>;
  delete?: InputMaybe<Array<OrganizationWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<OrganizationScalarWhereInput>>;
  disconnect?: InputMaybe<Array<OrganizationWhereUniqueInput>>;
  set?: InputMaybe<Array<OrganizationWhereUniqueInput>>;
  update?: InputMaybe<Array<OrganizationUpdateWithWhereUniqueWithoutOfficeWardInput>>;
  updateMany?: InputMaybe<Array<OrganizationUpdateManyWithWhereWithoutOfficeWardInput>>;
  upsert?: InputMaybe<Array<OrganizationUpsertWithWhereUniqueWithoutOfficeWardInput>>;
};

export type OrganizationUpdateManyWithoutReceiverDistrictNestedInput = {
  connect?: InputMaybe<Array<OrganizationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<OrganizationCreateOrConnectWithoutReceiverDistrictInput>>;
  create?: InputMaybe<Array<OrganizationCreateWithoutReceiverDistrictInput>>;
  createMany?: InputMaybe<OrganizationCreateManyReceiverDistrictInputEnvelope>;
  delete?: InputMaybe<Array<OrganizationWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<OrganizationScalarWhereInput>>;
  disconnect?: InputMaybe<Array<OrganizationWhereUniqueInput>>;
  set?: InputMaybe<Array<OrganizationWhereUniqueInput>>;
  update?: InputMaybe<Array<OrganizationUpdateWithWhereUniqueWithoutReceiverDistrictInput>>;
  updateMany?: InputMaybe<Array<OrganizationUpdateManyWithWhereWithoutReceiverDistrictInput>>;
  upsert?: InputMaybe<Array<OrganizationUpsertWithWhereUniqueWithoutReceiverDistrictInput>>;
};

export type OrganizationUpdateManyWithoutReceiverProvinceNestedInput = {
  connect?: InputMaybe<Array<OrganizationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<OrganizationCreateOrConnectWithoutReceiverProvinceInput>>;
  create?: InputMaybe<Array<OrganizationCreateWithoutReceiverProvinceInput>>;
  createMany?: InputMaybe<OrganizationCreateManyReceiverProvinceInputEnvelope>;
  delete?: InputMaybe<Array<OrganizationWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<OrganizationScalarWhereInput>>;
  disconnect?: InputMaybe<Array<OrganizationWhereUniqueInput>>;
  set?: InputMaybe<Array<OrganizationWhereUniqueInput>>;
  update?: InputMaybe<Array<OrganizationUpdateWithWhereUniqueWithoutReceiverProvinceInput>>;
  updateMany?: InputMaybe<Array<OrganizationUpdateManyWithWhereWithoutReceiverProvinceInput>>;
  upsert?: InputMaybe<Array<OrganizationUpsertWithWhereUniqueWithoutReceiverProvinceInput>>;
};

export type OrganizationUpdateManyWithoutReceiverWardNestedInput = {
  connect?: InputMaybe<Array<OrganizationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<OrganizationCreateOrConnectWithoutReceiverWardInput>>;
  create?: InputMaybe<Array<OrganizationCreateWithoutReceiverWardInput>>;
  createMany?: InputMaybe<OrganizationCreateManyReceiverWardInputEnvelope>;
  delete?: InputMaybe<Array<OrganizationWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<OrganizationScalarWhereInput>>;
  disconnect?: InputMaybe<Array<OrganizationWhereUniqueInput>>;
  set?: InputMaybe<Array<OrganizationWhereUniqueInput>>;
  update?: InputMaybe<Array<OrganizationUpdateWithWhereUniqueWithoutReceiverWardInput>>;
  updateMany?: InputMaybe<Array<OrganizationUpdateManyWithWhereWithoutReceiverWardInput>>;
  upsert?: InputMaybe<Array<OrganizationUpsertWithWhereUniqueWithoutReceiverWardInput>>;
};

export type OrganizationUpdateOneWithoutBidPetitionContractorsNestedInput = {
  connect?: InputMaybe<OrganizationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrganizationCreateOrConnectWithoutBidPetitionContractorsInput>;
  create?: InputMaybe<OrganizationCreateWithoutBidPetitionContractorsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<OrganizationUpdateWithoutBidPetitionContractorsInput>;
  upsert?: InputMaybe<OrganizationUpsertWithoutBidPetitionContractorsInput>;
};

export type OrganizationUpdateOneWithoutChapterFilesNestedInput = {
  connect?: InputMaybe<OrganizationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrganizationCreateOrConnectWithoutChapterFilesInput>;
  create?: InputMaybe<OrganizationCreateWithoutChapterFilesInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<OrganizationUpdateWithoutChapterFilesInput>;
  upsert?: InputMaybe<OrganizationUpsertWithoutChapterFilesInput>;
};

export type OrganizationUpdateOneWithoutInvestorBidNotificationsNestedInput = {
  connect?: InputMaybe<OrganizationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrganizationCreateOrConnectWithoutInvestorBidNotificationsInput>;
  create?: InputMaybe<OrganizationCreateWithoutInvestorBidNotificationsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<OrganizationUpdateWithoutInvestorBidNotificationsInput>;
  upsert?: InputMaybe<OrganizationUpsertWithoutInvestorBidNotificationsInput>;
};

export type OrganizationUpdateOneWithoutInvestorBidSelectionPlansNestedInput = {
  connect?: InputMaybe<OrganizationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrganizationCreateOrConnectWithoutInvestorBidSelectionPlansInput>;
  create?: InputMaybe<OrganizationCreateWithoutInvestorBidSelectionPlansInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<OrganizationUpdateWithoutInvestorBidSelectionPlansInput>;
  upsert?: InputMaybe<OrganizationUpsertWithoutInvestorBidSelectionPlansInput>;
};

export type OrganizationUpdateOneWithoutNotificationContractorsNestedInput = {
  connect?: InputMaybe<OrganizationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrganizationCreateOrConnectWithoutNotificationContractorsInput>;
  create?: InputMaybe<OrganizationCreateWithoutNotificationContractorsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<OrganizationUpdateWithoutNotificationContractorsInput>;
  upsert?: InputMaybe<OrganizationUpsertWithoutNotificationContractorsInput>;
};

export type OrganizationUpdateOneWithoutOrganizationBusinessNestedInput = {
  connect?: InputMaybe<OrganizationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrganizationCreateOrConnectWithoutOrganizationBusinessInput>;
  create?: InputMaybe<OrganizationCreateWithoutOrganizationBusinessInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<OrganizationUpdateWithoutOrganizationBusinessInput>;
  upsert?: InputMaybe<OrganizationUpsertWithoutOrganizationBusinessInput>;
};

export type OrganizationUpdateOneWithoutProcuringEntitiesNestedInput = {
  connect?: InputMaybe<OrganizationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrganizationCreateOrConnectWithoutProcuringEntitiesInput>;
  create?: InputMaybe<OrganizationCreateWithoutProcuringEntitiesInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<OrganizationUpdateWithoutProcuringEntitiesInput>;
  upsert?: InputMaybe<OrganizationUpsertWithoutProcuringEntitiesInput>;
};

export type OrganizationUpdateOneWithoutProcuringEntityBidSelectionPlansNestedInput = {
  connect?: InputMaybe<OrganizationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrganizationCreateOrConnectWithoutProcuringEntityBidSelectionPlansInput>;
  create?: InputMaybe<OrganizationCreateWithoutProcuringEntityBidSelectionPlansInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<OrganizationUpdateWithoutProcuringEntityBidSelectionPlansInput>;
  upsert?: InputMaybe<OrganizationUpsertWithoutProcuringEntityBidSelectionPlansInput>;
};

export type OrganizationUpdateOneWithoutProjectsNestedInput = {
  connect?: InputMaybe<OrganizationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrganizationCreateOrConnectWithoutProjectsInput>;
  create?: InputMaybe<OrganizationCreateWithoutProjectsInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<OrganizationUpdateWithoutProjectsInput>;
  upsert?: InputMaybe<OrganizationUpsertWithoutProjectsInput>;
};

export type OrganizationUpdateWithWhereUniqueWithoutOfficeDistrictInput = {
  data: OrganizationUpdateWithoutOfficeDistrictInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationUpdateWithWhereUniqueWithoutOfficeProvinceInput = {
  data: OrganizationUpdateWithoutOfficeProvinceInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationUpdateWithWhereUniqueWithoutOfficeWardInput = {
  data: OrganizationUpdateWithoutOfficeWardInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationUpdateWithWhereUniqueWithoutReceiverDistrictInput = {
  data: OrganizationUpdateWithoutReceiverDistrictInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationUpdateWithWhereUniqueWithoutReceiverProvinceInput = {
  data: OrganizationUpdateWithoutReceiverProvinceInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationUpdateWithWhereUniqueWithoutReceiverWardInput = {
  data: OrganizationUpdateWithoutReceiverWardInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationUpdateWithoutBidPetitionContractorsInput = {
  accountingType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  agencyName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  authenType?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  briefName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  budgetCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessType?: InputMaybe<CatBusinessTypeUpdateOneWithoutOrganizationsNestedInput>;
  businessTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  caRegister?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  chapterCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutProcuringEntityNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  enName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investorBidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutInvestorNestedInput>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutInvestorNestedInput>;
  isAgencies?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  isBidderInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBidderInvite?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBiddingFacility?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isCompetentAuthorities?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isContractor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isForeignInvestor?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPlanInvest?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notificationContractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutContractorNestedInput>;
  officeAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeDistrict?: InputMaybe<CatAreaUpdateOneWithoutOfficeDistrictOrganizationsNestedInput>;
  officeDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officePhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeProvince?: InputMaybe<CatAreaUpdateOneWithoutOfficeProvinceOrganizationsNestedInput>;
  officeProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWard?: InputMaybe<CatAreaUpdateOneWithoutOfficeWardOrganizationsNestedInput>;
  officeWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWeb?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  oldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organizationBusiness?: InputMaybe<OrganizationBusinessUpdateManyWithoutOrganizationNestedInput>;
  proManagementUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntities?: InputMaybe<BidNotificationUpdateManyWithoutProcuringEntityNestedInput>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutProcuringEntityNestedInput>;
  projects?: InputMaybe<ProjectUpdateManyWithoutInvestorNestedInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverByOffice?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  receiverDistrict?: InputMaybe<CatAreaUpdateOneWithoutReceiverDistrictOrganizationsNestedInput>;
  receiverDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmailElecInvo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverProvince?: InputMaybe<CatAreaUpdateOneWithoutReceiverProvinceOrganizationsNestedInput>;
  receiverProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverWard?: InputMaybe<CatAreaUpdateOneWithoutReceiverWardOrganizationsNestedInput>;
  receiverWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repFullName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdCountryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPosition?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCodeStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type OrganizationUpdateWithoutChapterFilesInput = {
  accountingType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  agencyName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  authenType?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorUpdateManyWithoutContractorNestedInput>;
  briefName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  budgetCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessType?: InputMaybe<CatBusinessTypeUpdateOneWithoutOrganizationsNestedInput>;
  businessTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  caRegister?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  chapterCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  enName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investorBidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutInvestorNestedInput>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutInvestorNestedInput>;
  isAgencies?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  isBidderInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBidderInvite?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBiddingFacility?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isCompetentAuthorities?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isContractor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isForeignInvestor?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPlanInvest?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notificationContractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutContractorNestedInput>;
  officeAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeDistrict?: InputMaybe<CatAreaUpdateOneWithoutOfficeDistrictOrganizationsNestedInput>;
  officeDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officePhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeProvince?: InputMaybe<CatAreaUpdateOneWithoutOfficeProvinceOrganizationsNestedInput>;
  officeProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWard?: InputMaybe<CatAreaUpdateOneWithoutOfficeWardOrganizationsNestedInput>;
  officeWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWeb?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  oldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organizationBusiness?: InputMaybe<OrganizationBusinessUpdateManyWithoutOrganizationNestedInput>;
  proManagementUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntities?: InputMaybe<BidNotificationUpdateManyWithoutProcuringEntityNestedInput>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutProcuringEntityNestedInput>;
  projects?: InputMaybe<ProjectUpdateManyWithoutInvestorNestedInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverByOffice?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  receiverDistrict?: InputMaybe<CatAreaUpdateOneWithoutReceiverDistrictOrganizationsNestedInput>;
  receiverDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmailElecInvo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverProvince?: InputMaybe<CatAreaUpdateOneWithoutReceiverProvinceOrganizationsNestedInput>;
  receiverProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverWard?: InputMaybe<CatAreaUpdateOneWithoutReceiverWardOrganizationsNestedInput>;
  receiverWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repFullName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdCountryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPosition?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCodeStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type OrganizationUpdateWithoutInvestorBidNotificationsInput = {
  accountingType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  agencyName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  authenType?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorUpdateManyWithoutContractorNestedInput>;
  briefName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  budgetCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessType?: InputMaybe<CatBusinessTypeUpdateOneWithoutOrganizationsNestedInput>;
  businessTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  caRegister?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  chapterCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutProcuringEntityNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  enName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutInvestorNestedInput>;
  isAgencies?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  isBidderInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBidderInvite?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBiddingFacility?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isCompetentAuthorities?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isContractor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isForeignInvestor?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPlanInvest?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notificationContractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutContractorNestedInput>;
  officeAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeDistrict?: InputMaybe<CatAreaUpdateOneWithoutOfficeDistrictOrganizationsNestedInput>;
  officeDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officePhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeProvince?: InputMaybe<CatAreaUpdateOneWithoutOfficeProvinceOrganizationsNestedInput>;
  officeProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWard?: InputMaybe<CatAreaUpdateOneWithoutOfficeWardOrganizationsNestedInput>;
  officeWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWeb?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  oldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organizationBusiness?: InputMaybe<OrganizationBusinessUpdateManyWithoutOrganizationNestedInput>;
  proManagementUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntities?: InputMaybe<BidNotificationUpdateManyWithoutProcuringEntityNestedInput>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutProcuringEntityNestedInput>;
  projects?: InputMaybe<ProjectUpdateManyWithoutInvestorNestedInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverByOffice?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  receiverDistrict?: InputMaybe<CatAreaUpdateOneWithoutReceiverDistrictOrganizationsNestedInput>;
  receiverDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmailElecInvo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverProvince?: InputMaybe<CatAreaUpdateOneWithoutReceiverProvinceOrganizationsNestedInput>;
  receiverProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverWard?: InputMaybe<CatAreaUpdateOneWithoutReceiverWardOrganizationsNestedInput>;
  receiverWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repFullName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdCountryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPosition?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCodeStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type OrganizationUpdateWithoutInvestorBidSelectionPlansInput = {
  accountingType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  agencyName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  authenType?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorUpdateManyWithoutContractorNestedInput>;
  briefName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  budgetCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessType?: InputMaybe<CatBusinessTypeUpdateOneWithoutOrganizationsNestedInput>;
  businessTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  caRegister?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  chapterCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutProcuringEntityNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  enName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investorBidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutInvestorNestedInput>;
  isAgencies?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  isBidderInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBidderInvite?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBiddingFacility?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isCompetentAuthorities?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isContractor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isForeignInvestor?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPlanInvest?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notificationContractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutContractorNestedInput>;
  officeAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeDistrict?: InputMaybe<CatAreaUpdateOneWithoutOfficeDistrictOrganizationsNestedInput>;
  officeDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officePhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeProvince?: InputMaybe<CatAreaUpdateOneWithoutOfficeProvinceOrganizationsNestedInput>;
  officeProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWard?: InputMaybe<CatAreaUpdateOneWithoutOfficeWardOrganizationsNestedInput>;
  officeWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWeb?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  oldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organizationBusiness?: InputMaybe<OrganizationBusinessUpdateManyWithoutOrganizationNestedInput>;
  proManagementUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntities?: InputMaybe<BidNotificationUpdateManyWithoutProcuringEntityNestedInput>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutProcuringEntityNestedInput>;
  projects?: InputMaybe<ProjectUpdateManyWithoutInvestorNestedInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverByOffice?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  receiverDistrict?: InputMaybe<CatAreaUpdateOneWithoutReceiverDistrictOrganizationsNestedInput>;
  receiverDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmailElecInvo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverProvince?: InputMaybe<CatAreaUpdateOneWithoutReceiverProvinceOrganizationsNestedInput>;
  receiverProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverWard?: InputMaybe<CatAreaUpdateOneWithoutReceiverWardOrganizationsNestedInput>;
  receiverWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repFullName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdCountryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPosition?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCodeStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type OrganizationUpdateWithoutNotificationContractorsInput = {
  accountingType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  agencyName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  authenType?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorUpdateManyWithoutContractorNestedInput>;
  briefName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  budgetCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessType?: InputMaybe<CatBusinessTypeUpdateOneWithoutOrganizationsNestedInput>;
  businessTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  caRegister?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  chapterCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutProcuringEntityNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  enName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investorBidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutInvestorNestedInput>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutInvestorNestedInput>;
  isAgencies?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  isBidderInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBidderInvite?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBiddingFacility?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isCompetentAuthorities?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isContractor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isForeignInvestor?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPlanInvest?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeDistrict?: InputMaybe<CatAreaUpdateOneWithoutOfficeDistrictOrganizationsNestedInput>;
  officeDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officePhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeProvince?: InputMaybe<CatAreaUpdateOneWithoutOfficeProvinceOrganizationsNestedInput>;
  officeProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWard?: InputMaybe<CatAreaUpdateOneWithoutOfficeWardOrganizationsNestedInput>;
  officeWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWeb?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  oldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organizationBusiness?: InputMaybe<OrganizationBusinessUpdateManyWithoutOrganizationNestedInput>;
  proManagementUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntities?: InputMaybe<BidNotificationUpdateManyWithoutProcuringEntityNestedInput>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutProcuringEntityNestedInput>;
  projects?: InputMaybe<ProjectUpdateManyWithoutInvestorNestedInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverByOffice?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  receiverDistrict?: InputMaybe<CatAreaUpdateOneWithoutReceiverDistrictOrganizationsNestedInput>;
  receiverDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmailElecInvo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverProvince?: InputMaybe<CatAreaUpdateOneWithoutReceiverProvinceOrganizationsNestedInput>;
  receiverProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverWard?: InputMaybe<CatAreaUpdateOneWithoutReceiverWardOrganizationsNestedInput>;
  receiverWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repFullName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdCountryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPosition?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCodeStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type OrganizationUpdateWithoutOfficeDistrictInput = {
  accountingType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  agencyName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  authenType?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorUpdateManyWithoutContractorNestedInput>;
  briefName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  budgetCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessType?: InputMaybe<CatBusinessTypeUpdateOneWithoutOrganizationsNestedInput>;
  businessTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  caRegister?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  chapterCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutProcuringEntityNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  enName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investorBidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutInvestorNestedInput>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutInvestorNestedInput>;
  isAgencies?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  isBidderInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBidderInvite?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBiddingFacility?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isCompetentAuthorities?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isContractor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isForeignInvestor?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPlanInvest?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notificationContractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutContractorNestedInput>;
  officeAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officePhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeProvince?: InputMaybe<CatAreaUpdateOneWithoutOfficeProvinceOrganizationsNestedInput>;
  officeProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWard?: InputMaybe<CatAreaUpdateOneWithoutOfficeWardOrganizationsNestedInput>;
  officeWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWeb?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  oldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organizationBusiness?: InputMaybe<OrganizationBusinessUpdateManyWithoutOrganizationNestedInput>;
  proManagementUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntities?: InputMaybe<BidNotificationUpdateManyWithoutProcuringEntityNestedInput>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutProcuringEntityNestedInput>;
  projects?: InputMaybe<ProjectUpdateManyWithoutInvestorNestedInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverByOffice?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  receiverDistrict?: InputMaybe<CatAreaUpdateOneWithoutReceiverDistrictOrganizationsNestedInput>;
  receiverDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmailElecInvo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverProvince?: InputMaybe<CatAreaUpdateOneWithoutReceiverProvinceOrganizationsNestedInput>;
  receiverProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverWard?: InputMaybe<CatAreaUpdateOneWithoutReceiverWardOrganizationsNestedInput>;
  receiverWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repFullName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdCountryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPosition?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCodeStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type OrganizationUpdateWithoutOfficeProvinceInput = {
  accountingType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  agencyName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  authenType?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorUpdateManyWithoutContractorNestedInput>;
  briefName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  budgetCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessType?: InputMaybe<CatBusinessTypeUpdateOneWithoutOrganizationsNestedInput>;
  businessTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  caRegister?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  chapterCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutProcuringEntityNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  enName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investorBidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutInvestorNestedInput>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutInvestorNestedInput>;
  isAgencies?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  isBidderInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBidderInvite?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBiddingFacility?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isCompetentAuthorities?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isContractor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isForeignInvestor?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPlanInvest?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notificationContractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutContractorNestedInput>;
  officeAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeDistrict?: InputMaybe<CatAreaUpdateOneWithoutOfficeDistrictOrganizationsNestedInput>;
  officeDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officePhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWard?: InputMaybe<CatAreaUpdateOneWithoutOfficeWardOrganizationsNestedInput>;
  officeWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWeb?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  oldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organizationBusiness?: InputMaybe<OrganizationBusinessUpdateManyWithoutOrganizationNestedInput>;
  proManagementUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntities?: InputMaybe<BidNotificationUpdateManyWithoutProcuringEntityNestedInput>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutProcuringEntityNestedInput>;
  projects?: InputMaybe<ProjectUpdateManyWithoutInvestorNestedInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverByOffice?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  receiverDistrict?: InputMaybe<CatAreaUpdateOneWithoutReceiverDistrictOrganizationsNestedInput>;
  receiverDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmailElecInvo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverProvince?: InputMaybe<CatAreaUpdateOneWithoutReceiverProvinceOrganizationsNestedInput>;
  receiverProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverWard?: InputMaybe<CatAreaUpdateOneWithoutReceiverWardOrganizationsNestedInput>;
  receiverWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repFullName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdCountryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPosition?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCodeStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type OrganizationUpdateWithoutOfficeWardInput = {
  accountingType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  agencyName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  authenType?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorUpdateManyWithoutContractorNestedInput>;
  briefName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  budgetCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessType?: InputMaybe<CatBusinessTypeUpdateOneWithoutOrganizationsNestedInput>;
  businessTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  caRegister?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  chapterCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutProcuringEntityNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  enName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investorBidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutInvestorNestedInput>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutInvestorNestedInput>;
  isAgencies?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  isBidderInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBidderInvite?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBiddingFacility?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isCompetentAuthorities?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isContractor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isForeignInvestor?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPlanInvest?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notificationContractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutContractorNestedInput>;
  officeAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeDistrict?: InputMaybe<CatAreaUpdateOneWithoutOfficeDistrictOrganizationsNestedInput>;
  officeDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officePhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeProvince?: InputMaybe<CatAreaUpdateOneWithoutOfficeProvinceOrganizationsNestedInput>;
  officeProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWeb?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  oldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organizationBusiness?: InputMaybe<OrganizationBusinessUpdateManyWithoutOrganizationNestedInput>;
  proManagementUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntities?: InputMaybe<BidNotificationUpdateManyWithoutProcuringEntityNestedInput>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutProcuringEntityNestedInput>;
  projects?: InputMaybe<ProjectUpdateManyWithoutInvestorNestedInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverByOffice?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  receiverDistrict?: InputMaybe<CatAreaUpdateOneWithoutReceiverDistrictOrganizationsNestedInput>;
  receiverDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmailElecInvo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverProvince?: InputMaybe<CatAreaUpdateOneWithoutReceiverProvinceOrganizationsNestedInput>;
  receiverProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverWard?: InputMaybe<CatAreaUpdateOneWithoutReceiverWardOrganizationsNestedInput>;
  receiverWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repFullName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdCountryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPosition?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCodeStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type OrganizationUpdateWithoutOrganizationBusinessInput = {
  accountingType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  agencyName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  authenType?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorUpdateManyWithoutContractorNestedInput>;
  briefName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  budgetCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessType?: InputMaybe<CatBusinessTypeUpdateOneWithoutOrganizationsNestedInput>;
  businessTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  caRegister?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  chapterCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutProcuringEntityNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  enName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investorBidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutInvestorNestedInput>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutInvestorNestedInput>;
  isAgencies?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  isBidderInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBidderInvite?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBiddingFacility?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isCompetentAuthorities?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isContractor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isForeignInvestor?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPlanInvest?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notificationContractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutContractorNestedInput>;
  officeAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeDistrict?: InputMaybe<CatAreaUpdateOneWithoutOfficeDistrictOrganizationsNestedInput>;
  officeDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officePhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeProvince?: InputMaybe<CatAreaUpdateOneWithoutOfficeProvinceOrganizationsNestedInput>;
  officeProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWard?: InputMaybe<CatAreaUpdateOneWithoutOfficeWardOrganizationsNestedInput>;
  officeWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWeb?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  oldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  proManagementUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntities?: InputMaybe<BidNotificationUpdateManyWithoutProcuringEntityNestedInput>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutProcuringEntityNestedInput>;
  projects?: InputMaybe<ProjectUpdateManyWithoutInvestorNestedInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverByOffice?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  receiverDistrict?: InputMaybe<CatAreaUpdateOneWithoutReceiverDistrictOrganizationsNestedInput>;
  receiverDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmailElecInvo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverProvince?: InputMaybe<CatAreaUpdateOneWithoutReceiverProvinceOrganizationsNestedInput>;
  receiverProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverWard?: InputMaybe<CatAreaUpdateOneWithoutReceiverWardOrganizationsNestedInput>;
  receiverWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repFullName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdCountryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPosition?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCodeStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type OrganizationUpdateWithoutProcuringEntitiesInput = {
  accountingType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  agencyName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  authenType?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorUpdateManyWithoutContractorNestedInput>;
  briefName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  budgetCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessType?: InputMaybe<CatBusinessTypeUpdateOneWithoutOrganizationsNestedInput>;
  businessTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  caRegister?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  chapterCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutProcuringEntityNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  enName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investorBidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutInvestorNestedInput>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutInvestorNestedInput>;
  isAgencies?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  isBidderInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBidderInvite?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBiddingFacility?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isCompetentAuthorities?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isContractor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isForeignInvestor?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPlanInvest?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notificationContractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutContractorNestedInput>;
  officeAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeDistrict?: InputMaybe<CatAreaUpdateOneWithoutOfficeDistrictOrganizationsNestedInput>;
  officeDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officePhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeProvince?: InputMaybe<CatAreaUpdateOneWithoutOfficeProvinceOrganizationsNestedInput>;
  officeProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWard?: InputMaybe<CatAreaUpdateOneWithoutOfficeWardOrganizationsNestedInput>;
  officeWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWeb?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  oldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organizationBusiness?: InputMaybe<OrganizationBusinessUpdateManyWithoutOrganizationNestedInput>;
  proManagementUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutProcuringEntityNestedInput>;
  projects?: InputMaybe<ProjectUpdateManyWithoutInvestorNestedInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverByOffice?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  receiverDistrict?: InputMaybe<CatAreaUpdateOneWithoutReceiverDistrictOrganizationsNestedInput>;
  receiverDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmailElecInvo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverProvince?: InputMaybe<CatAreaUpdateOneWithoutReceiverProvinceOrganizationsNestedInput>;
  receiverProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverWard?: InputMaybe<CatAreaUpdateOneWithoutReceiverWardOrganizationsNestedInput>;
  receiverWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repFullName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdCountryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPosition?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCodeStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type OrganizationUpdateWithoutProcuringEntityBidSelectionPlansInput = {
  accountingType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  agencyName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  authenType?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorUpdateManyWithoutContractorNestedInput>;
  briefName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  budgetCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessType?: InputMaybe<CatBusinessTypeUpdateOneWithoutOrganizationsNestedInput>;
  businessTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  caRegister?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  chapterCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutProcuringEntityNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  enName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investorBidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutInvestorNestedInput>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutInvestorNestedInput>;
  isAgencies?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  isBidderInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBidderInvite?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBiddingFacility?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isCompetentAuthorities?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isContractor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isForeignInvestor?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPlanInvest?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notificationContractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutContractorNestedInput>;
  officeAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeDistrict?: InputMaybe<CatAreaUpdateOneWithoutOfficeDistrictOrganizationsNestedInput>;
  officeDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officePhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeProvince?: InputMaybe<CatAreaUpdateOneWithoutOfficeProvinceOrganizationsNestedInput>;
  officeProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWard?: InputMaybe<CatAreaUpdateOneWithoutOfficeWardOrganizationsNestedInput>;
  officeWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWeb?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  oldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organizationBusiness?: InputMaybe<OrganizationBusinessUpdateManyWithoutOrganizationNestedInput>;
  proManagementUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntities?: InputMaybe<BidNotificationUpdateManyWithoutProcuringEntityNestedInput>;
  projects?: InputMaybe<ProjectUpdateManyWithoutInvestorNestedInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverByOffice?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  receiverDistrict?: InputMaybe<CatAreaUpdateOneWithoutReceiverDistrictOrganizationsNestedInput>;
  receiverDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmailElecInvo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverProvince?: InputMaybe<CatAreaUpdateOneWithoutReceiverProvinceOrganizationsNestedInput>;
  receiverProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverWard?: InputMaybe<CatAreaUpdateOneWithoutReceiverWardOrganizationsNestedInput>;
  receiverWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repFullName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdCountryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPosition?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCodeStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type OrganizationUpdateWithoutProjectsInput = {
  accountingType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  agencyName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  authenType?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorUpdateManyWithoutContractorNestedInput>;
  briefName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  budgetCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessType?: InputMaybe<CatBusinessTypeUpdateOneWithoutOrganizationsNestedInput>;
  businessTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  caRegister?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  chapterCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutProcuringEntityNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  enName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investorBidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutInvestorNestedInput>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutInvestorNestedInput>;
  isAgencies?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  isBidderInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBidderInvite?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBiddingFacility?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isCompetentAuthorities?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isContractor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isForeignInvestor?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPlanInvest?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notificationContractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutContractorNestedInput>;
  officeAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeDistrict?: InputMaybe<CatAreaUpdateOneWithoutOfficeDistrictOrganizationsNestedInput>;
  officeDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officePhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeProvince?: InputMaybe<CatAreaUpdateOneWithoutOfficeProvinceOrganizationsNestedInput>;
  officeProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWard?: InputMaybe<CatAreaUpdateOneWithoutOfficeWardOrganizationsNestedInput>;
  officeWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWeb?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  oldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organizationBusiness?: InputMaybe<OrganizationBusinessUpdateManyWithoutOrganizationNestedInput>;
  proManagementUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntities?: InputMaybe<BidNotificationUpdateManyWithoutProcuringEntityNestedInput>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutProcuringEntityNestedInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverByOffice?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  receiverDistrict?: InputMaybe<CatAreaUpdateOneWithoutReceiverDistrictOrganizationsNestedInput>;
  receiverDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmailElecInvo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverProvince?: InputMaybe<CatAreaUpdateOneWithoutReceiverProvinceOrganizationsNestedInput>;
  receiverProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverWard?: InputMaybe<CatAreaUpdateOneWithoutReceiverWardOrganizationsNestedInput>;
  receiverWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repFullName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdCountryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPosition?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCodeStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type OrganizationUpdateWithoutReceiverDistrictInput = {
  accountingType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  agencyName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  authenType?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorUpdateManyWithoutContractorNestedInput>;
  briefName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  budgetCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessType?: InputMaybe<CatBusinessTypeUpdateOneWithoutOrganizationsNestedInput>;
  businessTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  caRegister?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  chapterCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutProcuringEntityNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  enName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investorBidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutInvestorNestedInput>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutInvestorNestedInput>;
  isAgencies?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  isBidderInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBidderInvite?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBiddingFacility?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isCompetentAuthorities?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isContractor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isForeignInvestor?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPlanInvest?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notificationContractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutContractorNestedInput>;
  officeAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeDistrict?: InputMaybe<CatAreaUpdateOneWithoutOfficeDistrictOrganizationsNestedInput>;
  officeDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officePhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeProvince?: InputMaybe<CatAreaUpdateOneWithoutOfficeProvinceOrganizationsNestedInput>;
  officeProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWard?: InputMaybe<CatAreaUpdateOneWithoutOfficeWardOrganizationsNestedInput>;
  officeWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWeb?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  oldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organizationBusiness?: InputMaybe<OrganizationBusinessUpdateManyWithoutOrganizationNestedInput>;
  proManagementUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntities?: InputMaybe<BidNotificationUpdateManyWithoutProcuringEntityNestedInput>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutProcuringEntityNestedInput>;
  projects?: InputMaybe<ProjectUpdateManyWithoutInvestorNestedInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverByOffice?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  receiverDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmailElecInvo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverProvince?: InputMaybe<CatAreaUpdateOneWithoutReceiverProvinceOrganizationsNestedInput>;
  receiverProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverWard?: InputMaybe<CatAreaUpdateOneWithoutReceiverWardOrganizationsNestedInput>;
  receiverWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repFullName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdCountryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPosition?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCodeStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type OrganizationUpdateWithoutReceiverProvinceInput = {
  accountingType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  agencyName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  authenType?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorUpdateManyWithoutContractorNestedInput>;
  briefName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  budgetCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessType?: InputMaybe<CatBusinessTypeUpdateOneWithoutOrganizationsNestedInput>;
  businessTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  caRegister?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  chapterCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutProcuringEntityNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  enName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investorBidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutInvestorNestedInput>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutInvestorNestedInput>;
  isAgencies?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  isBidderInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBidderInvite?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBiddingFacility?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isCompetentAuthorities?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isContractor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isForeignInvestor?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPlanInvest?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notificationContractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutContractorNestedInput>;
  officeAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeDistrict?: InputMaybe<CatAreaUpdateOneWithoutOfficeDistrictOrganizationsNestedInput>;
  officeDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officePhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeProvince?: InputMaybe<CatAreaUpdateOneWithoutOfficeProvinceOrganizationsNestedInput>;
  officeProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWard?: InputMaybe<CatAreaUpdateOneWithoutOfficeWardOrganizationsNestedInput>;
  officeWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWeb?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  oldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organizationBusiness?: InputMaybe<OrganizationBusinessUpdateManyWithoutOrganizationNestedInput>;
  proManagementUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntities?: InputMaybe<BidNotificationUpdateManyWithoutProcuringEntityNestedInput>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutProcuringEntityNestedInput>;
  projects?: InputMaybe<ProjectUpdateManyWithoutInvestorNestedInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverByOffice?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  receiverDistrict?: InputMaybe<CatAreaUpdateOneWithoutReceiverDistrictOrganizationsNestedInput>;
  receiverDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmailElecInvo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverWard?: InputMaybe<CatAreaUpdateOneWithoutReceiverWardOrganizationsNestedInput>;
  receiverWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repFullName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdCountryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPosition?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCodeStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type OrganizationUpdateWithoutReceiverWardInput = {
  accountingType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  agencyName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  authenType?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorUpdateManyWithoutContractorNestedInput>;
  briefName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  budgetCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businessType?: InputMaybe<CatBusinessTypeUpdateOneWithoutOrganizationsNestedInput>;
  businessTypeCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  caRegister?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  chapterCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileUpdateManyWithoutProcuringEntityNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  enName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investorBidNotifications?: InputMaybe<BidNotificationUpdateManyWithoutInvestorNestedInput>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutInvestorNestedInput>;
  isAgencies?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  isBidderInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBidderInvite?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isBiddingFacility?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isCompetentAuthorities?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isContractor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isForeignInvestor?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isInvestor?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isPlanInvest?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notificationContractors?: InputMaybe<BidNotificationContractorUpdateManyWithoutContractorNestedInput>;
  officeAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeDistrict?: InputMaybe<CatAreaUpdateOneWithoutOfficeDistrictOrganizationsNestedInput>;
  officeDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officePhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeProvince?: InputMaybe<CatAreaUpdateOneWithoutOfficeProvinceOrganizationsNestedInput>;
  officeProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWard?: InputMaybe<CatAreaUpdateOneWithoutOfficeWardOrganizationsNestedInput>;
  officeWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeWeb?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  officeZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  oldCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  organizationBusiness?: InputMaybe<OrganizationBusinessUpdateManyWithoutOrganizationNestedInput>;
  proManagementUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  procuringEntities?: InputMaybe<BidNotificationUpdateManyWithoutProcuringEntityNestedInput>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutProcuringEntityNestedInput>;
  projects?: InputMaybe<ProjectUpdateManyWithoutInvestorNestedInput>;
  rawFiles?: InputMaybe<Scalars['JSON']['input']>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverByOffice?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  receiverDistrict?: InputMaybe<CatAreaUpdateOneWithoutReceiverDistrictOrganizationsNestedInput>;
  receiverDistrictCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverEmailElecInvo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverProvince?: InputMaybe<CatAreaUpdateOneWithoutReceiverProvinceOrganizationsNestedInput>;
  receiverProvinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverWardCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  receiverZipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repEmail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repFullName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdCountryCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdDate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repIdType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  repPosition?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxCodeStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type OrganizationUpsertWithWhereUniqueWithoutOfficeDistrictInput = {
  create: OrganizationCreateWithoutOfficeDistrictInput;
  update: OrganizationUpdateWithoutOfficeDistrictInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationUpsertWithWhereUniqueWithoutOfficeProvinceInput = {
  create: OrganizationCreateWithoutOfficeProvinceInput;
  update: OrganizationUpdateWithoutOfficeProvinceInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationUpsertWithWhereUniqueWithoutOfficeWardInput = {
  create: OrganizationCreateWithoutOfficeWardInput;
  update: OrganizationUpdateWithoutOfficeWardInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationUpsertWithWhereUniqueWithoutReceiverDistrictInput = {
  create: OrganizationCreateWithoutReceiverDistrictInput;
  update: OrganizationUpdateWithoutReceiverDistrictInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationUpsertWithWhereUniqueWithoutReceiverProvinceInput = {
  create: OrganizationCreateWithoutReceiverProvinceInput;
  update: OrganizationUpdateWithoutReceiverProvinceInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationUpsertWithWhereUniqueWithoutReceiverWardInput = {
  create: OrganizationCreateWithoutReceiverWardInput;
  update: OrganizationUpdateWithoutReceiverWardInput;
  where: OrganizationWhereUniqueInput;
};

export type OrganizationUpsertWithoutBidPetitionContractorsInput = {
  create: OrganizationCreateWithoutBidPetitionContractorsInput;
  update: OrganizationUpdateWithoutBidPetitionContractorsInput;
};

export type OrganizationUpsertWithoutChapterFilesInput = {
  create: OrganizationCreateWithoutChapterFilesInput;
  update: OrganizationUpdateWithoutChapterFilesInput;
};

export type OrganizationUpsertWithoutInvestorBidNotificationsInput = {
  create: OrganizationCreateWithoutInvestorBidNotificationsInput;
  update: OrganizationUpdateWithoutInvestorBidNotificationsInput;
};

export type OrganizationUpsertWithoutInvestorBidSelectionPlansInput = {
  create: OrganizationCreateWithoutInvestorBidSelectionPlansInput;
  update: OrganizationUpdateWithoutInvestorBidSelectionPlansInput;
};

export type OrganizationUpsertWithoutNotificationContractorsInput = {
  create: OrganizationCreateWithoutNotificationContractorsInput;
  update: OrganizationUpdateWithoutNotificationContractorsInput;
};

export type OrganizationUpsertWithoutOrganizationBusinessInput = {
  create: OrganizationCreateWithoutOrganizationBusinessInput;
  update: OrganizationUpdateWithoutOrganizationBusinessInput;
};

export type OrganizationUpsertWithoutProcuringEntitiesInput = {
  create: OrganizationCreateWithoutProcuringEntitiesInput;
  update: OrganizationUpdateWithoutProcuringEntitiesInput;
};

export type OrganizationUpsertWithoutProcuringEntityBidSelectionPlansInput = {
  create: OrganizationCreateWithoutProcuringEntityBidSelectionPlansInput;
  update: OrganizationUpdateWithoutProcuringEntityBidSelectionPlansInput;
};

export type OrganizationUpsertWithoutProjectsInput = {
  create: OrganizationCreateWithoutProjectsInput;
  update: OrganizationUpdateWithoutProjectsInput;
};

export type OrganizationWhereInput = {
  AND?: InputMaybe<Array<OrganizationWhereInput>>;
  NOT?: InputMaybe<Array<OrganizationWhereInput>>;
  OR?: InputMaybe<Array<OrganizationWhereInput>>;
  accountingType?: InputMaybe<StringNullableFilter>;
  agencyName?: InputMaybe<StringNullableFilter>;
  authenType?: InputMaybe<IntNullableFilter>;
  bidPetitionContractors?: InputMaybe<BidPetitionContractorListRelationFilter>;
  briefName?: InputMaybe<StringNullableFilter>;
  budgetCode?: InputMaybe<StringNullableFilter>;
  businessStatus?: InputMaybe<StringNullableFilter>;
  businessType?: InputMaybe<CatBusinessTypeWhereInput>;
  businessTypeCode?: InputMaybe<StringNullableFilter>;
  businessTypeId?: InputMaybe<StringNullableFilter>;
  caRegister?: InputMaybe<BoolNullableFilter>;
  chapterCode?: InputMaybe<StringNullableFilter>;
  chapterFiles?: InputMaybe<BidNotificationChapterFileListRelationFilter>;
  code?: InputMaybe<StringNullableFilter>;
  countryCode?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  enName?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  investorBidNotifications?: InputMaybe<BidNotificationListRelationFilter>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanListRelationFilter>;
  isAgencies?: InputMaybe<IntNullableFilter>;
  isBidderInvestor?: InputMaybe<BoolFilter>;
  isBidderInvite?: InputMaybe<BoolFilter>;
  isBiddingFacility?: InputMaybe<BoolFilter>;
  isCompetentAuthorities?: InputMaybe<BoolFilter>;
  isContractor?: InputMaybe<BoolFilter>;
  isForeignInvestor?: InputMaybe<BoolNullableFilter>;
  isInvestor?: InputMaybe<BoolFilter>;
  isPlanInvest?: InputMaybe<IntNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  notificationContractors?: InputMaybe<BidNotificationContractorListRelationFilter>;
  officeAddress?: InputMaybe<StringNullableFilter>;
  officeDistrict?: InputMaybe<CatAreaWhereInput>;
  officeDistrictCode?: InputMaybe<StringNullableFilter>;
  officeDistrictId?: InputMaybe<StringNullableFilter>;
  officePhone?: InputMaybe<StringNullableFilter>;
  officeProvince?: InputMaybe<CatAreaWhereInput>;
  officeProvinceCode?: InputMaybe<StringNullableFilter>;
  officeProvinceId?: InputMaybe<StringNullableFilter>;
  officeWard?: InputMaybe<CatAreaWhereInput>;
  officeWardCode?: InputMaybe<StringNullableFilter>;
  officeWardId?: InputMaybe<StringNullableFilter>;
  officeWeb?: InputMaybe<StringNullableFilter>;
  officeZipcode?: InputMaybe<StringNullableFilter>;
  oldCode?: InputMaybe<StringNullableFilter>;
  organizationBusiness?: InputMaybe<OrganizationBusinessListRelationFilter>;
  proManagementUnit?: InputMaybe<StringNullableFilter>;
  procuringEntities?: InputMaybe<BidNotificationListRelationFilter>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanListRelationFilter>;
  projects?: InputMaybe<ProjectListRelationFilter>;
  rawFiles?: InputMaybe<JsonNullableFilter>;
  reason?: InputMaybe<StringNullableFilter>;
  receiverAddress?: InputMaybe<StringNullableFilter>;
  receiverByOffice?: InputMaybe<IntNullableFilter>;
  receiverDistrict?: InputMaybe<CatAreaWhereInput>;
  receiverDistrictCode?: InputMaybe<StringNullableFilter>;
  receiverDistrictId?: InputMaybe<StringNullableFilter>;
  receiverEmail?: InputMaybe<StringNullableFilter>;
  receiverEmailElecInvo?: InputMaybe<StringNullableFilter>;
  receiverIdDate?: InputMaybe<StringNullableFilter>;
  receiverIdNo?: InputMaybe<StringNullableFilter>;
  receiverName?: InputMaybe<StringNullableFilter>;
  receiverPhone?: InputMaybe<StringNullableFilter>;
  receiverProvince?: InputMaybe<CatAreaWhereInput>;
  receiverProvinceCode?: InputMaybe<StringNullableFilter>;
  receiverProvinceId?: InputMaybe<StringNullableFilter>;
  receiverWard?: InputMaybe<CatAreaWhereInput>;
  receiverWardCode?: InputMaybe<StringNullableFilter>;
  receiverWardId?: InputMaybe<StringNullableFilter>;
  receiverZipcode?: InputMaybe<StringNullableFilter>;
  repEmail?: InputMaybe<StringNullableFilter>;
  repFullName?: InputMaybe<StringNullableFilter>;
  repIdCountryCode?: InputMaybe<StringNullableFilter>;
  repIdDate?: InputMaybe<StringNullableFilter>;
  repIdNo?: InputMaybe<StringNullableFilter>;
  repIdType?: InputMaybe<StringNullableFilter>;
  repPhone?: InputMaybe<StringNullableFilter>;
  repPosition?: InputMaybe<StringNullableFilter>;
  taxCode?: InputMaybe<StringNullableFilter>;
  taxCodeStatus?: InputMaybe<StringNullableFilter>;
  taxDate?: InputMaybe<DateTimeNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
};

export type OrganizationWhereUniqueInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
};

export type PageInfo = {
  __typename?: 'PageInfo';
  endCursor?: Maybe<Scalars['String']['output']>;
  hasNextPage: Scalars['Boolean']['output'];
  hasPreviousPage: Scalars['Boolean']['output'];
  startCursor?: Maybe<Scalars['String']['output']>;
};

export type Project = {
  __typename?: 'Project';
  _count: ProjectCount;
  bidSelectionPlans?: Maybe<Array<BidSelectionPlan>>;
  code?: Maybe<Scalars['String']['output']>;
  competentPerson?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  decisionAgency?: Maybe<Scalars['String']['output']>;
  decisionDate?: Maybe<Scalars['DateTime']['output']>;
  decisionFileId?: Maybe<Scalars['String']['output']>;
  decisionFileName?: Maybe<Scalars['String']['output']>;
  decisionNo?: Maybe<Scalars['String']['output']>;
  deletedAt?: Maybe<Scalars['DateTime']['output']>;
  district?: Maybe<CatArea>;
  districtCode?: Maybe<Scalars['String']['output']>;
  districtId?: Maybe<Scalars['String']['output']>;
  group?: Maybe<CatProjectGroup>;
  groupCode?: Maybe<Scalars['String']['output']>;
  groupId?: Maybe<Scalars['String']['output']>;
  groupName?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  investmentForm?: Maybe<CatInvestmentForm>;
  investmentFormCode?: Maybe<Scalars['String']['output']>;
  investmentFormId?: Maybe<Scalars['String']['output']>;
  investmentScale?: Maybe<Scalars['String']['output']>;
  investmentTarget?: Maybe<Scalars['String']['output']>;
  investor?: Maybe<Organization>;
  investorCode?: Maybe<Scalars['String']['output']>;
  investorId?: Maybe<Scalars['String']['output']>;
  investorName?: Maybe<Scalars['String']['output']>;
  isLatest: Scalars['Boolean']['output'];
  isOda: Scalars['Boolean']['output'];
  listPlanCode?: Maybe<Scalars['String']['output']>;
  managementForm?: Maybe<CatProjectManagementForm>;
  managementFormCode?: Maybe<Scalars['String']['output']>;
  managementFormId?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  period?: Maybe<Scalars['Int']['output']>;
  periodUnit?: Maybe<Scalars['String']['output']>;
  province?: Maybe<CatArea>;
  provinceCode?: Maybe<Scalars['String']['output']>;
  provinceId?: Maybe<Scalars['String']['output']>;
  publishedAt?: Maybe<Scalars['DateTime']['output']>;
  reciprocalCapital?: Maybe<Scalars['Decimal']['output']>;
  reciprocalCapitalUnit?: Maybe<Scalars['String']['output']>;
  status?: Maybe<CatProjectStatus>;
  statusCode?: Maybe<Scalars['String']['output']>;
  statusId?: Maybe<Scalars['String']['output']>;
  totalInvestment?: Maybe<Scalars['Decimal']['output']>;
  totalInvestmentEx?: Maybe<Scalars['Decimal']['output']>;
  totalInvestmentUnit?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  updatedBy?: Maybe<Scalars['String']['output']>;
  version?: Maybe<Scalars['String']['output']>;
};

export type ProjectConnection = {
  __typename?: 'ProjectConnection';
  nodes?: Maybe<Array<Project>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type ProjectCount = {
  __typename?: 'ProjectCount';
  bidSelectionPlans: Scalars['Int']['output'];
};

export type ProjectCreateInput = {
  bidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutProjectInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  competentPerson?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  district?: InputMaybe<CatAreaCreateNestedOneWithoutDistrictProjectsInput>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<CatProjectGroupCreateNestedOneWithoutGroupProjectsInput>;
  groupCode?: InputMaybe<Scalars['String']['input']>;
  groupName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investmentForm?: InputMaybe<CatInvestmentFormCreateNestedOneWithoutProjectsInput>;
  investmentFormCode?: InputMaybe<Scalars['String']['input']>;
  investmentScale?: InputMaybe<Scalars['String']['input']>;
  investmentTarget?: InputMaybe<Scalars['String']['input']>;
  investor?: InputMaybe<OrganizationCreateNestedOneWithoutProjectsInput>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isOda?: InputMaybe<Scalars['Boolean']['input']>;
  listPlanCode?: InputMaybe<Scalars['String']['input']>;
  managementForm?: InputMaybe<CatProjectManagementFormCreateNestedOneWithoutProjectsInput>;
  managementFormCode?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  period?: InputMaybe<Scalars['Int']['input']>;
  periodUnit?: InputMaybe<Scalars['String']['input']>;
  province?: InputMaybe<CatAreaCreateNestedOneWithoutProvinceProjectsInput>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['Decimal']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<CatProjectStatusCreateNestedOneWithoutProjectsInput>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  totalInvestment?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentEx?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentUnit?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type ProjectCreateManyDistrictInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  competentPerson?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  groupCode?: InputMaybe<Scalars['String']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  groupName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investmentFormCode?: InputMaybe<Scalars['String']['input']>;
  investmentFormId?: InputMaybe<Scalars['String']['input']>;
  investmentScale?: InputMaybe<Scalars['String']['input']>;
  investmentTarget?: InputMaybe<Scalars['String']['input']>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorId?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isOda?: InputMaybe<Scalars['Boolean']['input']>;
  listPlanCode?: InputMaybe<Scalars['String']['input']>;
  managementFormCode?: InputMaybe<Scalars['String']['input']>;
  managementFormId?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  period?: InputMaybe<Scalars['Int']['input']>;
  periodUnit?: InputMaybe<Scalars['String']['input']>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  provinceId?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['Decimal']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  statusId?: InputMaybe<Scalars['String']['input']>;
  totalInvestment?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentEx?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentUnit?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type ProjectCreateManyDistrictInputEnvelope = {
  data: Array<ProjectCreateManyDistrictInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ProjectCreateManyGroupInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  competentPerson?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  districtId?: InputMaybe<Scalars['String']['input']>;
  groupCode?: InputMaybe<Scalars['String']['input']>;
  groupName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investmentFormCode?: InputMaybe<Scalars['String']['input']>;
  investmentFormId?: InputMaybe<Scalars['String']['input']>;
  investmentScale?: InputMaybe<Scalars['String']['input']>;
  investmentTarget?: InputMaybe<Scalars['String']['input']>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorId?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isOda?: InputMaybe<Scalars['Boolean']['input']>;
  listPlanCode?: InputMaybe<Scalars['String']['input']>;
  managementFormCode?: InputMaybe<Scalars['String']['input']>;
  managementFormId?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  period?: InputMaybe<Scalars['Int']['input']>;
  periodUnit?: InputMaybe<Scalars['String']['input']>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  provinceId?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['Decimal']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  statusId?: InputMaybe<Scalars['String']['input']>;
  totalInvestment?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentEx?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentUnit?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type ProjectCreateManyGroupInputEnvelope = {
  data: Array<ProjectCreateManyGroupInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ProjectCreateManyInvestmentFormInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  competentPerson?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  districtId?: InputMaybe<Scalars['String']['input']>;
  groupCode?: InputMaybe<Scalars['String']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  groupName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investmentFormCode?: InputMaybe<Scalars['String']['input']>;
  investmentScale?: InputMaybe<Scalars['String']['input']>;
  investmentTarget?: InputMaybe<Scalars['String']['input']>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorId?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isOda?: InputMaybe<Scalars['Boolean']['input']>;
  listPlanCode?: InputMaybe<Scalars['String']['input']>;
  managementFormCode?: InputMaybe<Scalars['String']['input']>;
  managementFormId?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  period?: InputMaybe<Scalars['Int']['input']>;
  periodUnit?: InputMaybe<Scalars['String']['input']>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  provinceId?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['Decimal']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  statusId?: InputMaybe<Scalars['String']['input']>;
  totalInvestment?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentEx?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentUnit?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type ProjectCreateManyInvestmentFormInputEnvelope = {
  data: Array<ProjectCreateManyInvestmentFormInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ProjectCreateManyInvestorInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  competentPerson?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  districtId?: InputMaybe<Scalars['String']['input']>;
  groupCode?: InputMaybe<Scalars['String']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  groupName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investmentFormCode?: InputMaybe<Scalars['String']['input']>;
  investmentFormId?: InputMaybe<Scalars['String']['input']>;
  investmentScale?: InputMaybe<Scalars['String']['input']>;
  investmentTarget?: InputMaybe<Scalars['String']['input']>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isOda?: InputMaybe<Scalars['Boolean']['input']>;
  listPlanCode?: InputMaybe<Scalars['String']['input']>;
  managementFormCode?: InputMaybe<Scalars['String']['input']>;
  managementFormId?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  period?: InputMaybe<Scalars['Int']['input']>;
  periodUnit?: InputMaybe<Scalars['String']['input']>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  provinceId?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['Decimal']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  statusId?: InputMaybe<Scalars['String']['input']>;
  totalInvestment?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentEx?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentUnit?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type ProjectCreateManyInvestorInputEnvelope = {
  data: Array<ProjectCreateManyInvestorInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ProjectCreateManyManagementFormInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  competentPerson?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  districtId?: InputMaybe<Scalars['String']['input']>;
  groupCode?: InputMaybe<Scalars['String']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  groupName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investmentFormCode?: InputMaybe<Scalars['String']['input']>;
  investmentFormId?: InputMaybe<Scalars['String']['input']>;
  investmentScale?: InputMaybe<Scalars['String']['input']>;
  investmentTarget?: InputMaybe<Scalars['String']['input']>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorId?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isOda?: InputMaybe<Scalars['Boolean']['input']>;
  listPlanCode?: InputMaybe<Scalars['String']['input']>;
  managementFormCode?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  period?: InputMaybe<Scalars['Int']['input']>;
  periodUnit?: InputMaybe<Scalars['String']['input']>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  provinceId?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['Decimal']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  statusId?: InputMaybe<Scalars['String']['input']>;
  totalInvestment?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentEx?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentUnit?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type ProjectCreateManyManagementFormInputEnvelope = {
  data: Array<ProjectCreateManyManagementFormInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ProjectCreateManyProvinceInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  competentPerson?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  districtId?: InputMaybe<Scalars['String']['input']>;
  groupCode?: InputMaybe<Scalars['String']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  groupName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investmentFormCode?: InputMaybe<Scalars['String']['input']>;
  investmentFormId?: InputMaybe<Scalars['String']['input']>;
  investmentScale?: InputMaybe<Scalars['String']['input']>;
  investmentTarget?: InputMaybe<Scalars['String']['input']>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorId?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isOda?: InputMaybe<Scalars['Boolean']['input']>;
  listPlanCode?: InputMaybe<Scalars['String']['input']>;
  managementFormCode?: InputMaybe<Scalars['String']['input']>;
  managementFormId?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  period?: InputMaybe<Scalars['Int']['input']>;
  periodUnit?: InputMaybe<Scalars['String']['input']>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['Decimal']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  statusId?: InputMaybe<Scalars['String']['input']>;
  totalInvestment?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentEx?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentUnit?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type ProjectCreateManyProvinceInputEnvelope = {
  data: Array<ProjectCreateManyProvinceInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ProjectCreateNestedManyWithoutDistrictInput = {
  connect?: InputMaybe<Array<ProjectWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProjectCreateOrConnectWithoutDistrictInput>>;
  create?: InputMaybe<Array<ProjectCreateWithoutDistrictInput>>;
  createMany?: InputMaybe<ProjectCreateManyDistrictInputEnvelope>;
};

export type ProjectCreateNestedManyWithoutGroupInput = {
  connect?: InputMaybe<Array<ProjectWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProjectCreateOrConnectWithoutGroupInput>>;
  create?: InputMaybe<Array<ProjectCreateWithoutGroupInput>>;
  createMany?: InputMaybe<ProjectCreateManyGroupInputEnvelope>;
};

export type ProjectCreateNestedManyWithoutInvestmentFormInput = {
  connect?: InputMaybe<Array<ProjectWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProjectCreateOrConnectWithoutInvestmentFormInput>>;
  create?: InputMaybe<Array<ProjectCreateWithoutInvestmentFormInput>>;
  createMany?: InputMaybe<ProjectCreateManyInvestmentFormInputEnvelope>;
};

export type ProjectCreateNestedManyWithoutInvestorInput = {
  connect?: InputMaybe<Array<ProjectWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProjectCreateOrConnectWithoutInvestorInput>>;
  create?: InputMaybe<Array<ProjectCreateWithoutInvestorInput>>;
  createMany?: InputMaybe<ProjectCreateManyInvestorInputEnvelope>;
};

export type ProjectCreateNestedManyWithoutManagementFormInput = {
  connect?: InputMaybe<Array<ProjectWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProjectCreateOrConnectWithoutManagementFormInput>>;
  create?: InputMaybe<Array<ProjectCreateWithoutManagementFormInput>>;
  createMany?: InputMaybe<ProjectCreateManyManagementFormInputEnvelope>;
};

export type ProjectCreateNestedManyWithoutProvinceInput = {
  connect?: InputMaybe<Array<ProjectWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProjectCreateOrConnectWithoutProvinceInput>>;
  create?: InputMaybe<Array<ProjectCreateWithoutProvinceInput>>;
  createMany?: InputMaybe<ProjectCreateManyProvinceInputEnvelope>;
};

export type ProjectCreateNestedOneWithoutBidSelectionPlansInput = {
  connect?: InputMaybe<ProjectWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProjectCreateOrConnectWithoutBidSelectionPlansInput>;
  create?: InputMaybe<ProjectCreateWithoutBidSelectionPlansInput>;
};

export type ProjectCreateOrConnectWithoutBidSelectionPlansInput = {
  create: ProjectCreateWithoutBidSelectionPlansInput;
  where: ProjectWhereUniqueInput;
};

export type ProjectCreateOrConnectWithoutDistrictInput = {
  create: ProjectCreateWithoutDistrictInput;
  where: ProjectWhereUniqueInput;
};

export type ProjectCreateOrConnectWithoutGroupInput = {
  create: ProjectCreateWithoutGroupInput;
  where: ProjectWhereUniqueInput;
};

export type ProjectCreateOrConnectWithoutInvestmentFormInput = {
  create: ProjectCreateWithoutInvestmentFormInput;
  where: ProjectWhereUniqueInput;
};

export type ProjectCreateOrConnectWithoutInvestorInput = {
  create: ProjectCreateWithoutInvestorInput;
  where: ProjectWhereUniqueInput;
};

export type ProjectCreateOrConnectWithoutManagementFormInput = {
  create: ProjectCreateWithoutManagementFormInput;
  where: ProjectWhereUniqueInput;
};

export type ProjectCreateOrConnectWithoutProvinceInput = {
  create: ProjectCreateWithoutProvinceInput;
  where: ProjectWhereUniqueInput;
};

export type ProjectCreateWithoutBidSelectionPlansInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  competentPerson?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  district?: InputMaybe<CatAreaCreateNestedOneWithoutDistrictProjectsInput>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<CatProjectGroupCreateNestedOneWithoutGroupProjectsInput>;
  groupCode?: InputMaybe<Scalars['String']['input']>;
  groupName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investmentForm?: InputMaybe<CatInvestmentFormCreateNestedOneWithoutProjectsInput>;
  investmentFormCode?: InputMaybe<Scalars['String']['input']>;
  investmentScale?: InputMaybe<Scalars['String']['input']>;
  investmentTarget?: InputMaybe<Scalars['String']['input']>;
  investor?: InputMaybe<OrganizationCreateNestedOneWithoutProjectsInput>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isOda?: InputMaybe<Scalars['Boolean']['input']>;
  listPlanCode?: InputMaybe<Scalars['String']['input']>;
  managementForm?: InputMaybe<CatProjectManagementFormCreateNestedOneWithoutProjectsInput>;
  managementFormCode?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  period?: InputMaybe<Scalars['Int']['input']>;
  periodUnit?: InputMaybe<Scalars['String']['input']>;
  province?: InputMaybe<CatAreaCreateNestedOneWithoutProvinceProjectsInput>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['Decimal']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<CatProjectStatusCreateNestedOneWithoutProjectsInput>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  totalInvestment?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentEx?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentUnit?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type ProjectCreateWithoutDistrictInput = {
  bidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutProjectInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  competentPerson?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<CatProjectGroupCreateNestedOneWithoutGroupProjectsInput>;
  groupCode?: InputMaybe<Scalars['String']['input']>;
  groupName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investmentForm?: InputMaybe<CatInvestmentFormCreateNestedOneWithoutProjectsInput>;
  investmentFormCode?: InputMaybe<Scalars['String']['input']>;
  investmentScale?: InputMaybe<Scalars['String']['input']>;
  investmentTarget?: InputMaybe<Scalars['String']['input']>;
  investor?: InputMaybe<OrganizationCreateNestedOneWithoutProjectsInput>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isOda?: InputMaybe<Scalars['Boolean']['input']>;
  listPlanCode?: InputMaybe<Scalars['String']['input']>;
  managementForm?: InputMaybe<CatProjectManagementFormCreateNestedOneWithoutProjectsInput>;
  managementFormCode?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  period?: InputMaybe<Scalars['Int']['input']>;
  periodUnit?: InputMaybe<Scalars['String']['input']>;
  province?: InputMaybe<CatAreaCreateNestedOneWithoutProvinceProjectsInput>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['Decimal']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<CatProjectStatusCreateNestedOneWithoutProjectsInput>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  totalInvestment?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentEx?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentUnit?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type ProjectCreateWithoutGroupInput = {
  bidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutProjectInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  competentPerson?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  district?: InputMaybe<CatAreaCreateNestedOneWithoutDistrictProjectsInput>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  groupCode?: InputMaybe<Scalars['String']['input']>;
  groupName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investmentForm?: InputMaybe<CatInvestmentFormCreateNestedOneWithoutProjectsInput>;
  investmentFormCode?: InputMaybe<Scalars['String']['input']>;
  investmentScale?: InputMaybe<Scalars['String']['input']>;
  investmentTarget?: InputMaybe<Scalars['String']['input']>;
  investor?: InputMaybe<OrganizationCreateNestedOneWithoutProjectsInput>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isOda?: InputMaybe<Scalars['Boolean']['input']>;
  listPlanCode?: InputMaybe<Scalars['String']['input']>;
  managementForm?: InputMaybe<CatProjectManagementFormCreateNestedOneWithoutProjectsInput>;
  managementFormCode?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  period?: InputMaybe<Scalars['Int']['input']>;
  periodUnit?: InputMaybe<Scalars['String']['input']>;
  province?: InputMaybe<CatAreaCreateNestedOneWithoutProvinceProjectsInput>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['Decimal']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<CatProjectStatusCreateNestedOneWithoutProjectsInput>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  totalInvestment?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentEx?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentUnit?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type ProjectCreateWithoutInvestmentFormInput = {
  bidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutProjectInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  competentPerson?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  district?: InputMaybe<CatAreaCreateNestedOneWithoutDistrictProjectsInput>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<CatProjectGroupCreateNestedOneWithoutGroupProjectsInput>;
  groupCode?: InputMaybe<Scalars['String']['input']>;
  groupName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investmentFormCode?: InputMaybe<Scalars['String']['input']>;
  investmentScale?: InputMaybe<Scalars['String']['input']>;
  investmentTarget?: InputMaybe<Scalars['String']['input']>;
  investor?: InputMaybe<OrganizationCreateNestedOneWithoutProjectsInput>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isOda?: InputMaybe<Scalars['Boolean']['input']>;
  listPlanCode?: InputMaybe<Scalars['String']['input']>;
  managementForm?: InputMaybe<CatProjectManagementFormCreateNestedOneWithoutProjectsInput>;
  managementFormCode?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  period?: InputMaybe<Scalars['Int']['input']>;
  periodUnit?: InputMaybe<Scalars['String']['input']>;
  province?: InputMaybe<CatAreaCreateNestedOneWithoutProvinceProjectsInput>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['Decimal']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<CatProjectStatusCreateNestedOneWithoutProjectsInput>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  totalInvestment?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentEx?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentUnit?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type ProjectCreateWithoutInvestorInput = {
  bidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutProjectInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  competentPerson?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  district?: InputMaybe<CatAreaCreateNestedOneWithoutDistrictProjectsInput>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<CatProjectGroupCreateNestedOneWithoutGroupProjectsInput>;
  groupCode?: InputMaybe<Scalars['String']['input']>;
  groupName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investmentForm?: InputMaybe<CatInvestmentFormCreateNestedOneWithoutProjectsInput>;
  investmentFormCode?: InputMaybe<Scalars['String']['input']>;
  investmentScale?: InputMaybe<Scalars['String']['input']>;
  investmentTarget?: InputMaybe<Scalars['String']['input']>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isOda?: InputMaybe<Scalars['Boolean']['input']>;
  listPlanCode?: InputMaybe<Scalars['String']['input']>;
  managementForm?: InputMaybe<CatProjectManagementFormCreateNestedOneWithoutProjectsInput>;
  managementFormCode?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  period?: InputMaybe<Scalars['Int']['input']>;
  periodUnit?: InputMaybe<Scalars['String']['input']>;
  province?: InputMaybe<CatAreaCreateNestedOneWithoutProvinceProjectsInput>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['Decimal']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<CatProjectStatusCreateNestedOneWithoutProjectsInput>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  totalInvestment?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentEx?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentUnit?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type ProjectCreateWithoutManagementFormInput = {
  bidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutProjectInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  competentPerson?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  district?: InputMaybe<CatAreaCreateNestedOneWithoutDistrictProjectsInput>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<CatProjectGroupCreateNestedOneWithoutGroupProjectsInput>;
  groupCode?: InputMaybe<Scalars['String']['input']>;
  groupName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investmentForm?: InputMaybe<CatInvestmentFormCreateNestedOneWithoutProjectsInput>;
  investmentFormCode?: InputMaybe<Scalars['String']['input']>;
  investmentScale?: InputMaybe<Scalars['String']['input']>;
  investmentTarget?: InputMaybe<Scalars['String']['input']>;
  investor?: InputMaybe<OrganizationCreateNestedOneWithoutProjectsInput>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isOda?: InputMaybe<Scalars['Boolean']['input']>;
  listPlanCode?: InputMaybe<Scalars['String']['input']>;
  managementFormCode?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  period?: InputMaybe<Scalars['Int']['input']>;
  periodUnit?: InputMaybe<Scalars['String']['input']>;
  province?: InputMaybe<CatAreaCreateNestedOneWithoutProvinceProjectsInput>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['Decimal']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<CatProjectStatusCreateNestedOneWithoutProjectsInput>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  totalInvestment?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentEx?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentUnit?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type ProjectCreateWithoutProvinceInput = {
  bidSelectionPlans?: InputMaybe<BidSelectionPlanCreateNestedManyWithoutProjectInput>;
  code?: InputMaybe<Scalars['String']['input']>;
  competentPerson?: InputMaybe<Scalars['String']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  createdBy?: InputMaybe<Scalars['String']['input']>;
  decisionAgency?: InputMaybe<Scalars['String']['input']>;
  decisionDate?: InputMaybe<Scalars['DateTime']['input']>;
  decisionFileId?: InputMaybe<Scalars['String']['input']>;
  decisionFileName?: InputMaybe<Scalars['String']['input']>;
  decisionNo?: InputMaybe<Scalars['String']['input']>;
  deletedAt?: InputMaybe<Scalars['DateTime']['input']>;
  district?: InputMaybe<CatAreaCreateNestedOneWithoutDistrictProjectsInput>;
  districtCode?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<CatProjectGroupCreateNestedOneWithoutGroupProjectsInput>;
  groupCode?: InputMaybe<Scalars['String']['input']>;
  groupName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  investmentForm?: InputMaybe<CatInvestmentFormCreateNestedOneWithoutProjectsInput>;
  investmentFormCode?: InputMaybe<Scalars['String']['input']>;
  investmentScale?: InputMaybe<Scalars['String']['input']>;
  investmentTarget?: InputMaybe<Scalars['String']['input']>;
  investor?: InputMaybe<OrganizationCreateNestedOneWithoutProjectsInput>;
  investorCode?: InputMaybe<Scalars['String']['input']>;
  investorName?: InputMaybe<Scalars['String']['input']>;
  isLatest?: InputMaybe<Scalars['Boolean']['input']>;
  isOda?: InputMaybe<Scalars['Boolean']['input']>;
  listPlanCode?: InputMaybe<Scalars['String']['input']>;
  managementForm?: InputMaybe<CatProjectManagementFormCreateNestedOneWithoutProjectsInput>;
  managementFormCode?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  period?: InputMaybe<Scalars['Int']['input']>;
  periodUnit?: InputMaybe<Scalars['String']['input']>;
  provinceCode?: InputMaybe<Scalars['String']['input']>;
  publishedAt?: InputMaybe<Scalars['DateTime']['input']>;
  reciprocalCapital?: InputMaybe<Scalars['Decimal']['input']>;
  reciprocalCapitalUnit?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<CatProjectStatusCreateNestedOneWithoutProjectsInput>;
  statusCode?: InputMaybe<Scalars['String']['input']>;
  totalInvestment?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentEx?: InputMaybe<Scalars['Decimal']['input']>;
  totalInvestmentUnit?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  updatedBy?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type ProjectListRelationFilter = {
  every?: InputMaybe<ProjectWhereInput>;
  none?: InputMaybe<ProjectWhereInput>;
  some?: InputMaybe<ProjectWhereInput>;
};

export type ProjectOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ProjectOrderByWithRelationInput = {
  bidSelectionPlans?: InputMaybe<BidSelectionPlanOrderByRelationAggregateInput>;
  code?: InputMaybe<SortOrderInput>;
  competentPerson?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  createdBy?: InputMaybe<SortOrderInput>;
  decisionAgency?: InputMaybe<SortOrderInput>;
  decisionDate?: InputMaybe<SortOrderInput>;
  decisionFileId?: InputMaybe<SortOrderInput>;
  decisionFileName?: InputMaybe<SortOrderInput>;
  decisionNo?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  district?: InputMaybe<CatAreaOrderByWithRelationInput>;
  districtCode?: InputMaybe<SortOrderInput>;
  districtId?: InputMaybe<SortOrderInput>;
  group?: InputMaybe<CatProjectGroupOrderByWithRelationInput>;
  groupCode?: InputMaybe<SortOrderInput>;
  groupId?: InputMaybe<SortOrderInput>;
  groupName?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  investmentForm?: InputMaybe<CatInvestmentFormOrderByWithRelationInput>;
  investmentFormCode?: InputMaybe<SortOrderInput>;
  investmentFormId?: InputMaybe<SortOrderInput>;
  investmentScale?: InputMaybe<SortOrderInput>;
  investmentTarget?: InputMaybe<SortOrderInput>;
  investor?: InputMaybe<OrganizationOrderByWithRelationInput>;
  investorCode?: InputMaybe<SortOrderInput>;
  investorId?: InputMaybe<SortOrderInput>;
  investorName?: InputMaybe<SortOrderInput>;
  isLatest?: InputMaybe<SortOrder>;
  isOda?: InputMaybe<SortOrder>;
  listPlanCode?: InputMaybe<SortOrderInput>;
  managementForm?: InputMaybe<CatProjectManagementFormOrderByWithRelationInput>;
  managementFormCode?: InputMaybe<SortOrderInput>;
  managementFormId?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  period?: InputMaybe<SortOrderInput>;
  periodUnit?: InputMaybe<SortOrderInput>;
  province?: InputMaybe<CatAreaOrderByWithRelationInput>;
  provinceCode?: InputMaybe<SortOrderInput>;
  provinceId?: InputMaybe<SortOrderInput>;
  publishedAt?: InputMaybe<SortOrderInput>;
  reciprocalCapital?: InputMaybe<SortOrderInput>;
  reciprocalCapitalUnit?: InputMaybe<SortOrderInput>;
  status?: InputMaybe<CatProjectStatusOrderByWithRelationInput>;
  statusCode?: InputMaybe<SortOrderInput>;
  statusId?: InputMaybe<SortOrderInput>;
  totalInvestment?: InputMaybe<SortOrderInput>;
  totalInvestmentEx?: InputMaybe<SortOrderInput>;
  totalInvestmentUnit?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  updatedBy?: InputMaybe<SortOrderInput>;
  version?: InputMaybe<SortOrderInput>;
};

export enum ProjectScalarFieldEnum {
  Code = 'code',
  CompetentPerson = 'competentPerson',
  CreatedAt = 'createdAt',
  CreatedBy = 'createdBy',
  DecisionAgency = 'decisionAgency',
  DecisionDate = 'decisionDate',
  DecisionFileId = 'decisionFileId',
  DecisionFileName = 'decisionFileName',
  DecisionNo = 'decisionNo',
  DeletedAt = 'deletedAt',
  DistrictCode = 'districtCode',
  DistrictId = 'districtId',
  GroupCode = 'groupCode',
  GroupId = 'groupId',
  GroupName = 'groupName',
  Id = 'id',
  InvestmentFormCode = 'investmentFormCode',
  InvestmentFormId = 'investmentFormId',
  InvestmentScale = 'investmentScale',
  InvestmentTarget = 'investmentTarget',
  InvestorCode = 'investorCode',
  InvestorId = 'investorId',
  InvestorName = 'investorName',
  IsLatest = 'isLatest',
  IsOda = 'isOda',
  ListPlanCode = 'listPlanCode',
  ManagementFormCode = 'managementFormCode',
  ManagementFormId = 'managementFormId',
  Name = 'name',
  Period = 'period',
  PeriodUnit = 'periodUnit',
  ProvinceCode = 'provinceCode',
  ProvinceId = 'provinceId',
  PublishedAt = 'publishedAt',
  ReciprocalCapital = 'reciprocalCapital',
  ReciprocalCapitalUnit = 'reciprocalCapitalUnit',
  StatusCode = 'statusCode',
  StatusId = 'statusId',
  TotalInvestment = 'totalInvestment',
  TotalInvestmentEx = 'totalInvestmentEx',
  TotalInvestmentUnit = 'totalInvestmentUnit',
  UpdatedAt = 'updatedAt',
  UpdatedBy = 'updatedBy',
  Version = 'version'
}

export type ProjectScalarWhereInput = {
  AND?: InputMaybe<Array<ProjectScalarWhereInput>>;
  NOT?: InputMaybe<Array<ProjectScalarWhereInput>>;
  OR?: InputMaybe<Array<ProjectScalarWhereInput>>;
  code?: InputMaybe<StringNullableFilter>;
  competentPerson?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  decisionAgency?: InputMaybe<StringNullableFilter>;
  decisionDate?: InputMaybe<DateTimeNullableFilter>;
  decisionFileId?: InputMaybe<StringNullableFilter>;
  decisionFileName?: InputMaybe<StringNullableFilter>;
  decisionNo?: InputMaybe<StringNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  districtCode?: InputMaybe<StringNullableFilter>;
  districtId?: InputMaybe<StringNullableFilter>;
  groupCode?: InputMaybe<StringNullableFilter>;
  groupId?: InputMaybe<StringNullableFilter>;
  groupName?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  investmentFormCode?: InputMaybe<StringNullableFilter>;
  investmentFormId?: InputMaybe<StringNullableFilter>;
  investmentScale?: InputMaybe<StringNullableFilter>;
  investmentTarget?: InputMaybe<StringNullableFilter>;
  investorCode?: InputMaybe<StringNullableFilter>;
  investorId?: InputMaybe<StringNullableFilter>;
  investorName?: InputMaybe<StringNullableFilter>;
  isLatest?: InputMaybe<BoolFilter>;
  isOda?: InputMaybe<BoolFilter>;
  listPlanCode?: InputMaybe<StringNullableFilter>;
  managementFormCode?: InputMaybe<StringNullableFilter>;
  managementFormId?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  period?: InputMaybe<IntNullableFilter>;
  periodUnit?: InputMaybe<StringNullableFilter>;
  provinceCode?: InputMaybe<StringNullableFilter>;
  provinceId?: InputMaybe<StringNullableFilter>;
  publishedAt?: InputMaybe<DateTimeNullableFilter>;
  reciprocalCapital?: InputMaybe<DecimalNullableFilter>;
  reciprocalCapitalUnit?: InputMaybe<StringNullableFilter>;
  statusCode?: InputMaybe<StringNullableFilter>;
  statusId?: InputMaybe<StringNullableFilter>;
  totalInvestment?: InputMaybe<DecimalNullableFilter>;
  totalInvestmentEx?: InputMaybe<DecimalNullableFilter>;
  totalInvestmentUnit?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  version?: InputMaybe<StringNullableFilter>;
};

export type ProjectUpdateInput = {
  bidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutProjectNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  competentPerson?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  district?: InputMaybe<CatAreaUpdateOneWithoutDistrictProjectsNestedInput>;
  districtCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  group?: InputMaybe<CatProjectGroupUpdateOneWithoutGroupProjectsNestedInput>;
  groupCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  groupName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investmentForm?: InputMaybe<CatInvestmentFormUpdateOneWithoutProjectsNestedInput>;
  investmentFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investmentScale?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investmentTarget?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investor?: InputMaybe<OrganizationUpdateOneWithoutProjectsNestedInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isOda?: InputMaybe<BoolFieldUpdateOperationsInput>;
  listPlanCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  managementForm?: InputMaybe<CatProjectManagementFormUpdateOneWithoutProjectsNestedInput>;
  managementFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  period?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  periodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  province?: InputMaybe<CatAreaUpdateOneWithoutProvinceProjectsNestedInput>;
  provinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  reciprocalCapital?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  reciprocalCapitalUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<CatProjectStatusUpdateOneWithoutProjectsNestedInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalInvestment?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentEx?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProjectUpdateManyMutationInput = {
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  competentPerson?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  districtCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  groupCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  groupName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investmentFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investmentScale?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investmentTarget?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isOda?: InputMaybe<BoolFieldUpdateOperationsInput>;
  listPlanCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  managementFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  period?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  periodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  provinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  reciprocalCapital?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  reciprocalCapitalUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalInvestment?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentEx?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProjectUpdateManyWithWhereWithoutDistrictInput = {
  data: ProjectUpdateManyMutationInput;
  where: ProjectScalarWhereInput;
};

export type ProjectUpdateManyWithWhereWithoutGroupInput = {
  data: ProjectUpdateManyMutationInput;
  where: ProjectScalarWhereInput;
};

export type ProjectUpdateManyWithWhereWithoutInvestmentFormInput = {
  data: ProjectUpdateManyMutationInput;
  where: ProjectScalarWhereInput;
};

export type ProjectUpdateManyWithWhereWithoutInvestorInput = {
  data: ProjectUpdateManyMutationInput;
  where: ProjectScalarWhereInput;
};

export type ProjectUpdateManyWithWhereWithoutManagementFormInput = {
  data: ProjectUpdateManyMutationInput;
  where: ProjectScalarWhereInput;
};

export type ProjectUpdateManyWithWhereWithoutProvinceInput = {
  data: ProjectUpdateManyMutationInput;
  where: ProjectScalarWhereInput;
};

export type ProjectUpdateManyWithoutDistrictNestedInput = {
  connect?: InputMaybe<Array<ProjectWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProjectCreateOrConnectWithoutDistrictInput>>;
  create?: InputMaybe<Array<ProjectCreateWithoutDistrictInput>>;
  createMany?: InputMaybe<ProjectCreateManyDistrictInputEnvelope>;
  delete?: InputMaybe<Array<ProjectWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProjectScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProjectWhereUniqueInput>>;
  set?: InputMaybe<Array<ProjectWhereUniqueInput>>;
  update?: InputMaybe<Array<ProjectUpdateWithWhereUniqueWithoutDistrictInput>>;
  updateMany?: InputMaybe<Array<ProjectUpdateManyWithWhereWithoutDistrictInput>>;
  upsert?: InputMaybe<Array<ProjectUpsertWithWhereUniqueWithoutDistrictInput>>;
};

export type ProjectUpdateManyWithoutGroupNestedInput = {
  connect?: InputMaybe<Array<ProjectWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProjectCreateOrConnectWithoutGroupInput>>;
  create?: InputMaybe<Array<ProjectCreateWithoutGroupInput>>;
  createMany?: InputMaybe<ProjectCreateManyGroupInputEnvelope>;
  delete?: InputMaybe<Array<ProjectWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProjectScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProjectWhereUniqueInput>>;
  set?: InputMaybe<Array<ProjectWhereUniqueInput>>;
  update?: InputMaybe<Array<ProjectUpdateWithWhereUniqueWithoutGroupInput>>;
  updateMany?: InputMaybe<Array<ProjectUpdateManyWithWhereWithoutGroupInput>>;
  upsert?: InputMaybe<Array<ProjectUpsertWithWhereUniqueWithoutGroupInput>>;
};

export type ProjectUpdateManyWithoutInvestmentFormNestedInput = {
  connect?: InputMaybe<Array<ProjectWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProjectCreateOrConnectWithoutInvestmentFormInput>>;
  create?: InputMaybe<Array<ProjectCreateWithoutInvestmentFormInput>>;
  createMany?: InputMaybe<ProjectCreateManyInvestmentFormInputEnvelope>;
  delete?: InputMaybe<Array<ProjectWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProjectScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProjectWhereUniqueInput>>;
  set?: InputMaybe<Array<ProjectWhereUniqueInput>>;
  update?: InputMaybe<Array<ProjectUpdateWithWhereUniqueWithoutInvestmentFormInput>>;
  updateMany?: InputMaybe<Array<ProjectUpdateManyWithWhereWithoutInvestmentFormInput>>;
  upsert?: InputMaybe<Array<ProjectUpsertWithWhereUniqueWithoutInvestmentFormInput>>;
};

export type ProjectUpdateManyWithoutInvestorNestedInput = {
  connect?: InputMaybe<Array<ProjectWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProjectCreateOrConnectWithoutInvestorInput>>;
  create?: InputMaybe<Array<ProjectCreateWithoutInvestorInput>>;
  createMany?: InputMaybe<ProjectCreateManyInvestorInputEnvelope>;
  delete?: InputMaybe<Array<ProjectWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProjectScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProjectWhereUniqueInput>>;
  set?: InputMaybe<Array<ProjectWhereUniqueInput>>;
  update?: InputMaybe<Array<ProjectUpdateWithWhereUniqueWithoutInvestorInput>>;
  updateMany?: InputMaybe<Array<ProjectUpdateManyWithWhereWithoutInvestorInput>>;
  upsert?: InputMaybe<Array<ProjectUpsertWithWhereUniqueWithoutInvestorInput>>;
};

export type ProjectUpdateManyWithoutManagementFormNestedInput = {
  connect?: InputMaybe<Array<ProjectWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProjectCreateOrConnectWithoutManagementFormInput>>;
  create?: InputMaybe<Array<ProjectCreateWithoutManagementFormInput>>;
  createMany?: InputMaybe<ProjectCreateManyManagementFormInputEnvelope>;
  delete?: InputMaybe<Array<ProjectWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProjectScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProjectWhereUniqueInput>>;
  set?: InputMaybe<Array<ProjectWhereUniqueInput>>;
  update?: InputMaybe<Array<ProjectUpdateWithWhereUniqueWithoutManagementFormInput>>;
  updateMany?: InputMaybe<Array<ProjectUpdateManyWithWhereWithoutManagementFormInput>>;
  upsert?: InputMaybe<Array<ProjectUpsertWithWhereUniqueWithoutManagementFormInput>>;
};

export type ProjectUpdateManyWithoutProvinceNestedInput = {
  connect?: InputMaybe<Array<ProjectWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProjectCreateOrConnectWithoutProvinceInput>>;
  create?: InputMaybe<Array<ProjectCreateWithoutProvinceInput>>;
  createMany?: InputMaybe<ProjectCreateManyProvinceInputEnvelope>;
  delete?: InputMaybe<Array<ProjectWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProjectScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProjectWhereUniqueInput>>;
  set?: InputMaybe<Array<ProjectWhereUniqueInput>>;
  update?: InputMaybe<Array<ProjectUpdateWithWhereUniqueWithoutProvinceInput>>;
  updateMany?: InputMaybe<Array<ProjectUpdateManyWithWhereWithoutProvinceInput>>;
  upsert?: InputMaybe<Array<ProjectUpsertWithWhereUniqueWithoutProvinceInput>>;
};

export type ProjectUpdateOneWithoutBidSelectionPlansNestedInput = {
  connect?: InputMaybe<ProjectWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProjectCreateOrConnectWithoutBidSelectionPlansInput>;
  create?: InputMaybe<ProjectCreateWithoutBidSelectionPlansInput>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  disconnect?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<ProjectUpdateWithoutBidSelectionPlansInput>;
  upsert?: InputMaybe<ProjectUpsertWithoutBidSelectionPlansInput>;
};

export type ProjectUpdateWithWhereUniqueWithoutDistrictInput = {
  data: ProjectUpdateWithoutDistrictInput;
  where: ProjectWhereUniqueInput;
};

export type ProjectUpdateWithWhereUniqueWithoutGroupInput = {
  data: ProjectUpdateWithoutGroupInput;
  where: ProjectWhereUniqueInput;
};

export type ProjectUpdateWithWhereUniqueWithoutInvestmentFormInput = {
  data: ProjectUpdateWithoutInvestmentFormInput;
  where: ProjectWhereUniqueInput;
};

export type ProjectUpdateWithWhereUniqueWithoutInvestorInput = {
  data: ProjectUpdateWithoutInvestorInput;
  where: ProjectWhereUniqueInput;
};

export type ProjectUpdateWithWhereUniqueWithoutManagementFormInput = {
  data: ProjectUpdateWithoutManagementFormInput;
  where: ProjectWhereUniqueInput;
};

export type ProjectUpdateWithWhereUniqueWithoutProvinceInput = {
  data: ProjectUpdateWithoutProvinceInput;
  where: ProjectWhereUniqueInput;
};

export type ProjectUpdateWithoutBidSelectionPlansInput = {
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  competentPerson?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  district?: InputMaybe<CatAreaUpdateOneWithoutDistrictProjectsNestedInput>;
  districtCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  group?: InputMaybe<CatProjectGroupUpdateOneWithoutGroupProjectsNestedInput>;
  groupCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  groupName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investmentForm?: InputMaybe<CatInvestmentFormUpdateOneWithoutProjectsNestedInput>;
  investmentFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investmentScale?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investmentTarget?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investor?: InputMaybe<OrganizationUpdateOneWithoutProjectsNestedInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isOda?: InputMaybe<BoolFieldUpdateOperationsInput>;
  listPlanCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  managementForm?: InputMaybe<CatProjectManagementFormUpdateOneWithoutProjectsNestedInput>;
  managementFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  period?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  periodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  province?: InputMaybe<CatAreaUpdateOneWithoutProvinceProjectsNestedInput>;
  provinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  reciprocalCapital?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  reciprocalCapitalUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<CatProjectStatusUpdateOneWithoutProjectsNestedInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalInvestment?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentEx?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProjectUpdateWithoutDistrictInput = {
  bidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutProjectNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  competentPerson?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  districtCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  group?: InputMaybe<CatProjectGroupUpdateOneWithoutGroupProjectsNestedInput>;
  groupCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  groupName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investmentForm?: InputMaybe<CatInvestmentFormUpdateOneWithoutProjectsNestedInput>;
  investmentFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investmentScale?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investmentTarget?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investor?: InputMaybe<OrganizationUpdateOneWithoutProjectsNestedInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isOda?: InputMaybe<BoolFieldUpdateOperationsInput>;
  listPlanCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  managementForm?: InputMaybe<CatProjectManagementFormUpdateOneWithoutProjectsNestedInput>;
  managementFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  period?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  periodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  province?: InputMaybe<CatAreaUpdateOneWithoutProvinceProjectsNestedInput>;
  provinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  reciprocalCapital?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  reciprocalCapitalUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<CatProjectStatusUpdateOneWithoutProjectsNestedInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalInvestment?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentEx?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProjectUpdateWithoutGroupInput = {
  bidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutProjectNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  competentPerson?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  district?: InputMaybe<CatAreaUpdateOneWithoutDistrictProjectsNestedInput>;
  districtCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  groupCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  groupName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investmentForm?: InputMaybe<CatInvestmentFormUpdateOneWithoutProjectsNestedInput>;
  investmentFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investmentScale?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investmentTarget?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investor?: InputMaybe<OrganizationUpdateOneWithoutProjectsNestedInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isOda?: InputMaybe<BoolFieldUpdateOperationsInput>;
  listPlanCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  managementForm?: InputMaybe<CatProjectManagementFormUpdateOneWithoutProjectsNestedInput>;
  managementFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  period?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  periodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  province?: InputMaybe<CatAreaUpdateOneWithoutProvinceProjectsNestedInput>;
  provinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  reciprocalCapital?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  reciprocalCapitalUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<CatProjectStatusUpdateOneWithoutProjectsNestedInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalInvestment?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentEx?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProjectUpdateWithoutInvestmentFormInput = {
  bidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutProjectNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  competentPerson?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  district?: InputMaybe<CatAreaUpdateOneWithoutDistrictProjectsNestedInput>;
  districtCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  group?: InputMaybe<CatProjectGroupUpdateOneWithoutGroupProjectsNestedInput>;
  groupCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  groupName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investmentFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investmentScale?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investmentTarget?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investor?: InputMaybe<OrganizationUpdateOneWithoutProjectsNestedInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isOda?: InputMaybe<BoolFieldUpdateOperationsInput>;
  listPlanCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  managementForm?: InputMaybe<CatProjectManagementFormUpdateOneWithoutProjectsNestedInput>;
  managementFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  period?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  periodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  province?: InputMaybe<CatAreaUpdateOneWithoutProvinceProjectsNestedInput>;
  provinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  reciprocalCapital?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  reciprocalCapitalUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<CatProjectStatusUpdateOneWithoutProjectsNestedInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalInvestment?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentEx?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProjectUpdateWithoutInvestorInput = {
  bidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutProjectNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  competentPerson?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  district?: InputMaybe<CatAreaUpdateOneWithoutDistrictProjectsNestedInput>;
  districtCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  group?: InputMaybe<CatProjectGroupUpdateOneWithoutGroupProjectsNestedInput>;
  groupCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  groupName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investmentForm?: InputMaybe<CatInvestmentFormUpdateOneWithoutProjectsNestedInput>;
  investmentFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investmentScale?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investmentTarget?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isOda?: InputMaybe<BoolFieldUpdateOperationsInput>;
  listPlanCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  managementForm?: InputMaybe<CatProjectManagementFormUpdateOneWithoutProjectsNestedInput>;
  managementFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  period?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  periodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  province?: InputMaybe<CatAreaUpdateOneWithoutProvinceProjectsNestedInput>;
  provinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  reciprocalCapital?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  reciprocalCapitalUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<CatProjectStatusUpdateOneWithoutProjectsNestedInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalInvestment?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentEx?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProjectUpdateWithoutManagementFormInput = {
  bidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutProjectNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  competentPerson?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  district?: InputMaybe<CatAreaUpdateOneWithoutDistrictProjectsNestedInput>;
  districtCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  group?: InputMaybe<CatProjectGroupUpdateOneWithoutGroupProjectsNestedInput>;
  groupCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  groupName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investmentForm?: InputMaybe<CatInvestmentFormUpdateOneWithoutProjectsNestedInput>;
  investmentFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investmentScale?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investmentTarget?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investor?: InputMaybe<OrganizationUpdateOneWithoutProjectsNestedInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isOda?: InputMaybe<BoolFieldUpdateOperationsInput>;
  listPlanCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  managementFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  period?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  periodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  province?: InputMaybe<CatAreaUpdateOneWithoutProvinceProjectsNestedInput>;
  provinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  reciprocalCapital?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  reciprocalCapitalUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<CatProjectStatusUpdateOneWithoutProjectsNestedInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalInvestment?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentEx?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProjectUpdateWithoutProvinceInput = {
  bidSelectionPlans?: InputMaybe<BidSelectionPlanUpdateManyWithoutProjectNestedInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  competentPerson?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionAgency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  decisionFileId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionFileName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decisionNo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  district?: InputMaybe<CatAreaUpdateOneWithoutDistrictProjectsNestedInput>;
  districtCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  group?: InputMaybe<CatProjectGroupUpdateOneWithoutGroupProjectsNestedInput>;
  groupCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  groupName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  investmentForm?: InputMaybe<CatInvestmentFormUpdateOneWithoutProjectsNestedInput>;
  investmentFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investmentScale?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investmentTarget?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investor?: InputMaybe<OrganizationUpdateOneWithoutProjectsNestedInput>;
  investorCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  investorName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isLatest?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isOda?: InputMaybe<BoolFieldUpdateOperationsInput>;
  listPlanCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  managementForm?: InputMaybe<CatProjectManagementFormUpdateOneWithoutProjectsNestedInput>;
  managementFormCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  period?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  periodUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  provinceCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  publishedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  reciprocalCapital?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  reciprocalCapitalUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<CatProjectStatusUpdateOneWithoutProjectsNestedInput>;
  statusCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalInvestment?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentEx?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  totalInvestmentUnit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProjectUpsertWithWhereUniqueWithoutDistrictInput = {
  create: ProjectCreateWithoutDistrictInput;
  update: ProjectUpdateWithoutDistrictInput;
  where: ProjectWhereUniqueInput;
};

export type ProjectUpsertWithWhereUniqueWithoutGroupInput = {
  create: ProjectCreateWithoutGroupInput;
  update: ProjectUpdateWithoutGroupInput;
  where: ProjectWhereUniqueInput;
};

export type ProjectUpsertWithWhereUniqueWithoutInvestmentFormInput = {
  create: ProjectCreateWithoutInvestmentFormInput;
  update: ProjectUpdateWithoutInvestmentFormInput;
  where: ProjectWhereUniqueInput;
};

export type ProjectUpsertWithWhereUniqueWithoutInvestorInput = {
  create: ProjectCreateWithoutInvestorInput;
  update: ProjectUpdateWithoutInvestorInput;
  where: ProjectWhereUniqueInput;
};

export type ProjectUpsertWithWhereUniqueWithoutManagementFormInput = {
  create: ProjectCreateWithoutManagementFormInput;
  update: ProjectUpdateWithoutManagementFormInput;
  where: ProjectWhereUniqueInput;
};

export type ProjectUpsertWithWhereUniqueWithoutProvinceInput = {
  create: ProjectCreateWithoutProvinceInput;
  update: ProjectUpdateWithoutProvinceInput;
  where: ProjectWhereUniqueInput;
};

export type ProjectUpsertWithoutBidSelectionPlansInput = {
  create: ProjectCreateWithoutBidSelectionPlansInput;
  update: ProjectUpdateWithoutBidSelectionPlansInput;
};

export type ProjectWhereInput = {
  AND?: InputMaybe<Array<ProjectWhereInput>>;
  NOT?: InputMaybe<Array<ProjectWhereInput>>;
  OR?: InputMaybe<Array<ProjectWhereInput>>;
  bidSelectionPlans?: InputMaybe<BidSelectionPlanListRelationFilter>;
  code?: InputMaybe<StringNullableFilter>;
  competentPerson?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  decisionAgency?: InputMaybe<StringNullableFilter>;
  decisionDate?: InputMaybe<DateTimeNullableFilter>;
  decisionFileId?: InputMaybe<StringNullableFilter>;
  decisionFileName?: InputMaybe<StringNullableFilter>;
  decisionNo?: InputMaybe<StringNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  district?: InputMaybe<CatAreaWhereInput>;
  districtCode?: InputMaybe<StringNullableFilter>;
  districtId?: InputMaybe<StringNullableFilter>;
  group?: InputMaybe<CatProjectGroupWhereInput>;
  groupCode?: InputMaybe<StringNullableFilter>;
  groupId?: InputMaybe<StringNullableFilter>;
  groupName?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  investmentForm?: InputMaybe<CatInvestmentFormWhereInput>;
  investmentFormCode?: InputMaybe<StringNullableFilter>;
  investmentFormId?: InputMaybe<StringNullableFilter>;
  investmentScale?: InputMaybe<StringNullableFilter>;
  investmentTarget?: InputMaybe<StringNullableFilter>;
  investor?: InputMaybe<OrganizationWhereInput>;
  investorCode?: InputMaybe<StringNullableFilter>;
  investorId?: InputMaybe<StringNullableFilter>;
  investorName?: InputMaybe<StringNullableFilter>;
  isLatest?: InputMaybe<BoolFilter>;
  isOda?: InputMaybe<BoolFilter>;
  listPlanCode?: InputMaybe<StringNullableFilter>;
  managementForm?: InputMaybe<CatProjectManagementFormWhereInput>;
  managementFormCode?: InputMaybe<StringNullableFilter>;
  managementFormId?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  period?: InputMaybe<IntNullableFilter>;
  periodUnit?: InputMaybe<StringNullableFilter>;
  province?: InputMaybe<CatAreaWhereInput>;
  provinceCode?: InputMaybe<StringNullableFilter>;
  provinceId?: InputMaybe<StringNullableFilter>;
  publishedAt?: InputMaybe<DateTimeNullableFilter>;
  reciprocalCapital?: InputMaybe<DecimalNullableFilter>;
  reciprocalCapitalUnit?: InputMaybe<StringNullableFilter>;
  status?: InputMaybe<CatProjectStatusWhereInput>;
  statusCode?: InputMaybe<StringNullableFilter>;
  statusId?: InputMaybe<StringNullableFilter>;
  totalInvestment?: InputMaybe<DecimalNullableFilter>;
  totalInvestmentEx?: InputMaybe<DecimalNullableFilter>;
  totalInvestmentUnit?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  version?: InputMaybe<StringNullableFilter>;
};

export type ProjectWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']['input']>;
};

export type Query = {
  __typename?: 'Query';
  area: CatArea;
  areas: CatAreaConnection;
  bidNotification: BidNotification;
  bidNotificationContractor: BidNotificationContractor;
  bidNotificationContractors: BidNotificationContractorConnection;
  bidNotificationResult: BidNotificationResult;
  bidNotificationResults: BidNotificationResultConnection;
  bidNotifications: BidNotificationConnection;
  bidOpenPreNotificationResult: StatisticBidNotificationResult;
  bidOpenPreNotificationResults: StatisticBidNotificationResultConnection;
  bidPackage: BidPackage;
  bidPackageLot: BidPackageLot;
  bidPackageLots: BidPackageLotConnection;
  bidPetitionContractor: BidPetitionContractor;
  bidSelectionPlan: BidSelectionPlan;
  bidSelectionPlans: BidSelectionPlanConnection;
  business: Business;
  businesses: BusinessConnection;
  catBidField: CatBidField;
  catBidFields: CatBidFieldConnection;
  catBidForm: CatBidForm;
  catBidForms: CatBidFormConnection;
  catBidMode: CatBidMode;
  catBidModes: CatBidModeConnection;
  catBidSelectionPlanStatus: CatBidSelectionPlanStatus;
  catBidSelectionPlanStatuses: CatBidSelectionPlanStatusConnection;
  catBidSelectionPlanType: CatBidSelectionPlanType;
  catBidSelectionPlanTypes: CatBidSelectionPlanTypeConnection;
  catConstructionType: CatConstructionType;
  catConstructionTypes: CatConstructionTypeConnection;
  catContractStatus: CatConstructionType;
  catContractStatuses: CatContractStatusConnection;
  catContractType: CatConstructionType;
  catContractTypes: CatContractTypeConnection;
  catContractorType: CatContractorType;
  catContractorTypes: CatContractorTypeConnection;
  catInvestmentForm: CatInvestmentForm;
  catInvestmentForms: CatInvestmentFormConnection;
  catOrganizationSize: CatContractorType;
  catOrganizationSizes: CatOrganizationSizeConnection;
  catProcessApplies: CatProcessApplyConnection;
  catProcessApply: CatProcessApply;
  catProjectApprovalStatus: CatProjectApprovalStatus;
  catProjectApprovalStatuses: CatProjectApprovalStatusConnection;
  catProjectGroup: CatProjectGroup;
  catProjectGroups: CatProjectGroupConnection;
  catProjectManagementForm: CatProjectManagementForm;
  catProjectManagementForms: CatProjectManagementFormConnection;
  competeContractors: StatisticOrganizationConnection;
  getUserPermissions: Array<Scalars['String']['output']>;
  inviteBidderBidPackages: StatisticBidPackageConnection;
  inviteBidders: StatisticBidNotificationContractorConnection;
  organization: Organization;
  organizations: OrganizationConnection;
  project: Project;
  projects: ProjectConnection;
  statisticAnalysis: StatisticAnalysis;
  statisticBidNotificationContractors: StatisticBidNotificationContractorConnection;
  statisticBidNotificationResult: StatisticBidNotificationResult;
  statisticBidNotificationResults: StatisticBidNotificationResultConnection;
  statisticBidNotifications: StatisticBidNotificationConnection;
  statisticBidPackages: StatisticBidPackageConnection;
  statisticBidPetitionContractors: StatisticStatisticBidPetitionContractorConnection;
  statisticBidSelectionPlan: StatisticBidSelectionPlan;
  statisticBidSelectionPlans: StatisticBidSelectionPlanConnection;
  statisticOrganization: StatisticOrganization;
  statisticOrganizations: StatisticOrganizationConnection;
  statisticProject: StatisticProject;
  statisticProjects: StatisticProjectConnection;
};


export type QueryAreaArgs = {
  where: CatAreaWhereUniqueInput;
};


export type QueryAreasArgs = {
  cursor?: InputMaybe<CatAreaWhereUniqueInput>;
  distinct?: InputMaybe<Array<CatAreaScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CatAreaOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CatAreaWhereInput>;
};


export type QueryBidNotificationArgs = {
  where: BidNotificationWhereUniqueInput;
};


export type QueryBidNotificationContractorArgs = {
  where: BidNotificationContractorWhereUniqueInput;
};


export type QueryBidNotificationContractorsArgs = {
  cursor?: InputMaybe<BidNotificationContractorWhereUniqueInput>;
  distinct?: InputMaybe<Array<BidNotificationContractorScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<BidNotificationContractorOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<BidNotificationContractorWhereInput>;
};


export type QueryBidNotificationResultArgs = {
  where: BidNotificationResultWhereUniqueInput;
};


export type QueryBidNotificationResultsArgs = {
  cursor?: InputMaybe<BidNotificationResultWhereUniqueInput>;
  distinct?: InputMaybe<Array<BidNotificationResultScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<BidNotificationResultOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<BidNotificationResultWhereInput>;
};


export type QueryBidNotificationsArgs = {
  cursor?: InputMaybe<BidNotificationWhereUniqueInput>;
  distinct?: InputMaybe<Array<BidNotificationScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<BidNotificationOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<BidNotificationWhereInput>;
};


export type QueryBidOpenPreNotificationResultArgs = {
  where: BidNotificationResultWhereUniqueInput;
};


export type QueryBidOpenPreNotificationResultsArgs = {
  cursor?: InputMaybe<BidNotificationResultWhereUniqueInput>;
  distinct?: InputMaybe<Array<BidNotificationResultScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<BidNotificationResultOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CustomBidNotificationResultWhereInput>;
};


export type QueryBidPackageArgs = {
  where: BidPackageWhereUniqueInput;
};


export type QueryBidPackageLotArgs = {
  where: BidPackageLotWhereUniqueInput;
};


export type QueryBidPackageLotsArgs = {
  cursor?: InputMaybe<BidPackageLotWhereUniqueInput>;
  distinct?: InputMaybe<Array<BidPackageLotScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<BidPackageLotOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<BidPackageLotWhereInput>;
};


export type QueryBidPetitionContractorArgs = {
  where: BidPetitionContractorWhereUniqueInput;
};


export type QueryBidSelectionPlanArgs = {
  where: BidSelectionPlanWhereUniqueInput;
};


export type QueryBidSelectionPlansArgs = {
  cursor?: InputMaybe<BidSelectionPlanWhereUniqueInput>;
  distinct?: InputMaybe<Array<BidSelectionPlanScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<BidSelectionPlanOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<BidSelectionPlanWhereInput>;
};


export type QueryBusinessArgs = {
  where: BusinessWhereUniqueInput;
};


export type QueryBusinessesArgs = {
  cursor?: InputMaybe<BusinessWhereUniqueInput>;
  distinct?: InputMaybe<Array<BusinessScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<BusinessOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<BusinessWhereInput>;
};


export type QueryCatBidFieldArgs = {
  where: CatBidFieldWhereUniqueInput;
};


export type QueryCatBidFieldsArgs = {
  cursor?: InputMaybe<CatBidFieldWhereUniqueInput>;
  distinct?: InputMaybe<Array<CatBidFieldScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CatBidFieldOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CatBidFieldWhereInput>;
};


export type QueryCatBidFormArgs = {
  where: CatBidFormWhereUniqueInput;
};


export type QueryCatBidFormsArgs = {
  cursor?: InputMaybe<CatBidFormWhereUniqueInput>;
  distinct?: InputMaybe<Array<CatBidFormScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CatBidFormOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CatBidFormWhereInput>;
};


export type QueryCatBidModeArgs = {
  where: CatBidModeWhereUniqueInput;
};


export type QueryCatBidModesArgs = {
  cursor?: InputMaybe<CatBidModeWhereUniqueInput>;
  distinct?: InputMaybe<Array<CatBidModeScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CatBidModeOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CatBidModeWhereInput>;
};


export type QueryCatBidSelectionPlanStatusArgs = {
  where: CatBidSelectionPlanStatusWhereUniqueInput;
};


export type QueryCatBidSelectionPlanStatusesArgs = {
  cursor?: InputMaybe<CatBidSelectionPlanStatusWhereUniqueInput>;
  distinct?: InputMaybe<Array<CatBidSelectionPlanStatusScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CatBidSelectionPlanStatusOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CatBidSelectionPlanStatusWhereInput>;
};


export type QueryCatBidSelectionPlanTypeArgs = {
  where: CatBidSelectionPlanTypeWhereUniqueInput;
};


export type QueryCatBidSelectionPlanTypesArgs = {
  cursor?: InputMaybe<CatBidSelectionPlanTypeWhereUniqueInput>;
  distinct?: InputMaybe<Array<CatBidSelectionPlanTypeScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CatBidSelectionPlanTypeOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CatBidSelectionPlanTypeWhereInput>;
};


export type QueryCatConstructionTypeArgs = {
  where: CatConstructionTypeWhereUniqueInput;
};


export type QueryCatConstructionTypesArgs = {
  cursor?: InputMaybe<CatConstructionTypeWhereUniqueInput>;
  distinct?: InputMaybe<Array<CatConstructionTypeScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CatConstructionTypeOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CatConstructionTypeWhereInput>;
};


export type QueryCatContractStatusArgs = {
  where: CatContractStatusWhereUniqueInput;
};


export type QueryCatContractStatusesArgs = {
  cursor?: InputMaybe<CatContractStatusWhereUniqueInput>;
  distinct?: InputMaybe<Array<CatContractStatusScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CatContractStatusOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CatContractStatusWhereInput>;
};


export type QueryCatContractTypeArgs = {
  where: CatContractTypeWhereUniqueInput;
};


export type QueryCatContractTypesArgs = {
  cursor?: InputMaybe<CatContractTypeWhereUniqueInput>;
  distinct?: InputMaybe<Array<CatContractTypeScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CatContractTypeOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CatContractTypeWhereInput>;
};


export type QueryCatContractorTypeArgs = {
  where: CatContractorTypeWhereUniqueInput;
};


export type QueryCatContractorTypesArgs = {
  cursor?: InputMaybe<CatContractorTypeWhereUniqueInput>;
  distinct?: InputMaybe<Array<CatContractorTypeScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CatContractorTypeOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CatContractorTypeWhereInput>;
};


export type QueryCatInvestmentFormArgs = {
  where: CatInvestmentFormWhereUniqueInput;
};


export type QueryCatInvestmentFormsArgs = {
  cursor?: InputMaybe<CatInvestmentFormWhereUniqueInput>;
  distinct?: InputMaybe<Array<CatInvestmentFormScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CatInvestmentFormOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CatInvestmentFormWhereInput>;
};


export type QueryCatOrganizationSizeArgs = {
  where: CatOrganizationSizeWhereUniqueInput;
};


export type QueryCatOrganizationSizesArgs = {
  cursor?: InputMaybe<CatOrganizationSizeWhereUniqueInput>;
  distinct?: InputMaybe<Array<CatOrganizationSizeScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CatOrganizationSizeOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CatOrganizationSizeWhereInput>;
};


export type QueryCatProcessAppliesArgs = {
  cursor?: InputMaybe<CatProcessApplyWhereUniqueInput>;
  distinct?: InputMaybe<Array<CatProcessApplyScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CatProcessApplyOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CatProcessApplyWhereInput>;
};


export type QueryCatProcessApplyArgs = {
  where: CatProcessApplyWhereUniqueInput;
};


export type QueryCatProjectApprovalStatusArgs = {
  where: CatProjectApprovalStatusWhereUniqueInput;
};


export type QueryCatProjectApprovalStatusesArgs = {
  cursor?: InputMaybe<CatProjectApprovalStatusWhereUniqueInput>;
  distinct?: InputMaybe<Array<CatProjectApprovalStatusScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CatProjectApprovalStatusOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CatProjectApprovalStatusWhereInput>;
};


export type QueryCatProjectGroupArgs = {
  where: CatProjectGroupWhereUniqueInput;
};


export type QueryCatProjectGroupsArgs = {
  cursor?: InputMaybe<CatProjectGroupWhereUniqueInput>;
  distinct?: InputMaybe<Array<CatProjectGroupScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CatProjectGroupOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CatProjectGroupWhereInput>;
};


export type QueryCatProjectManagementFormArgs = {
  where: CatProjectManagementFormWhereUniqueInput;
};


export type QueryCatProjectManagementFormsArgs = {
  cursor?: InputMaybe<CatProjectManagementFormWhereUniqueInput>;
  distinct?: InputMaybe<Array<CatProjectManagementFormScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CatProjectManagementFormOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CatProjectManagementFormWhereInput>;
};


export type QueryCompeteContractorsArgs = {
  cursor?: InputMaybe<OrganizationWhereUniqueInput>;
  distinct?: InputMaybe<Array<OrganizationScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StatisticOrganizationOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StatisticOrganizationWhereInput>;
};


export type QueryInviteBidderBidPackagesArgs = {
  cursor?: InputMaybe<BidPackageWhereUniqueInput>;
  distinct?: InputMaybe<Array<BidPackageScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<BidPackageOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<InviteBidderBidPackageWhereInput>;
};


export type QueryInviteBiddersArgs = {
  cursor?: InputMaybe<BidNotificationContractorWhereUniqueInput>;
  distinct?: InputMaybe<Array<BidNotificationContractorScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<BidNotificationContractorOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<BidNotificationContractorWhereInput>;
};


export type QueryOrganizationArgs = {
  where: OrganizationWhereUniqueInput;
};


export type QueryOrganizationsArgs = {
  cursor?: InputMaybe<OrganizationWhereUniqueInput>;
  distinct?: InputMaybe<Array<OrganizationScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<OrganizationOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<OrganizationWhereInput>;
};


export type QueryProjectArgs = {
  where: ProjectWhereUniqueInput;
};


export type QueryProjectsArgs = {
  cursor?: InputMaybe<ProjectWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProjectScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProjectOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProjectWhereInput>;
};


export type QueryStatisticBidNotificationContractorsArgs = {
  cursor?: InputMaybe<BidNotificationContractorWhereUniqueInput>;
  distinct?: InputMaybe<Array<BidNotificationContractorScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<BidNotificationContractorOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<BidNotificationContractorWhereInput>;
};


export type QueryStatisticBidNotificationResultArgs = {
  where: BidNotificationResultWhereUniqueInput;
};


export type QueryStatisticBidNotificationResultsArgs = {
  cursor?: InputMaybe<BidNotificationResultWhereUniqueInput>;
  distinct?: InputMaybe<Array<BidNotificationResultScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<BidNotificationResultOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<BidNotificationResultWhereInput>;
};


export type QueryStatisticBidNotificationsArgs = {
  cursor?: InputMaybe<BidNotificationWhereUniqueInput>;
  distinct?: InputMaybe<Array<BidNotificationScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<BidNotificationOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<BidNotificationWhereInput>;
};


export type QueryStatisticBidPackagesArgs = {
  cursor?: InputMaybe<BidPackageWhereUniqueInput>;
  distinct?: InputMaybe<Array<BidPackageScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<BidPackageOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<BidPackageWhereInput>;
};


export type QueryStatisticBidPetitionContractorsArgs = {
  cursor?: InputMaybe<BidPetitionContractorWhereUniqueInput>;
  distinct?: InputMaybe<Array<BidPetitionContractorScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<BidPetitionContractorOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<BidPetitionContractorWhereInput>;
};


export type QueryStatisticBidSelectionPlanArgs = {
  where: BidSelectionPlanWhereUniqueInput;
};


export type QueryStatisticBidSelectionPlansArgs = {
  cursor?: InputMaybe<BidSelectionPlanWhereUniqueInput>;
  distinct?: InputMaybe<Array<BidSelectionPlanScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<BidSelectionPlanOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<BidSelectionPlanWhereInput>;
};


export type QueryStatisticOrganizationArgs = {
  where: OrganizationWhereUniqueInput;
};


export type QueryStatisticOrganizationsArgs = {
  cursor?: InputMaybe<OrganizationWhereUniqueInput>;
  distinct?: InputMaybe<Array<OrganizationScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StatisticOrganizationOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StatisticOrganizationWhereInput>;
};


export type QueryStatisticProjectArgs = {
  where: ProjectWhereUniqueInput;
};


export type QueryStatisticProjectsArgs = {
  cursor?: InputMaybe<ProjectWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProjectScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProjectOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProjectWhereInput>;
};

export enum QueryMode {
  Default = 'default',
  Insensitive = 'insensitive'
}

export type Role = {
  __typename?: 'Role';
  createdAt: Scalars['DateTime']['output'];
  createdBy: User;
  createdById: Scalars['String']['output'];
  deletedAt?: Maybe<Scalars['DateTime']['output']>;
  description: Scalars['String']['output'];
  id: Scalars['String']['output'];
  name: Scalars['String']['output'];
  type: RoleType;
  updatedAt: Scalars['DateTime']['output'];
  updatedBy: User;
  updatedById: Scalars['String']['output'];
  user?: Maybe<User>;
  userId?: Maybe<Scalars['String']['output']>;
};

export enum RoleType {
  Admin = 'Admin',
  Customer = 'Customer',
  Developer = 'Developer',
  Root = 'Root'
}

export enum SortOrder {
  Asc = 'asc',
  Desc = 'desc'
}

export type SortOrderInput = {
  nulls?: InputMaybe<NullsOrder>;
  sort: SortOrder;
};

export type StatisticAnalysis = {
  __typename?: 'StatisticAnalysis';
  allBidNotificationContractors?: Maybe<Scalars['Int']['output']>;
  allBidNotifications?: Maybe<Scalars['Int']['output']>;
  allBidSelectionPlans?: Maybe<Scalars['Int']['output']>;
  allContractors?: Maybe<Scalars['Int']['output']>;
  attendedContractors?: Maybe<Scalars['Int']['output']>;
  bidNotificationContractors?: Maybe<Scalars['Int']['output']>;
  bidNotifications?: Maybe<Scalars['Int']['output']>;
  bidSelectionPlans?: Maybe<Scalars['Int']['output']>;
};

export type StatisticBidNotification = {
  __typename?: 'StatisticBidNotification';
  _count: BidNotificationCount;
  announcementAt?: Maybe<Scalars['DateTime']['output']>;
  bidNotificationChapters?: Maybe<Array<BidNotificationChapter>>;
  bidNotificationClarifies?: Maybe<Array<BidNotificationClarify>>;
  bidNotificationCode?: Maybe<Scalars['String']['output']>;
  bidNotificationId?: Maybe<Scalars['String']['output']>;
  bidNotificationResultGoodsPrices?: Maybe<Array<BidNotificationResultGoodsPrice>>;
  bidNotificationStatus?: Maybe<CatBidNotificationStatus>;
  bidPackage?: Maybe<BidPackage>;
  bidPackageCode?: Maybe<Scalars['String']['output']>;
  bidPackageId?: Maybe<Scalars['String']['output']>;
  bidPackageName?: Maybe<Scalars['String']['output']>;
  bidPetitionContractors?: Maybe<Array<BidPetitionContractor>>;
  bidPreConferences?: Maybe<Array<BidPreConference>>;
  bidSelectionPlan?: Maybe<BidSelectionPlan>;
  briefFileId?: Maybe<Scalars['String']['output']>;
  briefFileIdEn?: Maybe<Scalars['String']['output']>;
  briefFileName?: Maybe<Scalars['String']['output']>;
  briefFileNameEn?: Maybe<Scalars['String']['output']>;
  cancelByCode?: Maybe<Scalars['String']['output']>;
  cancelDate?: Maybe<Scalars['DateTime']['output']>;
  cancelDecisionAgency?: Maybe<Scalars['String']['output']>;
  cancelDecisionDate?: Maybe<Scalars['DateTime']['output']>;
  cancelDecisionFileId?: Maybe<Scalars['String']['output']>;
  cancelDecisionFileName?: Maybe<Scalars['String']['output']>;
  cancelDecisionNo?: Maybe<Scalars['DateTime']['output']>;
  cancelReason?: Maybe<Scalars['String']['output']>;
  cancelType?: Maybe<Scalars['String']['output']>;
  chapterFiles?: Maybe<Array<BidNotificationChapterFile>>;
  closeDate?: Maybe<Scalars['DateTime']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  constructionType?: Maybe<CatConstructionType>;
  constructionTypeCode?: Maybe<Scalars['String']['output']>;
  constructionTypeId?: Maybe<Scalars['String']['output']>;
  contractors?: Maybe<Array<BidNotificationContractor>>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  customProcuringEntity?: Maybe<StatisticOrganization>;
  decisionAgency?: Maybe<Scalars['String']['output']>;
  decisionAgencyEn?: Maybe<Scalars['String']['output']>;
  decisionDate?: Maybe<Scalars['DateTime']['output']>;
  decisionFileId?: Maybe<Scalars['String']['output']>;
  decisionFileIdEn?: Maybe<Scalars['String']['output']>;
  decisionFileName?: Maybe<Scalars['String']['output']>;
  decisionFileNameEn?: Maybe<Scalars['String']['output']>;
  decisionNo?: Maybe<Scalars['String']['output']>;
  decisionNoEn?: Maybe<Scalars['String']['output']>;
  deletedAt?: Maybe<Scalars['DateTime']['output']>;
  fileId?: Maybe<Scalars['String']['output']>;
  fileName?: Maybe<Scalars['String']['output']>;
  guaranteeForm?: Maybe<Scalars['String']['output']>;
  guaranteeValue?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  investField?: Maybe<CatBidField>;
  investFieldCode?: Maybe<Scalars['String']['output']>;
  investFieldId?: Maybe<Scalars['String']['output']>;
  investor?: Maybe<Organization>;
  investorCode?: Maybe<Scalars['String']['output']>;
  investorId?: Maybe<Scalars['String']['output']>;
  investorName?: Maybe<Scalars['String']['output']>;
  isInviteInterest: Scalars['Boolean']['output'];
  isLatest: Scalars['Boolean']['output'];
  isPreNotification: Scalars['Boolean']['output'];
  issueLocation?: Maybe<Scalars['String']['output']>;
  openDate?: Maybe<Scalars['DateTime']['output']>;
  openLocation?: Maybe<Scalars['String']['output']>;
  otherFileId?: Maybe<Scalars['String']['output']>;
  otherFileIdEn?: Maybe<Scalars['String']['output']>;
  otherFileName?: Maybe<Scalars['String']['output']>;
  otherFileNameEn?: Maybe<Scalars['String']['output']>;
  planCode?: Maybe<Scalars['String']['output']>;
  planId?: Maybe<Scalars['String']['output']>;
  planName?: Maybe<Scalars['String']['output']>;
  planVersion?: Maybe<Scalars['String']['output']>;
  processApply?: Maybe<CatProcessApply>;
  processApplyCode?: Maybe<Scalars['String']['output']>;
  processApplyId?: Maybe<Scalars['String']['output']>;
  procuringEntity?: Maybe<Organization>;
  procuringEntityCode?: Maybe<Scalars['String']['output']>;
  procuringEntityId?: Maybe<Scalars['String']['output']>;
  procuringEntityName?: Maybe<Scalars['String']['output']>;
  publishedAt?: Maybe<Scalars['DateTime']['output']>;
  receiveLocation?: Maybe<Scalars['String']['output']>;
  result?: Maybe<Array<BidNotificationResult>>;
  selectedContractors?: Maybe<Array<StatisticOrganization>>;
  statusCode?: Maybe<Scalars['String']['output']>;
  statusId?: Maybe<Scalars['String']['output']>;
  submitFee?: Maybe<Scalars['String']['output']>;
  totalContractor?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  updatedBy?: Maybe<Scalars['String']['output']>;
  validityPeriod?: Maybe<Scalars['Int']['output']>;
  validityPeriodUnit?: Maybe<Scalars['String']['output']>;
  version?: Maybe<Scalars['String']['output']>;
  versions?: Maybe<Scalars['Int']['output']>;
};

export type StatisticBidNotificationConnection = {
  __typename?: 'StatisticBidNotificationConnection';
  nodes?: Maybe<Array<StatisticBidNotification>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type StatisticBidNotificationContractor = {
  __typename?: 'StatisticBidNotificationContractor';
  bidLotResult?: Maybe<BidLotResult>;
  bidLotResultId?: Maybe<Scalars['String']['output']>;
  bidNotification?: Maybe<BidNotification>;
  bidNotificationCode?: Maybe<Scalars['String']['output']>;
  bidNotificationId?: Maybe<Scalars['String']['output']>;
  bidNotificationResult?: Maybe<BidNotificationResult>;
  bidNotificationResultId?: Maybe<Scalars['String']['output']>;
  contractSignDate?: Maybe<Scalars['DateTime']['output']>;
  contractor?: Maybe<Organization>;
  contractorCode?: Maybe<Scalars['String']['output']>;
  contractorId?: Maybe<Scalars['String']['output']>;
  contractorName?: Maybe<Scalars['String']['output']>;
  discountPercent?: Maybe<Scalars['Decimal']['output']>;
  evalBidPrice?: Maybe<Scalars['Decimal']['output']>;
  falsePhase?: Maybe<Scalars['String']['output']>;
  finalPrice?: Maybe<Scalars['Decimal']['output']>;
  id: Scalars['String']['output'];
  isShortList: Scalars['Boolean']['output'];
  newContractorName?: Maybe<Scalars['String']['output']>;
  price?: Maybe<Scalars['Decimal']['output']>;
  reason?: Maybe<Scalars['String']['output']>;
  result?: Maybe<Scalars['String']['output']>;
  role?: Maybe<Scalars['String']['output']>;
  selectedContractors?: Maybe<Array<StatisticOrganization>>;
  statisticBidNotification?: Maybe<StatisticBidNotification>;
  techScore?: Maybe<Scalars['Decimal']['output']>;
  ventureCode?: Maybe<Scalars['String']['output']>;
  ventureName?: Maybe<Scalars['String']['output']>;
  winningPrice?: Maybe<Scalars['Decimal']['output']>;
};

export type StatisticBidNotificationContractorConnection = {
  __typename?: 'StatisticBidNotificationContractorConnection';
  nodes?: Maybe<Array<StatisticBidNotificationContractor>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type StatisticBidNotificationResult = {
  __typename?: 'StatisticBidNotificationResult';
  _count: BidNotificationResultCount;
  bidLotResults?: Maybe<Array<BidLotResult>>;
  bidNotification?: Maybe<BidNotification>;
  bidNotificationCode?: Maybe<Scalars['String']['output']>;
  bidNotificationContractors?: Maybe<Array<BidNotificationContractor>>;
  bidNotificationId?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  decisionAgency?: Maybe<Scalars['String']['output']>;
  decisionDate?: Maybe<Scalars['DateTime']['output']>;
  decisionFileId?: Maybe<Scalars['String']['output']>;
  decisionFileName?: Maybe<Scalars['String']['output']>;
  decisionNo?: Maybe<Scalars['String']['output']>;
  deletedAt?: Maybe<Scalars['DateTime']['output']>;
  id: Scalars['String']['output'];
  isInviteInterest: Scalars['Boolean']['output'];
  isLatest: Scalars['Boolean']['output'];
  isPreNotification: Scalars['Boolean']['output'];
  loseContractors?: Maybe<Array<BidNotificationContractor>>;
  publishedAt?: Maybe<Scalars['DateTime']['output']>;
  selectedContractors?: Maybe<Array<StatisticOrganization>>;
  statusCode?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  updatedBy?: Maybe<Scalars['String']['output']>;
  version?: Maybe<Scalars['String']['output']>;
  versions?: Maybe<Scalars['Int']['output']>;
  winContractors?: Maybe<Array<BidNotificationContractor>>;
};

export type StatisticBidNotificationResultConnection = {
  __typename?: 'StatisticBidNotificationResultConnection';
  nodes?: Maybe<Array<StatisticBidNotificationResult>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type StatisticBidPackage = {
  __typename?: 'StatisticBidPackage';
  _count: BidPackageCount;
  announcementAt?: Maybe<Scalars['DateTime']['output']>;
  bidEstimatePrice?: Maybe<Scalars['Decimal']['output']>;
  bidField?: Maybe<CatBidField>;
  bidFieldCode?: Maybe<Scalars['String']['output']>;
  bidFieldId?: Maybe<Scalars['String']['output']>;
  bidForm?: Maybe<CatBidForm>;
  bidFormCode?: Maybe<Scalars['String']['output']>;
  bidFormId?: Maybe<Scalars['String']['output']>;
  bidMode?: Maybe<CatBidMode>;
  bidModeCode?: Maybe<Scalars['String']['output']>;
  bidModeId?: Maybe<Scalars['String']['output']>;
  bidNoImg?: Maybe<Scalars['String']['output']>;
  bidNotificationCode?: Maybe<Scalars['String']['output']>;
  bidNotificationVersion?: Maybe<Scalars['String']['output']>;
  bidNotifications?: Maybe<Array<BidNotification>>;
  bidPackageLots?: Maybe<Array<BidPackageLot>>;
  bidPackageSymbol?: Maybe<Scalars['String']['output']>;
  bidPrice?: Maybe<Scalars['Decimal']['output']>;
  bidPriceDetail?: Maybe<Scalars['String']['output']>;
  bidPriceEx?: Maybe<Scalars['String']['output']>;
  bidPriceOld?: Maybe<Scalars['String']['output']>;
  bidPriceUnit?: Maybe<Scalars['String']['output']>;
  bidSelectionPlan?: Maybe<BidSelectionPlan>;
  bidStartMonth?: Maybe<Scalars['Int']['output']>;
  bidStartQuarter?: Maybe<Scalars['String']['output']>;
  bidStartTime?: Maybe<Scalars['String']['output']>;
  bidStartUnit?: Maybe<Scalars['String']['output']>;
  bidStartYear?: Maybe<Scalars['Int']['output']>;
  capitalClassify?: Maybe<Scalars['String']['output']>;
  capitalDetail?: Maybe<Scalars['String']['output']>;
  capitalType?: Maybe<Scalars['String']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  contractPeriod?: Maybe<Scalars['Int']['output']>;
  contractPeriodText?: Maybe<Scalars['String']['output']>;
  contractPeriodUnit?: Maybe<Scalars['String']['output']>;
  contractType?: Maybe<CatContractType>;
  contractTypeCode?: Maybe<Scalars['String']['output']>;
  contractTypeId?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  deletedAt?: Maybe<Scalars['DateTime']['output']>;
  didCancel?: Maybe<Scalars['Boolean']['output']>;
  didLose?: Maybe<Scalars['Boolean']['output']>;
  didNoResult?: Maybe<Scalars['Boolean']['output']>;
  didWin?: Maybe<Scalars['Boolean']['output']>;
  district?: Maybe<CatArea>;
  districtCode?: Maybe<Scalars['String']['output']>;
  districtId?: Maybe<Scalars['String']['output']>;
  exchangeDate?: Maybe<Scalars['DateTime']['output']>;
  id: Scalars['String']['output'];
  isConcentrateShopping: Scalars['Boolean']['output'];
  isDomestic: Scalars['Boolean']['output'];
  isInternet: Scalars['Boolean']['output'];
  isMedicine?: Maybe<Scalars['Boolean']['output']>;
  isMultiLot: Scalars['Boolean']['output'];
  isOnlineShopping: Scalars['Boolean']['output'];
  isPrequalification: Scalars['Boolean']['output'];
  linkNotificationInfo?: Maybe<Scalars['String']['output']>;
  location?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  planCode?: Maybe<Scalars['String']['output']>;
  planCodeOld?: Maybe<Scalars['String']['output']>;
  planId?: Maybe<Scalars['String']['output']>;
  processApply?: Maybe<CatProcessApply>;
  processApplyCode?: Maybe<Scalars['String']['output']>;
  processApplyId?: Maybe<Scalars['String']['output']>;
  province?: Maybe<CatArea>;
  provinceCode?: Maybe<Scalars['String']['output']>;
  provinceId?: Maybe<Scalars['String']['output']>;
  reciprocalCapital?: Maybe<Scalars['String']['output']>;
  reciprocalCapitalUnit?: Maybe<Scalars['String']['output']>;
  selectedContractors?: Maybe<Array<StatisticOrganization>>;
  shoppingAgency?: Maybe<CatAgency>;
  shoppingAgencyCode?: Maybe<Scalars['String']['output']>;
  shoppingAgencyId?: Maybe<Scalars['String']['output']>;
  supervisor?: Maybe<Scalars['String']['output']>;
  underUnit?: Maybe<CatMinistry>;
  underUnitCode?: Maybe<Scalars['String']['output']>;
  underUnitId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  updatedBy?: Maybe<Scalars['String']['output']>;
  ward?: Maybe<CatArea>;
  wardCode?: Maybe<Scalars['String']['output']>;
  wardId?: Maybe<Scalars['String']['output']>;
};

export type StatisticBidPackageConnection = {
  __typename?: 'StatisticBidPackageConnection';
  nodes?: Maybe<Array<StatisticBidPackage>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type StatisticBidPetitionContractor = {
  __typename?: 'StatisticBidPetitionContractor';
  bidNotification?: Maybe<BidNotification>;
  bidNotificationCode?: Maybe<Scalars['String']['output']>;
  bidNotificationId?: Maybe<Scalars['String']['output']>;
  bidNotificationVersion?: Maybe<Scalars['String']['output']>;
  cancelFileId?: Maybe<Scalars['String']['output']>;
  cancelFileName?: Maybe<Scalars['String']['output']>;
  content?: Maybe<Scalars['String']['output']>;
  contractor?: Maybe<Organization>;
  contractorCode?: Maybe<Scalars['String']['output']>;
  contractorId?: Maybe<Scalars['String']['output']>;
  contractorName?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  createdByCode?: Maybe<Scalars['String']['output']>;
  draft?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  isDecision?: Maybe<Scalars['Boolean']['output']>;
  isInternet?: Maybe<Scalars['Boolean']['output']>;
  package?: Maybe<BidPackage>;
  packageCode?: Maybe<Scalars['String']['output']>;
  packageId?: Maybe<Scalars['String']['output']>;
  packageLotCode?: Maybe<Scalars['String']['output']>;
  packageLotName?: Maybe<Scalars['String']['output']>;
  packageName?: Maybe<Scalars['String']['output']>;
  personReceiveRequest?: Maybe<Scalars['String']['output']>;
  petitionTypeCode?: Maybe<Scalars['String']['output']>;
  plan?: Maybe<BidSelectionPlan>;
  planCode?: Maybe<Scalars['String']['output']>;
  planId?: Maybe<Scalars['String']['output']>;
  prepareUserId?: Maybe<Scalars['String']['output']>;
  prepareUserInfo?: Maybe<Scalars['String']['output']>;
  reason?: Maybe<Scalars['String']['output']>;
  requestCode?: Maybe<Scalars['String']['output']>;
  requestContent?: Maybe<Scalars['String']['output']>;
  requestDate?: Maybe<Scalars['DateTime']['output']>;
  requestFileId?: Maybe<Scalars['String']['output']>;
  requestFileName?: Maybe<Scalars['String']['output']>;
  requestName?: Maybe<Scalars['String']['output']>;
  requestVersion?: Maybe<Scalars['String']['output']>;
  responseContent?: Maybe<Scalars['String']['output']>;
  responseDate?: Maybe<Scalars['DateTime']['output']>;
  responseFileId?: Maybe<Scalars['String']['output']>;
  responseFileName?: Maybe<Scalars['String']['output']>;
  resultPublicDate?: Maybe<Scalars['DateTime']['output']>;
  senderUserId?: Maybe<Scalars['String']['output']>;
  senderUserInfo?: Maybe<Scalars['String']['output']>;
  signContent?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  updatedByCode?: Maybe<Scalars['String']['output']>;
};

export type StatisticBidSelectionPlan = {
  __typename?: 'StatisticBidSelectionPlan';
  _count: BidSelectionPlanCount;
  bidLotResults?: Maybe<Array<BidLotResult>>;
  bidNotifications?: Maybe<Array<BidNotification>>;
  bidPackages?: Maybe<Array<BidPackage>>;
  bidPackagesAmount?: Maybe<Scalars['Int']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  decisionAgency?: Maybe<Scalars['String']['output']>;
  decisionDate?: Maybe<Scalars['DateTime']['output']>;
  decisionFileId?: Maybe<Scalars['String']['output']>;
  decisionFileName?: Maybe<Scalars['String']['output']>;
  decisionNo?: Maybe<Scalars['String']['output']>;
  deletedAt?: Maybe<Scalars['DateTime']['output']>;
  id: Scalars['String']['output'];
  investor?: Maybe<Organization>;
  investorCode?: Maybe<Scalars['String']['output']>;
  investorId?: Maybe<Scalars['String']['output']>;
  investorName?: Maybe<Scalars['String']['output']>;
  isLatest: Scalars['Boolean']['output'];
  name?: Maybe<Scalars['String']['output']>;
  numberOfBidPackage?: Maybe<Scalars['Int']['output']>;
  procuringEntity?: Maybe<Organization>;
  procuringEntityCode?: Maybe<Scalars['String']['output']>;
  procuringEntityId?: Maybe<Scalars['String']['output']>;
  procuringEntityName?: Maybe<Scalars['String']['output']>;
  project?: Maybe<Project>;
  projectId?: Maybe<Scalars['String']['output']>;
  publishedAt?: Maybe<Scalars['DateTime']['output']>;
  status?: Maybe<CatBidSelectionPlanStatus>;
  statusCode?: Maybe<Scalars['String']['output']>;
  statusId?: Maybe<Scalars['String']['output']>;
  totalInvestment?: Maybe<Scalars['Decimal']['output']>;
  totalInvestmentEx?: Maybe<Scalars['Decimal']['output']>;
  totalInvestmentUnit?: Maybe<Scalars['String']['output']>;
  type?: Maybe<CatBidSelectionPlanType>;
  typeCode?: Maybe<Scalars['String']['output']>;
  typeId?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  updatedBy?: Maybe<Scalars['String']['output']>;
  version?: Maybe<Scalars['String']['output']>;
  versions?: Maybe<Scalars['Int']['output']>;
};

export type StatisticBidSelectionPlanConnection = {
  __typename?: 'StatisticBidSelectionPlanConnection';
  nodes?: Maybe<Array<StatisticBidSelectionPlan>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type StatisticOrganization = {
  __typename?: 'StatisticOrganization';
  _count: OrganizationCount;
  accountingType?: Maybe<Scalars['String']['output']>;
  adviseBidInviteRate?: Maybe<Scalars['Int']['output']>;
  agencyName?: Maybe<Scalars['String']['output']>;
  announcementBidSelectionPlans?: Maybe<Scalars['Int']['output']>;
  appointWinSelfBidPackageValue?: Maybe<Scalars['Int']['output']>;
  appointWinVentureBidPackageValue?: Maybe<Scalars['Int']['output']>;
  attendedBidPackages?: Maybe<Scalars['Int']['output']>;
  attendedBiddingsProvinces?: Maybe<Array<Scalars['String']['output']>>;
  authenType?: Maybe<Scalars['Int']['output']>;
  averagePriceLoseBiddingRate?: Maybe<Scalars['Int']['output']>;
  averagePriceWinBiddingRate?: Maybe<Scalars['Int']['output']>;
  averatedAttendedBidPackageContractors?: Maybe<Scalars['Int']['output']>;
  bidPackageCompeteContractors?: Maybe<Scalars['Int']['output']>;
  bidPackageVentureContractors?: Maybe<Scalars['Int']['output']>;
  bidPetitionContractor?: Maybe<Array<BidPetitionContractor>>;
  briefName?: Maybe<Scalars['String']['output']>;
  budgetCode?: Maybe<Scalars['String']['output']>;
  businessStatus?: Maybe<Scalars['String']['output']>;
  businessType?: Maybe<CatBusinessType>;
  businessTypeCode?: Maybe<Scalars['String']['output']>;
  businessTypeId?: Maybe<Scalars['String']['output']>;
  caRegister?: Maybe<Scalars['Boolean']['output']>;
  cancelAttendedBidPackages?: Maybe<Scalars['Int']['output']>;
  cancelBidPackageCompeteContractors?: Maybe<Scalars['Int']['output']>;
  cancelBidPackageVentureContractors?: Maybe<Scalars['Int']['output']>;
  chapterCode?: Maybe<Scalars['String']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  competeContractors?: Maybe<Scalars['Int']['output']>;
  constructionBidInviteRate?: Maybe<Scalars['Int']['output']>;
  countryCode?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  currentBidNotifications?: Maybe<Scalars['Int']['output']>;
  currentBidPackage?: Maybe<Scalars['Int']['output']>;
  currentBidPreNotifications?: Maybe<Scalars['Int']['output']>;
  deletedAt?: Maybe<Scalars['DateTime']['output']>;
  enName?: Maybe<Scalars['String']['output']>;
  goodsBidInviteRate?: Maybe<Scalars['Int']['output']>;
  id: Scalars['String']['output'];
  investedProjects?: Maybe<Scalars['Int']['output']>;
  investorBidNotification?: Maybe<Array<BidNotification>>;
  investorBidSelectionPlans?: Maybe<Array<BidSelectionPlan>>;
  isAgencies?: Maybe<Scalars['Int']['output']>;
  isBidderInvestor: Scalars['Boolean']['output'];
  isBidderInvite: Scalars['Boolean']['output'];
  isBiddingFacility: Scalars['Boolean']['output'];
  isCompetentAuthorities: Scalars['Boolean']['output'];
  isContractor: Scalars['Boolean']['output'];
  isForeignInvestor?: Maybe<Scalars['Boolean']['output']>;
  isInvestor: Scalars['Boolean']['output'];
  isPlanInvest?: Maybe<Scalars['Int']['output']>;
  loseAttendedBidPackages?: Maybe<Scalars['Int']['output']>;
  loseBidPackageCompeteContractors?: Maybe<Scalars['Int']['output']>;
  loseBidPackageVentureContractors?: Maybe<Scalars['Int']['output']>;
  loseBidPackages?: Maybe<Scalars['Int']['output']>;
  lowestInvitePriceBiddingRate?: Maybe<Scalars['Int']['output']>;
  missingPlanResultBidPackages?: Maybe<Scalars['Int']['output']>;
  mixBidInviteRate?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  noNotifyMissingPlanResultBidPackages?: Maybe<Scalars['Int']['output']>;
  noProjectBidSelectionPlans?: Maybe<Scalars['Int']['output']>;
  noResultBidPackageCompeteContractors?: Maybe<Scalars['Int']['output']>;
  noResultBidPackageVentureContractors?: Maybe<Scalars['Int']['output']>;
  notifyBidPackages?: Maybe<Scalars['Int']['output']>;
  officeAddress?: Maybe<Scalars['String']['output']>;
  officeDistrict?: Maybe<CatArea>;
  officeDistrictCode?: Maybe<Scalars['String']['output']>;
  officeDistrictId?: Maybe<Scalars['String']['output']>;
  officePhone?: Maybe<Scalars['String']['output']>;
  officeProvince?: Maybe<CatArea>;
  officeProvinceCode?: Maybe<Scalars['String']['output']>;
  officeProvinceId?: Maybe<Scalars['String']['output']>;
  officeWard?: Maybe<CatArea>;
  officeWardCode?: Maybe<Scalars['String']['output']>;
  officeWardId?: Maybe<Scalars['String']['output']>;
  officeWeb?: Maybe<Scalars['String']['output']>;
  officeZipcode?: Maybe<Scalars['String']['output']>;
  oldCode?: Maybe<Scalars['String']['output']>;
  organizationBusiness?: Maybe<Array<OrganizationBusiness>>;
  otherBidInviteRate?: Maybe<Scalars['Int']['output']>;
  otherBidNotifications?: Maybe<Scalars['Int']['output']>;
  ownBidNotifications?: Maybe<Scalars['Int']['output']>;
  proManagementUnit?: Maybe<Scalars['String']['output']>;
  procuringEntity?: Maybe<Array<BidNotification>>;
  procuringEntityBidSelectionPlans?: Maybe<Array<BidSelectionPlan>>;
  projects?: Maybe<Array<Project>>;
  publishedBidSelectionPlans?: Maybe<Scalars['Int']['output']>;
  rawFiles?: Maybe<Scalars['JSON']['output']>;
  reason?: Maybe<Scalars['String']['output']>;
  receiverAddress?: Maybe<Scalars['String']['output']>;
  receiverByOffice?: Maybe<Scalars['Int']['output']>;
  receiverDistrict?: Maybe<CatArea>;
  receiverDistrictCode?: Maybe<Scalars['String']['output']>;
  receiverDistrictId?: Maybe<Scalars['String']['output']>;
  receiverEmail?: Maybe<Scalars['String']['output']>;
  receiverEmailElecInvo?: Maybe<Scalars['String']['output']>;
  receiverIdDate?: Maybe<Scalars['String']['output']>;
  receiverIdNo?: Maybe<Scalars['String']['output']>;
  receiverName?: Maybe<Scalars['String']['output']>;
  receiverPhone?: Maybe<Scalars['String']['output']>;
  receiverProvince?: Maybe<CatArea>;
  receiverProvinceCode?: Maybe<Scalars['String']['output']>;
  receiverProvinceId?: Maybe<Scalars['String']['output']>;
  receiverWard?: Maybe<CatArea>;
  receiverWardCode?: Maybe<Scalars['String']['output']>;
  receiverWardId?: Maybe<Scalars['String']['output']>;
  receiverZipcode?: Maybe<Scalars['String']['output']>;
  relatedContractors?: Maybe<Scalars['Int']['output']>;
  relatedInviteBidders?: Maybe<Scalars['Int']['output']>;
  repEmail?: Maybe<Scalars['String']['output']>;
  repFullName?: Maybe<Scalars['String']['output']>;
  repIdCountryCode?: Maybe<Scalars['String']['output']>;
  repIdDate?: Maybe<Scalars['String']['output']>;
  repIdNo?: Maybe<Scalars['String']['output']>;
  repIdType?: Maybe<Scalars['String']['output']>;
  repPhone?: Maybe<Scalars['String']['output']>;
  repPosition?: Maybe<Scalars['String']['output']>;
  resultBidPackages?: Maybe<Scalars['Int']['output']>;
  resultCancelBidPackages?: Maybe<Scalars['Int']['output']>;
  resultNoNotifyBidPackages?: Maybe<Scalars['Int']['output']>;
  resultNoNotifyWinSelfBidPackageValue?: Maybe<Scalars['Int']['output']>;
  resultNoNotifyWinVentureBidPackageValue?: Maybe<Scalars['Int']['output']>;
  sanctioningDecisionsBiddings?: Maybe<Scalars['Int']['output']>;
  saveRate?: Maybe<Scalars['Int']['output']>;
  selfPublishedBidSelectionPlans?: Maybe<Scalars['Int']['output']>;
  taxCode?: Maybe<Scalars['String']['output']>;
  taxCodeStatus?: Maybe<Scalars['String']['output']>;
  taxDate?: Maybe<Scalars['DateTime']['output']>;
  totalBidPackages?: Maybe<Scalars['Int']['output']>;
  totalProjects?: Maybe<Scalars['Int']['output']>;
  totalValidPlanBidPackageValue?: Maybe<Scalars['Int']['output']>;
  totalWinSelfBidPackageValue?: Maybe<Scalars['Int']['output']>;
  totalWinValidPlanBidPackageValue?: Maybe<Scalars['Int']['output']>;
  totalWinVentureBidPackageValue?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  ventureContractors?: Maybe<Scalars['Int']['output']>;
  waitResultAttendedBidPackages?: Maybe<Scalars['Int']['output']>;
  waitingBidPackage?: Maybe<Scalars['Int']['output']>;
  waitingResultBidPackages?: Maybe<Scalars['Int']['output']>;
  watchedStatuses?: Maybe<Scalars['Int']['output']>;
  winAttendedBidPackages?: Maybe<Scalars['Int']['output']>;
  winBidPackageCompeteContractors?: Maybe<Scalars['Int']['output']>;
  winBidPackageVentureContractors?: Maybe<Scalars['Int']['output']>;
  winBidPackages?: Maybe<Scalars['Int']['output']>;
};

export type StatisticOrganizationConnection = {
  __typename?: 'StatisticOrganizationConnection';
  nodes?: Maybe<Array<StatisticOrganization>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type StatisticOrganizationOrderByWithRelationInput = {
  accountingType?: InputMaybe<SortOrderInput>;
  agencyName?: InputMaybe<SortOrderInput>;
  attendedBidPackages?: InputMaybe<SortOrderInput>;
  authenType?: InputMaybe<SortOrderInput>;
  bidPetitionContractor?: InputMaybe<BidPetitionContractorOrderByRelationAggregateInput>;
  briefName?: InputMaybe<SortOrderInput>;
  budgetCode?: InputMaybe<SortOrderInput>;
  businessStatus?: InputMaybe<SortOrderInput>;
  businessType?: InputMaybe<CatBusinessTypeOrderByWithRelationInput>;
  businessTypeCode?: InputMaybe<SortOrderInput>;
  businessTypeId?: InputMaybe<SortOrderInput>;
  caRegister?: InputMaybe<SortOrderInput>;
  chapterCode?: InputMaybe<SortOrderInput>;
  code?: InputMaybe<SortOrderInput>;
  countryCode?: InputMaybe<SortOrderInput>;
  createdAt?: InputMaybe<SortOrderInput>;
  deletedAt?: InputMaybe<SortOrderInput>;
  enName?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanOrderByRelationAggregateInput>;
  isAgencies?: InputMaybe<SortOrderInput>;
  isBidderInvestor?: InputMaybe<SortOrder>;
  isBidderInvite?: InputMaybe<SortOrder>;
  isBiddingFacility?: InputMaybe<SortOrder>;
  isCompetentAuthorities?: InputMaybe<SortOrder>;
  isContractor?: InputMaybe<SortOrder>;
  isForeignInvestor?: InputMaybe<SortOrderInput>;
  isInvestor?: InputMaybe<SortOrder>;
  isPlanInvest?: InputMaybe<SortOrderInput>;
  loseBidPackages?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrderInput>;
  officeAddress?: InputMaybe<SortOrderInput>;
  officeDistrict?: InputMaybe<CatAreaOrderByWithRelationInput>;
  officeDistrictCode?: InputMaybe<SortOrderInput>;
  officeDistrictId?: InputMaybe<SortOrderInput>;
  officePhone?: InputMaybe<SortOrderInput>;
  officeProvince?: InputMaybe<CatAreaOrderByWithRelationInput>;
  officeProvinceCode?: InputMaybe<SortOrderInput>;
  officeProvinceId?: InputMaybe<SortOrderInput>;
  officeWard?: InputMaybe<CatAreaOrderByWithRelationInput>;
  officeWardCode?: InputMaybe<SortOrderInput>;
  officeWardId?: InputMaybe<SortOrderInput>;
  officeWeb?: InputMaybe<SortOrderInput>;
  officeZipcode?: InputMaybe<SortOrderInput>;
  oldCode?: InputMaybe<SortOrderInput>;
  organizationBusiness?: InputMaybe<OrganizationBusinessOrderByRelationAggregateInput>;
  proManagementUnit?: InputMaybe<SortOrderInput>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanOrderByRelationAggregateInput>;
  projects?: InputMaybe<ProjectOrderByRelationAggregateInput>;
  rawFiles?: InputMaybe<SortOrderInput>;
  reason?: InputMaybe<SortOrderInput>;
  receiverAddress?: InputMaybe<SortOrderInput>;
  receiverByOffice?: InputMaybe<SortOrderInput>;
  receiverDistrict?: InputMaybe<CatAreaOrderByWithRelationInput>;
  receiverDistrictCode?: InputMaybe<SortOrderInput>;
  receiverDistrictId?: InputMaybe<SortOrderInput>;
  receiverEmail?: InputMaybe<SortOrderInput>;
  receiverEmailElecInvo?: InputMaybe<SortOrderInput>;
  receiverIdDate?: InputMaybe<SortOrderInput>;
  receiverIdNo?: InputMaybe<SortOrderInput>;
  receiverName?: InputMaybe<SortOrderInput>;
  receiverPhone?: InputMaybe<SortOrderInput>;
  receiverProvince?: InputMaybe<CatAreaOrderByWithRelationInput>;
  receiverProvinceCode?: InputMaybe<SortOrderInput>;
  receiverProvinceId?: InputMaybe<SortOrderInput>;
  receiverWard?: InputMaybe<CatAreaOrderByWithRelationInput>;
  receiverWardCode?: InputMaybe<SortOrderInput>;
  receiverWardId?: InputMaybe<SortOrderInput>;
  receiverZipcode?: InputMaybe<SortOrderInput>;
  repEmail?: InputMaybe<SortOrderInput>;
  repFullName?: InputMaybe<SortOrderInput>;
  repIdCountryCode?: InputMaybe<SortOrderInput>;
  repIdDate?: InputMaybe<SortOrderInput>;
  repIdNo?: InputMaybe<SortOrderInput>;
  repIdType?: InputMaybe<SortOrderInput>;
  repPhone?: InputMaybe<SortOrderInput>;
  repPosition?: InputMaybe<SortOrderInput>;
  taxCode?: InputMaybe<SortOrderInput>;
  taxCodeStatus?: InputMaybe<SortOrderInput>;
  taxDate?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
  watchedStatuses?: InputMaybe<SortOrderInput>;
  winBidPackages?: InputMaybe<SortOrderInput>;
};

export type StatisticOrganizationWhereInput = {
  AND?: InputMaybe<Array<StatisticOrganizationWhereInput>>;
  NOT?: InputMaybe<Array<StatisticOrganizationWhereInput>>;
  OR?: InputMaybe<Array<StatisticOrganizationWhereInput>>;
  accountingType?: InputMaybe<StringNullableFilter>;
  agencyName?: InputMaybe<StringNullableFilter>;
  authenType?: InputMaybe<IntNullableFilter>;
  bidPetitionContractor?: InputMaybe<BidPetitionContractorListRelationFilter>;
  briefName?: InputMaybe<StringNullableFilter>;
  budgetCode?: InputMaybe<StringNullableFilter>;
  businessStatus?: InputMaybe<StringNullableFilter>;
  businessType?: InputMaybe<CatBusinessTypeWhereInput>;
  businessTypeCode?: InputMaybe<StringNullableFilter>;
  businessTypeId?: InputMaybe<StringNullableFilter>;
  caRegister?: InputMaybe<BoolNullableFilter>;
  chapterCode?: InputMaybe<StringNullableFilter>;
  code?: InputMaybe<StringNullableFilter>;
  countryCode?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  enName?: InputMaybe<StringNullableFilter>;
  failBidPackages?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<StringFilter>;
  investorBidSelectionPlans?: InputMaybe<BidSelectionPlanListRelationFilter>;
  isAgencies?: InputMaybe<IntNullableFilter>;
  isBidderInvestor?: InputMaybe<BoolFilter>;
  isBidderInvite?: InputMaybe<BoolFilter>;
  isBiddingFacility?: InputMaybe<BoolFilter>;
  isCompetentAuthorities?: InputMaybe<BoolFilter>;
  isContractor?: InputMaybe<BoolFilter>;
  isForeignInvestor?: InputMaybe<BoolNullableFilter>;
  isInvestor?: InputMaybe<BoolFilter>;
  isPlanInvest?: InputMaybe<IntNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  officeAddress?: InputMaybe<StringNullableFilter>;
  officeDistrict?: InputMaybe<CatAreaWhereInput>;
  officeDistrictCode?: InputMaybe<StringNullableFilter>;
  officeDistrictId?: InputMaybe<StringNullableFilter>;
  officePhone?: InputMaybe<StringNullableFilter>;
  officeProvince?: InputMaybe<CatAreaWhereInput>;
  officeProvinceCode?: InputMaybe<StringNullableFilter>;
  officeProvinceId?: InputMaybe<StringNullableFilter>;
  officeWard?: InputMaybe<CatAreaWhereInput>;
  officeWardCode?: InputMaybe<StringNullableFilter>;
  officeWardId?: InputMaybe<StringNullableFilter>;
  officeWeb?: InputMaybe<StringNullableFilter>;
  officeZipcode?: InputMaybe<StringNullableFilter>;
  oldCode?: InputMaybe<StringNullableFilter>;
  organizationBusiness?: InputMaybe<OrganizationBusinessListRelationFilter>;
  proManagementUnit?: InputMaybe<StringNullableFilter>;
  procuringEntityBidSelectionPlans?: InputMaybe<BidSelectionPlanListRelationFilter>;
  projects?: InputMaybe<ProjectListRelationFilter>;
  rawFiles?: InputMaybe<JsonNullableFilter>;
  reason?: InputMaybe<StringNullableFilter>;
  receiverAddress?: InputMaybe<StringNullableFilter>;
  receiverByOffice?: InputMaybe<IntNullableFilter>;
  receiverDistrict?: InputMaybe<CatAreaWhereInput>;
  receiverDistrictCode?: InputMaybe<StringNullableFilter>;
  receiverDistrictId?: InputMaybe<StringNullableFilter>;
  receiverEmail?: InputMaybe<StringNullableFilter>;
  receiverEmailElecInvo?: InputMaybe<StringNullableFilter>;
  receiverIdDate?: InputMaybe<StringNullableFilter>;
  receiverIdNo?: InputMaybe<StringNullableFilter>;
  receiverName?: InputMaybe<StringNullableFilter>;
  receiverPhone?: InputMaybe<StringNullableFilter>;
  receiverProvince?: InputMaybe<CatAreaWhereInput>;
  receiverProvinceCode?: InputMaybe<StringNullableFilter>;
  receiverProvinceId?: InputMaybe<StringNullableFilter>;
  receiverWard?: InputMaybe<CatAreaWhereInput>;
  receiverWardCode?: InputMaybe<StringNullableFilter>;
  receiverWardId?: InputMaybe<StringNullableFilter>;
  receiverZipcode?: InputMaybe<StringNullableFilter>;
  repEmail?: InputMaybe<StringNullableFilter>;
  repFullName?: InputMaybe<StringNullableFilter>;
  repIdCountryCode?: InputMaybe<StringNullableFilter>;
  repIdDate?: InputMaybe<StringNullableFilter>;
  repIdNo?: InputMaybe<StringNullableFilter>;
  repIdType?: InputMaybe<StringNullableFilter>;
  repPhone?: InputMaybe<StringNullableFilter>;
  repPosition?: InputMaybe<StringNullableFilter>;
  taxCode?: InputMaybe<StringNullableFilter>;
  taxCodeStatus?: InputMaybe<StringNullableFilter>;
  taxDate?: InputMaybe<DateTimeNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  watchedStatuses?: InputMaybe<Scalars['Int']['input']>;
  winBidPackages?: InputMaybe<Scalars['Int']['input']>;
};

export type StatisticProject = {
  __typename?: 'StatisticProject';
  _count: ProjectCount;
  bidSelectionPlans?: Maybe<Array<BidSelectionPlan>>;
  code?: Maybe<Scalars['String']['output']>;
  competentPerson?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  decisionAgency?: Maybe<Scalars['String']['output']>;
  decisionDate?: Maybe<Scalars['DateTime']['output']>;
  decisionFileId?: Maybe<Scalars['String']['output']>;
  decisionFileName?: Maybe<Scalars['String']['output']>;
  decisionNo?: Maybe<Scalars['String']['output']>;
  deletedAt?: Maybe<Scalars['DateTime']['output']>;
  district?: Maybe<CatArea>;
  districtCode?: Maybe<Scalars['String']['output']>;
  districtId?: Maybe<Scalars['String']['output']>;
  group?: Maybe<CatProjectGroup>;
  groupCode?: Maybe<Scalars['String']['output']>;
  groupId?: Maybe<Scalars['String']['output']>;
  groupName?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  investmentForm?: Maybe<CatInvestmentForm>;
  investmentFormCode?: Maybe<Scalars['String']['output']>;
  investmentFormId?: Maybe<Scalars['String']['output']>;
  investmentScale?: Maybe<Scalars['String']['output']>;
  investmentTarget?: Maybe<Scalars['String']['output']>;
  investor?: Maybe<Organization>;
  investorCode?: Maybe<Scalars['String']['output']>;
  investorId?: Maybe<Scalars['String']['output']>;
  investorName?: Maybe<Scalars['String']['output']>;
  isLatest: Scalars['Boolean']['output'];
  isOda: Scalars['Boolean']['output'];
  listPlanCode?: Maybe<Scalars['String']['output']>;
  managementForm?: Maybe<CatProjectManagementForm>;
  managementFormCode?: Maybe<Scalars['String']['output']>;
  managementFormId?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  period?: Maybe<Scalars['Int']['output']>;
  periodUnit?: Maybe<Scalars['String']['output']>;
  province?: Maybe<CatArea>;
  provinceCode?: Maybe<Scalars['String']['output']>;
  provinceId?: Maybe<Scalars['String']['output']>;
  publishedAt?: Maybe<Scalars['DateTime']['output']>;
  reciprocalCapital?: Maybe<Scalars['Decimal']['output']>;
  reciprocalCapitalUnit?: Maybe<Scalars['String']['output']>;
  status?: Maybe<CatProjectStatus>;
  statusCode?: Maybe<Scalars['String']['output']>;
  statusId?: Maybe<Scalars['String']['output']>;
  totalInvestment?: Maybe<Scalars['Decimal']['output']>;
  totalInvestmentEx?: Maybe<Scalars['Decimal']['output']>;
  totalInvestmentUnit?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  updatedBy?: Maybe<Scalars['String']['output']>;
  version?: Maybe<Scalars['String']['output']>;
  versions?: Maybe<Scalars['Int']['output']>;
};

export type StatisticProjectConnection = {
  __typename?: 'StatisticProjectConnection';
  nodes?: Maybe<Array<StatisticProject>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type StatisticStatisticBidPetitionContractorConnection = {
  __typename?: 'StatisticStatisticBidPetitionContractorConnection';
  nodes?: Maybe<Array<StatisticBidPetitionContractor>>;
  pageInfo: PageInfo;
  totalCount: Scalars['Int']['output'];
};

export type StringFieldUpdateOperationsInput = {
  set?: InputMaybe<Scalars['String']['input']>;
};

export type StringFilter = {
  contains?: InputMaybe<Scalars['String']['input']>;
  endsWith?: InputMaybe<Scalars['String']['input']>;
  equals?: InputMaybe<Scalars['String']['input']>;
  gt?: InputMaybe<Scalars['String']['input']>;
  gte?: InputMaybe<Scalars['String']['input']>;
  in?: InputMaybe<Array<Scalars['String']['input']>>;
  lt?: InputMaybe<Scalars['String']['input']>;
  lte?: InputMaybe<Scalars['String']['input']>;
  mode?: InputMaybe<QueryMode>;
  not?: InputMaybe<NestedStringFilter>;
  notIn?: InputMaybe<Array<Scalars['String']['input']>>;
  startsWith?: InputMaybe<Scalars['String']['input']>;
};

export type StringNullableFilter = {
  contains?: InputMaybe<Scalars['String']['input']>;
  endsWith?: InputMaybe<Scalars['String']['input']>;
  equals?: InputMaybe<Scalars['String']['input']>;
  gt?: InputMaybe<Scalars['String']['input']>;
  gte?: InputMaybe<Scalars['String']['input']>;
  in?: InputMaybe<Array<Scalars['String']['input']>>;
  lt?: InputMaybe<Scalars['String']['input']>;
  lte?: InputMaybe<Scalars['String']['input']>;
  mode?: InputMaybe<QueryMode>;
  not?: InputMaybe<NestedStringNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['String']['input']>>;
  startsWith?: InputMaybe<Scalars['String']['input']>;
};

export type Token = {
  __typename?: 'Token';
  /** JWT access token */
  accessToken: Scalars['JWT']['output'];
  /** JWT refresh token */
  refreshToken: Scalars['JWT']['output'];
};

export type User = {
  __typename?: 'User';
  _count: UserCount;
  createdAt: Scalars['DateTime']['output'];
  createdById?: Maybe<Scalars['String']['output']>;
  createdRoles?: Maybe<Array<Role>>;
  createdUserBy?: Maybe<User>;
  createdUsers?: Maybe<Array<User>>;
  deletedAt?: Maybe<Scalars['DateTime']['output']>;
  email: Scalars['String']['output'];
  firstname?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  lastname?: Maybe<Scalars['String']['output']>;
  roleType: RoleType;
  roles?: Maybe<Array<Role>>;
  updatedAt: Scalars['DateTime']['output'];
  updatedById?: Maybe<Scalars['String']['output']>;
  updatedRoles?: Maybe<Array<Role>>;
  updatedUserBy?: Maybe<User>;
  updatedUsers?: Maybe<Array<User>>;
  username: Scalars['String']['output'];
};

export type UserCount = {
  __typename?: 'UserCount';
  createdRoles: Scalars['Int']['output'];
  createdUsers: Scalars['Int']['output'];
  roles: Scalars['Int']['output'];
  updatedRoles: Scalars['Int']['output'];
  updatedUsers: Scalars['Int']['output'];
};

export type StatisticBidNotificationsQueryVariables = Exact<{
  orderBy?: InputMaybe<Array<BidNotificationOrderByWithRelationInput> | BidNotificationOrderByWithRelationInput>;
  take?: InputMaybe<Scalars['Int']['input']>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<BidNotificationWhereInput>;
}>;


export type StatisticBidNotificationsQuery = { __typename?: 'Query', statisticBidNotifications: { __typename?: 'StatisticBidNotificationConnection', totalCount: number, nodes?: Array<{ __typename?: 'StatisticBidNotification', id: string, isLatest: boolean, version?: string | null, code?: string | null, isPreNotification: boolean, statusCode?: string | null, versions?: number | null, closeDate?: any | null, openDate?: any | null, decisionDate?: any | null, bidPackage?: { __typename?: 'BidPackage', id: string, bidFieldCode?: string | null, bidFormCode?: string | null, name?: string | null, bidPrice?: any | null, provinceId?: string | null, isInternet: boolean, bidSelectionPlan?: { __typename?: 'BidSelectionPlan', id: string, project?: { __typename?: 'Project', name?: string | null, investor?: { __typename?: 'Organization', name?: string | null, businessType?: { __typename?: 'CatBusinessType', name?: string | null } | null } | null } | null } | null } | null }> | null } };

export type BidNotificationQueryVariables = Exact<{
  where: BidNotificationWhereUniqueInput;
}>;


export type BidNotificationQuery = { __typename?: 'Query', bidNotification: { __typename?: 'BidNotification', id: string, isLatest: boolean, code?: string | null, isPreNotification: boolean, statusCode?: string | null, closeDate?: any | null, openDate?: any | null, decisionDate?: any | null, bidPackage?: { __typename?: 'BidPackage', id: string, bidFieldCode?: string | null, bidFormCode?: string | null, name?: string | null, bidPrice?: any | null, provinceId?: string | null, isInternet: boolean, bidSelectionPlan?: { __typename?: 'BidSelectionPlan', id: string, project?: { __typename?: 'Project', name?: string | null, investor?: { __typename?: 'Organization', name?: string | null, businessType?: { __typename?: 'CatBusinessType', name?: string | null } | null } | null } | null } | null } | null } };

export type StatisticBidSelectionPlansQueryVariables = Exact<{
  orderBy?: InputMaybe<Array<BidSelectionPlanOrderByWithRelationInput> | BidSelectionPlanOrderByWithRelationInput>;
  take?: InputMaybe<Scalars['Int']['input']>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<BidSelectionPlanWhereInput>;
}>;


export type StatisticBidSelectionPlansQuery = { __typename?: 'Query', statisticBidSelectionPlans: { __typename?: 'StatisticBidSelectionPlanConnection', totalCount: number, nodes?: Array<{ __typename?: 'StatisticBidSelectionPlan', id: string, version?: string | null, code?: string | null, investorName?: string | null, totalInvestment?: any | null, typeCode?: string | null, decisionDate?: any | null, procuringEntityName?: string | null, versions?: number | null, bidPackagesAmount?: number | null, procuringEntityCode?: string | null, project?: { __typename?: 'Project', name?: string | null, province?: { __typename?: 'CatArea', name: string } | null } | null }> | null } };

export type StatisticBidSelectionPlanQueryVariables = Exact<{
  where: BidSelectionPlanWhereUniqueInput;
}>;


export type StatisticBidSelectionPlanQuery = { __typename?: 'Query', statisticBidSelectionPlan: { __typename?: 'StatisticBidSelectionPlan', id: string, version?: string | null, code?: string | null, investorName?: string | null, totalInvestment?: any | null, typeCode?: string | null, decisionDate?: any | null, procuringEntityName?: string | null, versions?: number | null, bidPackagesAmount?: number | null, procuringEntityCode?: string | null, project?: { __typename?: 'Project', name?: string | null, province?: { __typename?: 'CatArea', name: string } | null } | null } };

export type StatisticBidNotificationResultsQueryVariables = Exact<{
  orderBy?: InputMaybe<Array<BidNotificationResultOrderByWithRelationInput> | BidNotificationResultOrderByWithRelationInput>;
  take?: InputMaybe<Scalars['Int']['input']>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<BidNotificationResultWhereInput>;
}>;


export type StatisticBidNotificationResultsQuery = { __typename?: 'Query', statisticBidNotificationResults: { __typename?: 'StatisticBidNotificationResultConnection', totalCount: number, nodes?: Array<{ __typename?: 'StatisticBidNotificationResult', id: string, version?: string | null, versions?: number | null, publishedAt?: any | null, bidNotification?: { __typename?: 'BidNotification', bidPackage?: { __typename?: 'BidPackage', name?: string | null, bidSelectionPlan?: { __typename?: 'BidSelectionPlan', procuringEntityName?: string | null, procuringEntityCode?: string | null } | null } | null } | null, selectedContractors?: Array<{ __typename?: 'StatisticOrganization', id: string, name?: string | null }> | null }> | null } };

export type StatisticBidNotificationResultQueryVariables = Exact<{
  where: BidNotificationResultWhereUniqueInput;
}>;


export type StatisticBidNotificationResultQuery = { __typename?: 'Query', statisticBidNotificationResult: { __typename?: 'StatisticBidNotificationResult', id: string, version?: string | null, versions?: number | null, publishedAt?: any | null, bidNotification?: { __typename?: 'BidNotification', bidPackage?: { __typename?: 'BidPackage', name?: string | null, bidSelectionPlan?: { __typename?: 'BidSelectionPlan', procuringEntityName?: string | null, procuringEntityCode?: string | null } | null } | null } | null, selectedContractors?: Array<{ __typename?: 'StatisticOrganization', id: string, name?: string | null }> | null } };

export type BidOpenPreNotificationResultsQueryVariables = Exact<{
  orderBy?: InputMaybe<Array<BidNotificationResultOrderByWithRelationInput> | BidNotificationResultOrderByWithRelationInput>;
  take?: InputMaybe<Scalars['Int']['input']>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CustomBidNotificationResultWhereInput>;
}>;


export type BidOpenPreNotificationResultsQuery = { __typename?: 'Query', bidOpenPreNotificationResults: { __typename?: 'StatisticBidNotificationResultConnection', totalCount: number, nodes?: Array<{ __typename?: 'StatisticBidNotificationResult', id: string, bidNotification?: { __typename?: 'BidNotification', openDate?: any | null, bidPackage?: { __typename?: 'BidPackage', name?: string | null, bidSelectionPlan?: { __typename?: 'BidSelectionPlan', procuringEntity?: { __typename?: 'Organization', name?: string | null } | null } | null } | null } | null, selectedContractors?: Array<{ __typename?: 'StatisticOrganization', id: string, name?: string | null }> | null }> | null } };

export type BidOpenPreNotificationResultQueryVariables = Exact<{
  where: BidNotificationResultWhereUniqueInput;
}>;


export type BidOpenPreNotificationResultQuery = { __typename?: 'Query', bidOpenPreNotificationResult: { __typename?: 'StatisticBidNotificationResult', id: string, bidNotification?: { __typename?: 'BidNotification', openDate?: any | null, bidPackage?: { __typename?: 'BidPackage', name?: string | null, bidSelectionPlan?: { __typename?: 'BidSelectionPlan', procuringEntity?: { __typename?: 'Organization', name?: string | null } | null } | null } | null } | null, selectedContractors?: Array<{ __typename?: 'StatisticOrganization', id: string, name?: string | null }> | null } };

export type ProjectFieldsFragment = { __typename?: 'Project', id: string, name?: string | null, investorName?: string | null, totalInvestment?: any | null, provinceCode?: string | null, groupCode?: string | null, publishedAt?: any | null, province?: { __typename?: 'CatArea', code: string } | null };

export type StatisticBidNotificationFieldsFragment = { __typename?: 'StatisticBidNotification', id: string, isLatest: boolean, version?: string | null, code?: string | null, isPreNotification: boolean, statusCode?: string | null, versions?: number | null, closeDate?: any | null, openDate?: any | null, decisionDate?: any | null, bidPackage?: { __typename?: 'BidPackage', id: string, bidFieldCode?: string | null, bidFormCode?: string | null, name?: string | null, bidPrice?: any | null, provinceId?: string | null, isInternet: boolean, bidSelectionPlan?: { __typename?: 'BidSelectionPlan', id: string, project?: { __typename?: 'Project', name?: string | null, investor?: { __typename?: 'Organization', name?: string | null, businessType?: { __typename?: 'CatBusinessType', name?: string | null } | null } | null } | null } | null } | null };

export type BidNotificationFieldsFragment = { __typename?: 'BidNotification', id: string, isLatest: boolean, code?: string | null, isPreNotification: boolean, statusCode?: string | null, closeDate?: any | null, openDate?: any | null, decisionDate?: any | null, bidPackage?: { __typename?: 'BidPackage', id: string, bidFieldCode?: string | null, bidFormCode?: string | null, name?: string | null, bidPrice?: any | null, provinceId?: string | null, isInternet: boolean, bidSelectionPlan?: { __typename?: 'BidSelectionPlan', id: string, project?: { __typename?: 'Project', name?: string | null, investor?: { __typename?: 'Organization', name?: string | null, businessType?: { __typename?: 'CatBusinessType', name?: string | null } | null } | null } | null } | null } | null };

export type StatisticBidSelectionPlanFieldsFragment = { __typename?: 'StatisticBidSelectionPlan', id: string, version?: string | null, code?: string | null, investorName?: string | null, totalInvestment?: any | null, typeCode?: string | null, decisionDate?: any | null, procuringEntityName?: string | null, versions?: number | null, bidPackagesAmount?: number | null, procuringEntityCode?: string | null, project?: { __typename?: 'Project', name?: string | null, province?: { __typename?: 'CatArea', name: string } | null } | null };

export type StatisticBidNotificationResultFieldsFragment = { __typename?: 'StatisticBidNotificationResult', id: string, version?: string | null, versions?: number | null, publishedAt?: any | null, bidNotification?: { __typename?: 'BidNotification', bidPackage?: { __typename?: 'BidPackage', name?: string | null, bidSelectionPlan?: { __typename?: 'BidSelectionPlan', procuringEntityName?: string | null, procuringEntityCode?: string | null } | null } | null } | null, selectedContractors?: Array<{ __typename?: 'StatisticOrganization', id: string, name?: string | null }> | null };

export type BidOpenPreNotificationResultFieldsFragment = { __typename?: 'StatisticBidNotificationResult', id: string, bidNotification?: { __typename?: 'BidNotification', openDate?: any | null, bidPackage?: { __typename?: 'BidPackage', name?: string | null, bidSelectionPlan?: { __typename?: 'BidSelectionPlan', procuringEntity?: { __typename?: 'Organization', name?: string | null } | null } | null } | null } | null, selectedContractors?: Array<{ __typename?: 'StatisticOrganization', id: string, name?: string | null }> | null };

export type StatisticOrganizationFieldsFragment = { __typename?: 'StatisticOrganization', id: string, name?: string | null, code?: string | null, waitingResultBidPackages?: number | null, winBidPackages?: number | null, loseBidPackages?: number | null, relatedContractors?: number | null, attendedBidPackages?: number | null, officeAddress?: string | null, repIdNo?: string | null, businessType?: { __typename?: 'CatBusinessType', name?: string | null } | null };

export type ProjectsQueryVariables = Exact<{
  where?: InputMaybe<ProjectWhereInput>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<ProjectOrderByWithRelationInput> | ProjectOrderByWithRelationInput>;
}>;


export type ProjectsQuery = { __typename?: 'Query', projects: { __typename?: 'ProjectConnection', totalCount: number, nodes?: Array<{ __typename?: 'Project', id: string, name?: string | null, investorName?: string | null, totalInvestment?: any | null, provinceCode?: string | null, groupCode?: string | null, publishedAt?: any | null, province?: { __typename?: 'CatArea', code: string } | null }> | null } };

export type StatisticOrganizationsQueryVariables = Exact<{
  take?: InputMaybe<Scalars['Int']['input']>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StatisticOrganizationWhereInput>;
  orderBy?: InputMaybe<Array<StatisticOrganizationOrderByWithRelationInput> | StatisticOrganizationOrderByWithRelationInput>;
}>;


export type StatisticOrganizationsQuery = { __typename?: 'Query', statisticOrganizations: { __typename?: 'StatisticOrganizationConnection', totalCount: number, nodes?: Array<{ __typename?: 'StatisticOrganization', id: string, name?: string | null, code?: string | null, waitingResultBidPackages?: number | null, winBidPackages?: number | null, loseBidPackages?: number | null, relatedContractors?: number | null, attendedBidPackages?: number | null, officeAddress?: string | null, repIdNo?: string | null, businessType?: { __typename?: 'CatBusinessType', name?: string | null } | null }> | null } };

export type StatisticOrganizationQueryVariables = Exact<{
  where: OrganizationWhereUniqueInput;
}>;


export type StatisticOrganizationQuery = { __typename?: 'Query', statisticOrganization: { __typename?: 'StatisticOrganization', id: string, name?: string | null, code?: string | null, waitingResultBidPackages?: number | null, winBidPackages?: number | null, loseBidPackages?: number | null, relatedContractors?: number | null, attendedBidPackages?: number | null, officeAddress?: string | null, repIdNo?: string | null, businessType?: { __typename?: 'CatBusinessType', name?: string | null } | null } };

export type StatisticAnalysisQueryVariables = Exact<{ [key: string]: never; }>;


export type StatisticAnalysisQuery = { __typename?: 'Query', statisticAnalysis: { __typename?: 'StatisticAnalysis', allBidSelectionPlans?: number | null, allBidNotifications?: number | null, allBidNotificationContractors?: number | null, allContractors?: number | null, bidSelectionPlans?: number | null, bidNotifications?: number | null, bidNotificationContractors?: number | null, attendedContractors?: number | null } };

export const ProjectFieldsFragmentDoc = `
    fragment ProjectFields on Project {
  id
  name
  investorName
  totalInvestment
  provinceCode
  province {
    code
  }
  groupCode
  publishedAt
}
    `;
export const StatisticBidNotificationFieldsFragmentDoc = `
    fragment StatisticBidNotificationFields on StatisticBidNotification {
  id
  isLatest
  version
  code
  isPreNotification
  statusCode
  versions
  closeDate
  openDate
  bidPackage {
    id
    bidFieldCode
    bidFormCode
    name
    bidPrice
    provinceId
    isInternet
    bidSelectionPlan {
      id
      project {
        name
        investor {
          name
          businessType {
            name
          }
        }
      }
    }
  }
  openDate
  decisionDate
}
    `;
export const BidNotificationFieldsFragmentDoc = `
    fragment BidNotificationFields on BidNotification {
  id
  isLatest
  code
  isPreNotification
  statusCode
  closeDate
  openDate
  bidPackage {
    id
    bidFieldCode
    bidFormCode
    name
    bidPrice
    provinceId
    isInternet
    bidSelectionPlan {
      id
      project {
        name
        investor {
          name
          businessType {
            name
          }
        }
      }
    }
  }
  openDate
  decisionDate
}
    `;
export const StatisticBidSelectionPlanFieldsFragmentDoc = `
    fragment StatisticBidSelectionPlanFields on StatisticBidSelectionPlan {
  id
  version
  code
  investorName
  totalInvestment
  typeCode
  decisionDate
  procuringEntityName
  decisionDate
  versions
  bidPackagesAmount
  project {
    name
    province {
      name
    }
  }
  procuringEntityCode
}
    `;
export const StatisticBidNotificationResultFieldsFragmentDoc = `
    fragment StatisticBidNotificationResultFields on StatisticBidNotificationResult {
  id
  version
  versions
  bidNotification {
    bidPackage {
      name
      bidSelectionPlan {
        procuringEntityName
        procuringEntityCode
      }
    }
  }
  publishedAt
  selectedContractors {
    id
    name
  }
}
    `;
export const BidOpenPreNotificationResultFieldsFragmentDoc = `
    fragment BidOpenPreNotificationResultFields on StatisticBidNotificationResult {
  id
  bidNotification {
    bidPackage {
      name
      bidSelectionPlan {
        procuringEntity {
          name
        }
      }
    }
    openDate
  }
  selectedContractors {
    id
    name
  }
}
    `;
export const StatisticOrganizationFieldsFragmentDoc = `
    fragment StatisticOrganizationFields on StatisticOrganization {
  id
  name
  code
  waitingResultBidPackages
  winBidPackages
  loseBidPackages
  relatedContractors
  attendedBidPackages
  officeAddress
  repIdNo
  businessType {
    name
  }
}
    `;
export const StatisticBidNotificationsDocument = `
    query statisticBidNotifications($orderBy: [BidNotificationOrderByWithRelationInput!], $take: Int, $skip: Int, $where: BidNotificationWhereInput) {
  statisticBidNotifications(
    where: $where
    skip: $skip
    take: $take
    orderBy: $orderBy
  ) {
    nodes {
      ...StatisticBidNotificationFields
    }
    totalCount
  }
}
    ${StatisticBidNotificationFieldsFragmentDoc}`;
export const useStatisticBidNotificationsQuery = <
      TData = StatisticBidNotificationsQuery,
      TError = unknown
    >(
      variables?: StatisticBidNotificationsQueryVariables,
      options?: UseQueryOptions<StatisticBidNotificationsQuery, TError, TData>
    ) =>
    useQuery<StatisticBidNotificationsQuery, TError, TData>(
      variables === undefined ? ['statisticBidNotifications'] : ['statisticBidNotifications', variables],
      useFetchData<StatisticBidNotificationsQuery, StatisticBidNotificationsQueryVariables>(StatisticBidNotificationsDocument, variables),
      options
    );
useStatisticBidNotificationsQuery.document = StatisticBidNotificationsDocument;


useStatisticBidNotificationsQuery.getKey = (variables?: StatisticBidNotificationsQueryVariables) => variables === undefined ? ['statisticBidNotifications'] : ['statisticBidNotifications', variables];
;

useStatisticBidNotificationsQuery.fetcher = (variables?: StatisticBidNotificationsQueryVariables, options?: RequestInit['headers']) => useFetchData<StatisticBidNotificationsQuery, StatisticBidNotificationsQueryVariables>(StatisticBidNotificationsDocument, variables, options);
export const BidNotificationDocument = `
    query bidNotification($where: BidNotificationWhereUniqueInput!) {
  bidNotification(where: $where) {
    ...BidNotificationFields
  }
}
    ${BidNotificationFieldsFragmentDoc}`;
export const useBidNotificationQuery = <
      TData = BidNotificationQuery,
      TError = unknown
    >(
      variables: BidNotificationQueryVariables,
      options?: UseQueryOptions<BidNotificationQuery, TError, TData>
    ) =>
    useQuery<BidNotificationQuery, TError, TData>(
      ['bidNotification', variables],
      useFetchData<BidNotificationQuery, BidNotificationQueryVariables>(BidNotificationDocument, variables),
      options
    );
useBidNotificationQuery.document = BidNotificationDocument;


useBidNotificationQuery.getKey = (variables: BidNotificationQueryVariables) => ['bidNotification', variables];
;

useBidNotificationQuery.fetcher = (variables: BidNotificationQueryVariables, options?: RequestInit['headers']) => useFetchData<BidNotificationQuery, BidNotificationQueryVariables>(BidNotificationDocument, variables, options);
export const StatisticBidSelectionPlansDocument = `
    query statisticBidSelectionPlans($orderBy: [BidSelectionPlanOrderByWithRelationInput!], $take: Int, $skip: Int, $where: BidSelectionPlanWhereInput) {
  statisticBidSelectionPlans(
    where: $where
    skip: $skip
    take: $take
    orderBy: $orderBy
  ) {
    nodes {
      ...StatisticBidSelectionPlanFields
    }
    totalCount
  }
}
    ${StatisticBidSelectionPlanFieldsFragmentDoc}`;
export const useStatisticBidSelectionPlansQuery = <
      TData = StatisticBidSelectionPlansQuery,
      TError = unknown
    >(
      variables?: StatisticBidSelectionPlansQueryVariables,
      options?: UseQueryOptions<StatisticBidSelectionPlansQuery, TError, TData>
    ) =>
    useQuery<StatisticBidSelectionPlansQuery, TError, TData>(
      variables === undefined ? ['statisticBidSelectionPlans'] : ['statisticBidSelectionPlans', variables],
      useFetchData<StatisticBidSelectionPlansQuery, StatisticBidSelectionPlansQueryVariables>(StatisticBidSelectionPlansDocument, variables),
      options
    );
useStatisticBidSelectionPlansQuery.document = StatisticBidSelectionPlansDocument;


useStatisticBidSelectionPlansQuery.getKey = (variables?: StatisticBidSelectionPlansQueryVariables) => variables === undefined ? ['statisticBidSelectionPlans'] : ['statisticBidSelectionPlans', variables];
;

useStatisticBidSelectionPlansQuery.fetcher = (variables?: StatisticBidSelectionPlansQueryVariables, options?: RequestInit['headers']) => useFetchData<StatisticBidSelectionPlansQuery, StatisticBidSelectionPlansQueryVariables>(StatisticBidSelectionPlansDocument, variables, options);
export const StatisticBidSelectionPlanDocument = `
    query statisticBidSelectionPlan($where: BidSelectionPlanWhereUniqueInput!) {
  statisticBidSelectionPlan(where: $where) {
    ...StatisticBidSelectionPlanFields
  }
}
    ${StatisticBidSelectionPlanFieldsFragmentDoc}`;
export const useStatisticBidSelectionPlanQuery = <
      TData = StatisticBidSelectionPlanQuery,
      TError = unknown
    >(
      variables: StatisticBidSelectionPlanQueryVariables,
      options?: UseQueryOptions<StatisticBidSelectionPlanQuery, TError, TData>
    ) =>
    useQuery<StatisticBidSelectionPlanQuery, TError, TData>(
      ['statisticBidSelectionPlan', variables],
      useFetchData<StatisticBidSelectionPlanQuery, StatisticBidSelectionPlanQueryVariables>(StatisticBidSelectionPlanDocument, variables),
      options
    );
useStatisticBidSelectionPlanQuery.document = StatisticBidSelectionPlanDocument;


useStatisticBidSelectionPlanQuery.getKey = (variables: StatisticBidSelectionPlanQueryVariables) => ['statisticBidSelectionPlan', variables];
;

useStatisticBidSelectionPlanQuery.fetcher = (variables: StatisticBidSelectionPlanQueryVariables, options?: RequestInit['headers']) => useFetchData<StatisticBidSelectionPlanQuery, StatisticBidSelectionPlanQueryVariables>(StatisticBidSelectionPlanDocument, variables, options);
export const StatisticBidNotificationResultsDocument = `
    query statisticBidNotificationResults($orderBy: [BidNotificationResultOrderByWithRelationInput!], $take: Int, $skip: Int, $where: BidNotificationResultWhereInput) {
  statisticBidNotificationResults(
    where: $where
    skip: $skip
    take: $take
    orderBy: $orderBy
  ) {
    nodes {
      ...StatisticBidNotificationResultFields
    }
    totalCount
  }
}
    ${StatisticBidNotificationResultFieldsFragmentDoc}`;
export const useStatisticBidNotificationResultsQuery = <
      TData = StatisticBidNotificationResultsQuery,
      TError = unknown
    >(
      variables?: StatisticBidNotificationResultsQueryVariables,
      options?: UseQueryOptions<StatisticBidNotificationResultsQuery, TError, TData>
    ) =>
    useQuery<StatisticBidNotificationResultsQuery, TError, TData>(
      variables === undefined ? ['statisticBidNotificationResults'] : ['statisticBidNotificationResults', variables],
      useFetchData<StatisticBidNotificationResultsQuery, StatisticBidNotificationResultsQueryVariables>(StatisticBidNotificationResultsDocument, variables),
      options
    );
useStatisticBidNotificationResultsQuery.document = StatisticBidNotificationResultsDocument;


useStatisticBidNotificationResultsQuery.getKey = (variables?: StatisticBidNotificationResultsQueryVariables) => variables === undefined ? ['statisticBidNotificationResults'] : ['statisticBidNotificationResults', variables];
;

useStatisticBidNotificationResultsQuery.fetcher = (variables?: StatisticBidNotificationResultsQueryVariables, options?: RequestInit['headers']) => useFetchData<StatisticBidNotificationResultsQuery, StatisticBidNotificationResultsQueryVariables>(StatisticBidNotificationResultsDocument, variables, options);
export const StatisticBidNotificationResultDocument = `
    query statisticBidNotificationResult($where: BidNotificationResultWhereUniqueInput!) {
  statisticBidNotificationResult(where: $where) {
    ...StatisticBidNotificationResultFields
  }
}
    ${StatisticBidNotificationResultFieldsFragmentDoc}`;
export const useStatisticBidNotificationResultQuery = <
      TData = StatisticBidNotificationResultQuery,
      TError = unknown
    >(
      variables: StatisticBidNotificationResultQueryVariables,
      options?: UseQueryOptions<StatisticBidNotificationResultQuery, TError, TData>
    ) =>
    useQuery<StatisticBidNotificationResultQuery, TError, TData>(
      ['statisticBidNotificationResult', variables],
      useFetchData<StatisticBidNotificationResultQuery, StatisticBidNotificationResultQueryVariables>(StatisticBidNotificationResultDocument, variables),
      options
    );
useStatisticBidNotificationResultQuery.document = StatisticBidNotificationResultDocument;


useStatisticBidNotificationResultQuery.getKey = (variables: StatisticBidNotificationResultQueryVariables) => ['statisticBidNotificationResult', variables];
;

useStatisticBidNotificationResultQuery.fetcher = (variables: StatisticBidNotificationResultQueryVariables, options?: RequestInit['headers']) => useFetchData<StatisticBidNotificationResultQuery, StatisticBidNotificationResultQueryVariables>(StatisticBidNotificationResultDocument, variables, options);
export const BidOpenPreNotificationResultsDocument = `
    query bidOpenPreNotificationResults($orderBy: [BidNotificationResultOrderByWithRelationInput!], $take: Int, $skip: Int, $where: CustomBidNotificationResultWhereInput) {
  bidOpenPreNotificationResults(
    where: $where
    skip: $skip
    take: $take
    orderBy: $orderBy
  ) {
    nodes {
      ...BidOpenPreNotificationResultFields
    }
    totalCount
  }
}
    ${BidOpenPreNotificationResultFieldsFragmentDoc}`;
export const useBidOpenPreNotificationResultsQuery = <
      TData = BidOpenPreNotificationResultsQuery,
      TError = unknown
    >(
      variables?: BidOpenPreNotificationResultsQueryVariables,
      options?: UseQueryOptions<BidOpenPreNotificationResultsQuery, TError, TData>
    ) =>
    useQuery<BidOpenPreNotificationResultsQuery, TError, TData>(
      variables === undefined ? ['bidOpenPreNotificationResults'] : ['bidOpenPreNotificationResults', variables],
      useFetchData<BidOpenPreNotificationResultsQuery, BidOpenPreNotificationResultsQueryVariables>(BidOpenPreNotificationResultsDocument, variables),
      options
    );
useBidOpenPreNotificationResultsQuery.document = BidOpenPreNotificationResultsDocument;


useBidOpenPreNotificationResultsQuery.getKey = (variables?: BidOpenPreNotificationResultsQueryVariables) => variables === undefined ? ['bidOpenPreNotificationResults'] : ['bidOpenPreNotificationResults', variables];
;

useBidOpenPreNotificationResultsQuery.fetcher = (variables?: BidOpenPreNotificationResultsQueryVariables, options?: RequestInit['headers']) => useFetchData<BidOpenPreNotificationResultsQuery, BidOpenPreNotificationResultsQueryVariables>(BidOpenPreNotificationResultsDocument, variables, options);
export const BidOpenPreNotificationResultDocument = `
    query bidOpenPreNotificationResult($where: BidNotificationResultWhereUniqueInput!) {
  bidOpenPreNotificationResult(where: $where) {
    ...BidOpenPreNotificationResultFields
  }
}
    ${BidOpenPreNotificationResultFieldsFragmentDoc}`;
export const useBidOpenPreNotificationResultQuery = <
      TData = BidOpenPreNotificationResultQuery,
      TError = unknown
    >(
      variables: BidOpenPreNotificationResultQueryVariables,
      options?: UseQueryOptions<BidOpenPreNotificationResultQuery, TError, TData>
    ) =>
    useQuery<BidOpenPreNotificationResultQuery, TError, TData>(
      ['bidOpenPreNotificationResult', variables],
      useFetchData<BidOpenPreNotificationResultQuery, BidOpenPreNotificationResultQueryVariables>(BidOpenPreNotificationResultDocument, variables),
      options
    );
useBidOpenPreNotificationResultQuery.document = BidOpenPreNotificationResultDocument;


useBidOpenPreNotificationResultQuery.getKey = (variables: BidOpenPreNotificationResultQueryVariables) => ['bidOpenPreNotificationResult', variables];
;

useBidOpenPreNotificationResultQuery.fetcher = (variables: BidOpenPreNotificationResultQueryVariables, options?: RequestInit['headers']) => useFetchData<BidOpenPreNotificationResultQuery, BidOpenPreNotificationResultQueryVariables>(BidOpenPreNotificationResultDocument, variables, options);
export const ProjectsDocument = `
    query projects($where: ProjectWhereInput, $skip: Int, $take: Int, $orderBy: [ProjectOrderByWithRelationInput!]) {
  projects(where: $where, skip: $skip, take: $take, orderBy: $orderBy) {
    nodes {
      ...ProjectFields
    }
    totalCount
  }
}
    ${ProjectFieldsFragmentDoc}`;
export const useProjectsQuery = <
      TData = ProjectsQuery,
      TError = unknown
    >(
      variables?: ProjectsQueryVariables,
      options?: UseQueryOptions<ProjectsQuery, TError, TData>
    ) =>
    useQuery<ProjectsQuery, TError, TData>(
      variables === undefined ? ['projects'] : ['projects', variables],
      useFetchData<ProjectsQuery, ProjectsQueryVariables>(ProjectsDocument, variables),
      options
    );
useProjectsQuery.document = ProjectsDocument;


useProjectsQuery.getKey = (variables?: ProjectsQueryVariables) => variables === undefined ? ['projects'] : ['projects', variables];
;

useProjectsQuery.fetcher = (variables?: ProjectsQueryVariables, options?: RequestInit['headers']) => useFetchData<ProjectsQuery, ProjectsQueryVariables>(ProjectsDocument, variables, options);
export const StatisticOrganizationsDocument = `
    query statisticOrganizations($take: Int, $skip: Int, $where: StatisticOrganizationWhereInput, $orderBy: [StatisticOrganizationOrderByWithRelationInput!]) {
  statisticOrganizations(
    take: $take
    skip: $skip
    where: $where
    orderBy: $orderBy
  ) {
    nodes {
      ...StatisticOrganizationFields
    }
    totalCount
  }
}
    ${StatisticOrganizationFieldsFragmentDoc}`;
export const useStatisticOrganizationsQuery = <
      TData = StatisticOrganizationsQuery,
      TError = unknown
    >(
      variables?: StatisticOrganizationsQueryVariables,
      options?: UseQueryOptions<StatisticOrganizationsQuery, TError, TData>
    ) =>
    useQuery<StatisticOrganizationsQuery, TError, TData>(
      variables === undefined ? ['statisticOrganizations'] : ['statisticOrganizations', variables],
      useFetchData<StatisticOrganizationsQuery, StatisticOrganizationsQueryVariables>(StatisticOrganizationsDocument, variables),
      options
    );
useStatisticOrganizationsQuery.document = StatisticOrganizationsDocument;


useStatisticOrganizationsQuery.getKey = (variables?: StatisticOrganizationsQueryVariables) => variables === undefined ? ['statisticOrganizations'] : ['statisticOrganizations', variables];
;

useStatisticOrganizationsQuery.fetcher = (variables?: StatisticOrganizationsQueryVariables, options?: RequestInit['headers']) => useFetchData<StatisticOrganizationsQuery, StatisticOrganizationsQueryVariables>(StatisticOrganizationsDocument, variables, options);
export const StatisticOrganizationDocument = `
    query statisticOrganization($where: OrganizationWhereUniqueInput!) {
  statisticOrganization(where: $where) {
    ...StatisticOrganizationFields
  }
}
    ${StatisticOrganizationFieldsFragmentDoc}`;
export const useStatisticOrganizationQuery = <
      TData = StatisticOrganizationQuery,
      TError = unknown
    >(
      variables: StatisticOrganizationQueryVariables,
      options?: UseQueryOptions<StatisticOrganizationQuery, TError, TData>
    ) =>
    useQuery<StatisticOrganizationQuery, TError, TData>(
      ['statisticOrganization', variables],
      useFetchData<StatisticOrganizationQuery, StatisticOrganizationQueryVariables>(StatisticOrganizationDocument, variables),
      options
    );
useStatisticOrganizationQuery.document = StatisticOrganizationDocument;


useStatisticOrganizationQuery.getKey = (variables: StatisticOrganizationQueryVariables) => ['statisticOrganization', variables];
;

useStatisticOrganizationQuery.fetcher = (variables: StatisticOrganizationQueryVariables, options?: RequestInit['headers']) => useFetchData<StatisticOrganizationQuery, StatisticOrganizationQueryVariables>(StatisticOrganizationDocument, variables, options);
export const StatisticAnalysisDocument = `
    query statisticAnalysis {
  statisticAnalysis {
    allBidSelectionPlans
    allBidNotifications
    allBidNotificationContractors
    allContractors
    bidSelectionPlans
    bidNotifications
    bidNotificationContractors
    attendedContractors
  }
}
    `;
export const useStatisticAnalysisQuery = <
      TData = StatisticAnalysisQuery,
      TError = unknown
    >(
      variables?: StatisticAnalysisQueryVariables,
      options?: UseQueryOptions<StatisticAnalysisQuery, TError, TData>
    ) =>
    useQuery<StatisticAnalysisQuery, TError, TData>(
      variables === undefined ? ['statisticAnalysis'] : ['statisticAnalysis', variables],
      useFetchData<StatisticAnalysisQuery, StatisticAnalysisQueryVariables>(StatisticAnalysisDocument, variables),
      options
    );
useStatisticAnalysisQuery.document = StatisticAnalysisDocument;


useStatisticAnalysisQuery.getKey = (variables?: StatisticAnalysisQueryVariables) => variables === undefined ? ['statisticAnalysis'] : ['statisticAnalysis', variables];
;

useStatisticAnalysisQuery.fetcher = (variables?: StatisticAnalysisQueryVariables, options?: RequestInit['headers']) => useFetchData<StatisticAnalysisQuery, StatisticAnalysisQueryVariables>(StatisticAnalysisDocument, variables, options);